@import url(https://fonts.googleapis.com/css?family=Roboto:100,300,400,500);

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -ms-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInDownBig {
  0% {
    opacity: 0;
    -ms-transform: translateY(-2000px);
    transform: translateY(-2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    -ms-transform: translateX(-20px);
    transform: translateX(-20px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    -ms-transform: translateX(-2000px);
    transform: translateX(-2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInRight {
  0% {
    opacity: 0;
    -ms-transform: translateX(20px);
    transform: translateX(20px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInRightBig {
  0% {
    opacity: 0;
    -ms-transform: translateX(2000px);
    transform: translateX(2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    -ms-transform: translateY(20px);
    transform: translateY(20px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInUpBig {
  0% {
    opacity: 0;
    -ms-transform: translateY(2000px);
    transform: translateY(2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes fadeOutDown {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(20px);
    transform: translateY(20px); } }

@keyframes fadeOutDownBig {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(2000px);
    transform: translateY(2000px); } }

@keyframes fadeOutLeft {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(-20px);
    transform: translateX(-20px); } }

@keyframes fadeOutLeftBig {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(-2000px);
    transform: translateX(-2000px); } }

@keyframes fadeOutRight {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(20px);
    transform: translateX(20px); } }

@keyframes fadeOutRightBig {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(2000px);
    transform: translateX(2000px); } }

@keyframes fadeOutUp {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(-20px);
    transform: translateY(-20px); } }

@keyframes fadeOutUpBig {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(-2000px);
    transform: translateY(-2000px); } }

@keyframes zoomIn {
  0% {
    opacity: 0;
    -ms-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3); }
  50% {
    opacity: 1; } }

@keyframes zoomInDown {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0); } }

@keyframes zoomInLeft {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0); } }

@keyframes zoomInRight {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0); } }

@keyframes zoomInUp {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0); } }

@keyframes zoomOut {
  0% {
    opacity: 1; }
  50% {
    opacity: 0;
    -ms-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3); }
  100% {
    opacity: 0; } }

@keyframes zoomOutDown {
  40% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0); }
  100% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    -ms-transform-origin: center bottom;
    transform-origin: center bottom; } }

@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0); }
  100% {
    opacity: 0;
    -ms-transform: scale(0.1) translate3d(-2000px, 0, 0);
    transform: scale(0.1) translate3d(-2000px, 0, 0);
    -ms-transform-origin: left center;
    transform-origin: left center; } }

@keyframes zoomOutRight {
  40% {
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0); }
  100% {
    opacity: 0;
    -ms-transform: scale(0.1) translate3d(2000px, 0, 0);
    transform: scale(0.1) translate3d(2000px, 0, 0);
    -ms-transform-origin: right center;
    transform-origin: right center; } }

@keyframes zoomOutUp {
  40% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0); }
  100% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    -ms-transform-origin: center bottom;
    transform-origin: center bottom; } }

/*--------------------------------
	Framework
*/
/**
 * Foundation for Sites by ZURB
 * Version 6.2.4
 * foundation.zurb.com
 * Licensed under MIT Open Source
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS and IE text size adjust after device orientation change,
   *    without disabling user zoom.
   */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
   * Remove default margin.
   */
body {
  margin: 0; }

/* HTML5 display definitions
     ========================================================================== */
/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
   */
[hidden],
template {
  display: none; }

/* Links
     ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * Improve readability of focused elements when they are also in an
   * active/hover state.
   */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
     ========================================================================== */
/**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */
abbr[title] {
  border-bottom: 1px dotted; }

/**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */
b,
strong {
  font-weight: bold; }

/**
   * Address styling not present in Safari and Chrome.
   */
dfn {
  font-style: italic; }

/**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
   * Address inconsistent and variable font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
     ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
     ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
   * Address differences between Firefox and other browsers.
   */
hr {
  box-sizing: content-box;
  height: 0; }

/**
   * Contain overflow in all browsers.
   */
pre {
  overflow: auto; }

/**
   * Address odd `em`-unit font size rendering in all browsers.
   */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
     ========================================================================== */
/**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */
/**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */
button,
select {
  text-transform: none; }

/**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
   * Re-set default cursor for disabled elements.
   */
button[disabled],
html input[disabled] {
  cursor: not-allowed; }

/**
   * Remove inner padding and border in Firefox 4+.
   */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
   */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * Define consistent border, margin, and padding.
   * [NOTE] We don't enable this ruleset in Foundation, because we want the <fieldset> element to have plain styling.
   */
/* fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  } */
/**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */
optgroup {
  font-weight: bold; }

/* Tables
     ========================================================================== */
/**
   * Remove most spacing between table cells.
   */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em"; }

html {
  font-size: 100%;
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }
  [data-whatinput='mouse'] button {
    outline: 0; }

.is-visible {
  display: block !important; }

.is-hidden {
  display: none !important; }

/*--------------------------------
	App
*/
/*--------------------------------
  
  Useful Mixins
*/
/*--------------------------------

 	Usage
   	@include font-face('Ubuntu', '../fonts');
   	
 	Output CSS
   	@font-face {
    	font-family: 'Ubuntu';
     	src: url('../fonts.eot');
     	src: url('../fonts.eot?#iefix') format('embedded-opentype'),
        	url('../fonts.woff2') format('woff2'),
          	url('../fonts.woff') format('woff'),
          	url('../fonts.ttf') format('truetype'),
          	url('../fonts.svg#Ubuntu) format('svg');
     	font-weight: 400;
     	font-style: normal;
   	}

   	@media screen and (-webkit-min-device-pixel-ratio: 0) {
    	@font-face {
       		font-family: 'Ubuntu';
       		src: url('../fonts.svg#Ubuntu') format('svg');
     	}
   	}
*/
/*--------------------------------
	Antialiased
*/
/*--------------------------------

	Font Size with rem
	
	Usage
	p {
	  @include font-size(14px)
	}

	Output
	p {
	  font-size: 14px; //Will be overridden if browser supports rem
	  font-size: 0.8rem;
	}
*/
/*--------------------------------

	Line-height values in both pixels and rems

	Usage
  	.foo {
    	@include line-height(16);
  	}

	Output
  	.foo {
	    line-height: 16px;
	    line-height: 1rem;
  	}
*/
/*--------------------------------
  Headings
*/
/*--------------------------------
	Text Indent
*/
/*--------------------------------

	Usage
   .foo {
    	@include word-wrap();
   	}

 	Output
   .foo {
    	hyphens: auto;
    	overflow-wrap: break-word;
    	word-wrap: break-word;
   }
*/
/*--------------------------------
	Clearfix
*/
/*--------------------------------
	Hide text
	example:
	.element {
		@include hide-text;
	}
*/
/*--------------------------------
	Hide from both screenreaders and browsers
*/
/*--------------------------------
	Hide only visually, but have it available for screenreaders
*/
/*--------------------------------
	Allow the element to be focusable when navigated to via the keyboard
*/
/*--------------------------------
	Hide visually and from screenreaders, but maintain layout
*/
/*--------------------------------

	Form input placeholder text
	example:
	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}

*/
/*--------------------------------
	Fluid Property
	http://www.adrenalinmedia.com.au/the-agency/insights/this-changes-everything-css-fluid-properties.aspx
	HTML:
	<h1 class="element">
		<span>Text to replace</span>
	</h1>
	example:
	h1 {
		@include fp(font-size, 50, 100); // 50px at 320, 100px at 1920;
	}
	output:
	h1 {
		font-size: calc(3.125vw + 40px); //This is the magic!
	}
	@media (max-width:320px){ //Clips the start to the min value
		font-size:50px;
	}
	@media (min-width:1920px){ //Clips the end to the max value
		font-size:100px;
	}
*/
/*--------------------------------
  Breakpoints
*/
/*--------------------------------
    Zero out
*/
/*--------------------------------
	
	Pseudo

	Usage
	div::after {
	    @include pseudo;
	    top: -1rem; left: -1rem;
	    width: 1rem; height: 1rem;
	}
*/
/*--------------------------------

    Usage
   .foo {
        @include width(1500px, 300px);
    }

    Output
   .foo {
        max-width: 1500px;
        min-width: 300px;
        width: 100%;
   }
*/
/*--------------------------------
	Vertical Align
*/
/*--------------------------------
	Center Block
*/
/*--------------------------------
	Absolute Positioning
*/
/*--------------------------------
  Center Align
*/
/*--------------------------------
    Menu list
*/
/*--------------------------------
    Center list
*/
/*--------------------------------
	B/W Opacity
*/
/*--------------------------------
	Prefixers (to be used with Bourbon)
*/
/* -------------------------------

	Circle

_------------------------------- */
/* -------------------------------

	Animations

	Usage:
	@include keyframes(move-the-object) {
	  0%   { left: 100px; }
	  100% { left: 200px; }
	}

	.object-to-animate {
	  @include animation('move-the-object .5s 1', 'move-the-object-again .5s 1 .5s');
	} 
	
_------------------------------- */
/*--------------------------------
	Variables
*/
/*--------------------------------
    Site
*/
/*--------------------------------
	Breakpoints
*/
/*--------------------------------
	Paths
*/
/*--------------------------------
	Google Fonts
*/
/*--------------------------------
    z-index 
*/
/*--------------------------------
    header height
*/
/*--------------------------------
    intro height
*/
/*--------------------------------
    secondary bar
*/
/*--------------------------------
    Buttons
*/
body {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "Roboto", sans-serif; }
  body * {
    color: #fefefe; }

h1 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h1 sup {
    font-size: 0.8125rem;
    top: -20px; }

h2 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h2 sup {
    font-size: 0.8125rem;
    top: -20px; }

h3 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h3 sup {
    font-size: 0.8125rem;
    top: -20px; }

h4 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h4 sup {
    font-size: 0.8125rem;
    top: -20px; }

h5 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h5 sup {
    font-size: 0.8125rem;
    top: -20px; }

h6 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h6 sup {
    font-size: 0.8125rem;
    top: -20px; }

h1 {
  margin: 0 0 2.5rem; }

h2 {
  margin: 0 0 2.5rem; }

h3 {
  margin: 0 0 2.5rem; }

h4 {
  margin: 0 0 2.5rem; }

h5 {
  margin: 0 0 2.5rem; }

h6 {
  margin: 0 0 2.5rem; }

h2 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h2 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h2 {
      font-size: 2.55556rem; } }
  h2.sub-title {
    margin-bottom: 2em; }

h3 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h3 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h3 {
      font-size: 2.55556rem; } }
  h3.sub-title {
    margin-bottom: 2em; }

h4 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h4 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h4 {
      font-size: 2.55556rem; } }
  h4.sub-title {
    margin-bottom: 2em; }

h5 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h5 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h5 {
      font-size: 2.55556rem; } }
  h5.sub-title {
    margin-bottom: 2em; }

h6 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h6 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h6 {
      font-size: 2.55556rem; } }
  h6.sub-title {
    margin-bottom: 2em; }

h3 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h3 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h3 {
      font-size: 1.55556rem; } }

h4 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h4 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h4 {
      font-size: 1.55556rem; } }

h5 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h5 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h5 {
      font-size: 1.55556rem; } }

h6 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h6 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h6 {
      font-size: 1.55556rem; } }

sup {
  font-size: 0.625rem;
  position: relative;
  top: -10px; }

a {
  transition: all 0.3s ease-in-out;
  color: #fefefe;
  text-decoration: none; }

p {
  font-size: 100%;
  color: #cbcbcb;
  font-weight: 400;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);
  margin-top: 0; }
  @media all and (min-width: 667px) {
    p {
      font-size: 112.5%; } }
  @media all and (min-width: 1024px) {
    p {
      font-size: 112.5%; } }

hr {
  background-image: linear-gradient(to right, transparent, rgba(128, 128, 128, 0.35), transparent);
  border: 0;
  margin: 2.5em 0;
  height: 1px; }

.cd-main-nav a {
  font-size: 0.875rem;
  font-weight: 400;
  text-transform: uppercase; }

.cta, .cta-alt {
  width: 200px;
  white-space: nowrap; }

.cta {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: rgba(254, 254, 254, 0.3);
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 2.2rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer; }
  .cta:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-layers.svg);
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cta:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cta:active {
    background: #990000;
    top: 2px; }
    .cta:active:before {
      color: #703b87; }
  .cta:hover {
    background-color: #C00; }
    .cta:hover:before {
      right: 0;
      left: 0; }
    .cta:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cta span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

.cta-alt {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: #7DC855;
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 2.2rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer;
  color: #fefefe !important;
  text-align: center; }
  .cta-alt:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-mail.svg);
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cta-alt:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cta-alt:active {
    background: #004415;
    top: 2px; }
    .cta-alt:active:before {
      color: #703b87; }
  .cta-alt:hover {
    background-color: #007725; }
    .cta-alt:hover:before {
      right: 0;
      left: 0; }
    .cta-alt:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cta-alt span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

.site-nav li a, .site-nav li b, .cd-slide-nav li a, .cd-slide-nav li b, .page-nav li a, .page-nav li b {
  color: rgba(254, 254, 254, 0.45);
  font-size: 0.8125rem;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase; }
  .site-nav li a:hover, .site-nav li b:hover, .cd-slide-nav li a:hover, .cd-slide-nav li b:hover, .page-nav li a:hover, .page-nav li b:hover {
    color: #fefefe; }
  .site-nav li a:hover b, .site-nav li a.active b, .site-nav li b:hover b, .site-nav li b.active b, .cd-slide-nav li a:hover b, .cd-slide-nav li a.active b, .cd-slide-nav li b:hover b, .cd-slide-nav li b.active b, .page-nav li a:hover b, .page-nav li a.active b, .page-nav li b:hover b, .page-nav li b.active b {
    color: #fefefe; }

/*--------------------------------

	Hero and Sections
    
--------------------------------*/
#cd-intro .title h1 {
  font-size: 3rem;
  line-height: 1.1;
  font-weight: 400;
  text-transform: uppercase;
  padding: 0 1em; }
  @media all and (min-width: 768px) {
    #cd-intro .title h1 {
      font-size: 3.25rem;
      line-height: 2; } }
  @media all and (min-width: 1024px) {
    #cd-intro .title h1 {
      font-size: 4.33333rem;
      line-height: 1.5; } }
  #cd-intro .title h1 span {
    padding: 0 0 .3em; }
  #cd-intro .title h1 .tag {
    font-size: 1rem;
    font-weight: 300;
    text-transform: normal;
    display: block; }
    @media all and (min-width: 768px) {
      #cd-intro .title h1 .tag {
        font-size: 1.25rem; } }
    @media all and (min-width: 1024px) {
      #cd-intro .title h1 .tag {
        font-size: 1.77778rem; } }
    @media all and (min-width: 668px) {
      #cd-intro .title h1 .tag {
        margin-right: auto;
        margin-left: auto;
        display: block;
        max-width: 80%; } }
  #cd-intro .title h1 .end-tag i {
    font-style: normal; }

#cd-intro.is-loaded .tag:nth-child(1) {
  animation-name: fadeInDown;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 0.5s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

#cd-intro.is-loaded .tag:nth-child(2) {
  animation-name: fadeInDown;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 1s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

#cd-intro.is-loaded .end-tag {
  animation-name: fadeIn;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 1.5s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }
  #cd-intro.is-loaded .end-tag i {
    animation-name: fadeIn;
    animation-iteration-count: 1;
    animation-duration: 0.8s;
    animation-delay: 2s;
    animation-timing-function: ease;
    animation-fill-mode: both;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden; }

.cd-section:not(.hero) .title {
  font-size: 1.75rem; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero) .title {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero) .title {
      font-size: 2.55556rem; } }

.cd-section:not(.hero) .small-title {
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin-bottom: 2.5rem;
  padding: .5em 0;
  display: block; }

.cd-section:not(.hero) p {
  font-size: 1.25rem; }

.cd-section:not(.hero).summary .title {
  font-size: 3rem;
  line-height: 1.1;
  text-transform: uppercase; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero).summary .title {
      font-size: 3.25rem;
      line-height: 2; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero).summary .title {
      font-size: 4.33333rem;
      line-height: 1.5; } }

.cd-section:not(.hero).summary p {
  font-size: 1rem; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero).summary p {
      font-size: 1.25rem; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero).summary p {
      font-size: 1.77778rem; } }

.cd-section:not(.hero).summary footer a {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: #7DC855;
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 2.2rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer; }
  .cd-section:not(.hero).summary footer a:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-mail.svg);
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cd-section:not(.hero).summary footer a:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cd-section:not(.hero).summary footer a:active {
    background: #004415;
    top: 2px; }
    .cd-section:not(.hero).summary footer a:active:before {
      color: #703b87; }
  .cd-section:not(.hero).summary footer a:hover {
    background-color: #007725; }
    .cd-section:not(.hero).summary footer a:hover:before {
      right: 0;
      left: 0; }
    .cd-section:not(.hero).summary footer a:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cd-section:not(.hero).summary footer a span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

/* -------------------------------- 

    Default Pages 

-------------------------------- */
.page-content *:not(span) {
  color: #4a4a4a;
  text-shadow: none; }

/* -------------------------------- 

    Case Studies 

-------------------------------- */
.single-case .title, .single-case .event {
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.7); }

.single-case .title {
  color: #fefefe;
  font-weight: 500; }

.single-case .event {
  font-size: 1.125rem;
  text-transform: uppercase; }
  @media all and (min-width: 668px) {
    .single-case .event {
      font-size: 2rem; } }

.single-case .content-entry h4 {
  color: #999898;
  font-size: 1.125rem;
  font-weight: 500;
  text-transform: uppercase; }

.single-case .content-entry ul {
  list-style-type: disc;
  padding-left: 1.25rem; }
  @media all and (min-width: 668px) {
    .single-case .content-entry ul {
      padding-left: 2.5rem; } }
  .single-case .content-entry ul li {
    font-size: 100%;
    margin-bottom: 1.1em; }
    @media all and (min-width: 667px) {
      .single-case .content-entry ul li {
        font-size: 112.5%; } }
    @media all and (min-width: 1024px) {
      .single-case .content-entry ul li {
        font-size: 112.5%; } }

html, body {
  height: 100%; }

body {
  background-color: #0a0a0a; }

figure {
  margin: 0;
  padding: 0; }

.ov {
  margin: auto;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.main-scene {
  margin: 0;
  padding: 0;
  height: 100%;
  transition-timing-function: ease-in;
  animation-duration: 1.2s;
  animation-fill-mode: both; }

.bcg {
  margin: auto;
  position: absolute;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  background-size: cover;
  background-color: #0a0a0a;
  background-repeat: no-repeat;
  background-position: 75% 50%;
  width: 100%;
  height: 100%;
  z-index: auto; }
  @media all and (min-width: 1025px) {
    .bcg {
      background-position: 100% 0;
      width: 100%;
      height: 120%; } }

/* -------------------------------- 

Hero components 

-------------------------------- */
.header-container .bcg {
  background-image: url(../img/img-bck-hero.jpg); }
  @media all and (min-width: 1025px) {
    .header-container .bcg {
      background-size: 120%; } }

.header-container .ov {
  background-color: black;
  background-image: linear-gradient(to top,black, transparent, black);
  background-color: transparent;
  opacity: .85; }

#cd-community .bcg {
  background-image: url(../img/img-bck-community.jpg);
  background-position: 48% -10%; }

#cd-connection .bcg {
  background-image: url(../img/img-bck-connection.jpg);
  background-position: 0 0; }

#cd-experience .bcg {
  background-image: url(../img/img-bck-experience.jpg);
  background-position: 0 0; }

#cd-engage .bcg {
  background-image: url(../img/img-bck-engage.jpg);
  background-position: 48% 0; }

#cd-summary .bcg {
  background-image: url(../img/img-bck-summary.jpg);
  background-position: 50% 0; }

/* -------------------------------- 

    Main components 

-------------------------------- */
.cd-section {
  animation-name: fadeIn;
  animation-iteration-count: 1;
  animation-duration: 1s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  overflow: hidden;
  position: relative;
  z-index: 1; }

.cd-section:not(.hero) {
  background-color: #0a0a0a;
  border-bottom: 1px solid rgba(255, 255, 255, 0.4);
  padding-top: 30%;
  width: 100%;
  height: 800px; }
  @media all and (min-width: 668px) {
    .cd-section:not(.hero) {
      height: 100vh;
      min-height: 800px; } }
  .cd-section:not(.hero):before, .cd-section:not(.hero):after {
    content: "";
    display: table; }
  .cd-section:not(.hero):after {
    clear: both; }
  @media all and (min-width: 668px) and (max-width: 1024px) {
    .cd-section:not(.hero) {
      padding-top: 12.5rem; } }
  @media all and (min-width: 1025px) {
    .cd-section:not(.hero) {
      padding-top: 12%; } }
  .cd-section:not(.hero) .ov {
    background-color: rgba(0, 0, 0, 0.7); }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero) .ov {
        background-color: rgba(0, 0, 0, 0.4); } }
  .cd-section:not(.hero) .bcg {
    transition: opacity 1.1s linear;
    opacity: .2; }
    .cd-section:not(.hero) .bcg.bcg-visible {
      opacity: 1; }
  .cd-section:not(.hero) .entry {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto;
    padding: 0 1em 1em;
    position: relative; }
    .cd-section:not(.hero) .entry:before, .cd-section:not(.hero) .entry:after {
      content: "";
      display: table; }
    .cd-section:not(.hero) .entry:after {
      clear: both; }
    .cd-section:not(.hero) .entry .icon {
      margin-right: auto;
      margin-left: auto;
      display: block;
      margin-bottom: 1em;
      width: 40px;
      height: 40px;
      display: block; }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .icon {
          margin: auto;
          position: absolute;
          top: 0;
          right: auto;
          bottom: auto;
          left: 0.9375rem; } }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .icon {
          margin: auto;
          position: absolute;
          top: 0;
          right: auto;
          bottom: auto;
          left: 2.7rem; } }
    .cd-section:not(.hero) .entry .content {
      width: 100%;
      float: left;
      text-align: center;
      opacity: 0; }
      @media screen and (min-width: 41.6875em) {
        .cd-section:not(.hero) .entry .content {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .cd-section:not(.hero) .entry .content {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .cd-section:not(.hero) .entry .content:last-child:not(:first-child) {
        float: right; }
      .cd-section:not(.hero) .entry .content:last-child:last-child {
        float: left; }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .content {
          width: 100%;
          float: left;
          text-align: left;
          padding-left: 5em; } }
      @media all and (min-width: 1025px) {
        .cd-section:not(.hero) .entry .content {
          width: 58.33333%;
          float: left;
          padding-left: 5em; } }
      .cd-section:not(.hero) .entry .content .section-title {
        margin-bottom: 2em; }
      .cd-section:not(.hero) .entry .content.content-visible {
        opacity: 1; }
        .cd-section:not(.hero) .entry .content.content-visible .icon {
          animation-name: fadeIn;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 1s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .small-title {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.3s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .title {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.5s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible p {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.8s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .section-footer {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 1s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
  @media all and (min-width: 1025px) {
    .cd-section:not(.hero).summary .entry {
      max-width: 60rem; } }
  .cd-section:not(.hero).summary .entry .content {
    width: 100%;
    float: left;
    text-align: center; }
    @media screen and (min-width: 41.6875em) {
      .cd-section:not(.hero).summary .entry .content {
        padding-left: 0.625rem;
        padding-right: 0.625rem; } }
    @media screen and (min-width: 48em) {
      .cd-section:not(.hero).summary .entry .content {
        padding-left: 0.9375rem;
        padding-right: 0.9375rem; } }
    .cd-section:not(.hero).summary .entry .content:last-child:not(:first-child) {
      float: right; }
  @media all and (min-width: 668px) and (max-width: 1024px) {
    .cd-section:not(.hero).info-graphic .entry {
      -ms-transform: translateY(0);
      transform: translateY(0);
      top: auto;
      bottom: auto; } }
  .cd-section:not(.hero).info-graphic .entry .content {
    margin-bottom: 5em; }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero).info-graphic .entry .content {
        width: 50%;
        float: left; } }
  .cd-section:not(.hero).info-graphic .entry .featured {
    text-align: center;
    width: 80%;
    display: none; }
    @media all and (min-width: 668px) and (max-width: 1024px) {
      .cd-section:not(.hero).info-graphic .entry .featured {
        width: 100%;
        float: left;
        display: block; } }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero).info-graphic .entry .featured {
        margin: auto;
        position: absolute;
        top: 0;
        right: 12%;
        bottom: auto;
        left: auto;
        width: 23.75rem;
        display: block; } }

/* -------------------------------- 

 Default Pages 

-------------------------------- */
.page-content {
  background-color: #fefefe;
  padding-bottom: 6.25rem;
  position: relative; }
  .page-content .content .title-container {
    text-align: center;
    background: #0a0a0a url(../img/img-page-header.jpg) no-repeat 50% 50%;
    background-size: cover;
    margin-bottom: 2rem;
    padding: 9.375rem 2rem 1.875rem;
    position: relative; }
    .page-content .content .title-container .ov {
      background-color: rgba(0, 0, 0, 0.4); }
    .page-content .content .title-container .title {
      color: #fefefe;
      font-size: 2.3rem;
      text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
      position: relative; }
  .page-content .content-entry {
    margin-right: auto;
    margin-left: auto;
    display: block;
    width: 100%;
    max-width: 70%; }
  .page-content .page-feature {
    margin-bottom: 2.5em; }

.end {
  text-align: center; }

/* -------------------------------- 

	Cases

-------------------------------- */
.main-scene.project-open #cd-summary, .main-scene.project-open .footer-container {
  display: none; }

#case-study-page .page-content {
  padding: 4.375rem 0 0;
  overflow: hidden; }

#case-study-page .cd-nav-trigger {
  transition: background 0.2s;
  color: transparent;
  white-space: nowrap;
  text-indent: 100%;
  background-color: rgba(10, 10, 10, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  width: 44px;
  height: 44px;
  overflow: hidden;
  position: fixed;
  top: 7.5rem;
  right: 3.5%;
  z-index: 5;
  opacity: 0; }
  #case-study-page .cd-nav-trigger.project-open {
    opacity: 1; }
  #case-study-page .cd-nav-trigger .cd-icon, #case-study-page .cd-nav-trigger .cd-icon::before, #case-study-page .cd-nav-trigger .cd-icon::after {
    /* Force Hardware Acceleration in WebKit */
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    background-color: #fefefe;
    border-radius: 2px;
    position: absolute; }
  .no-touch #case-study-page .cd-nav-trigger:hover {
    background-color: #C00; }
  #case-study-page .cd-nav-trigger .cd-icon {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    transition: transform 0.3s, background-color 0.3s;
    width: 18px;
    height: 2px;
    /* middle line of the menu icon */
    display: inline-block; }
    #case-study-page .cd-nav-trigger .cd-icon::before, #case-study-page .cd-nav-trigger .cd-icon::after {
      transition: transform 0.3s;
      /* upper and lower lines of the menu icon */
      content: "";
      width: 100%;
      height: 100%;
      top: 0;
      right: 0; }
    #case-study-page .cd-nav-trigger .cd-icon::before {
      -ms-transform: translateY(-6px);
      transform: translateY(-6px); }
    #case-study-page .cd-nav-trigger .cd-icon::after {
      -ms-transform: translateY(6px);
      transform: translateY(6px); }
  #case-study-page .cd-nav-trigger.project-open .cd-icon {
    /* user selects a projects - transform the icon into a 'X' */
    background-color: rgba(254, 254, 254, 0); }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::before, #case-study-page .cd-nav-trigger.project-open .cd-icon::after {
      background-color: #fefefe; }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::before {
      -ms-transform: translateY(0) rotate(45deg);
      transform: translateY(0) rotate(45deg); }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::after {
      -ms-transform: translateY(0) rotate(-45deg);
      transform: translateY(0) rotate(-45deg); }
  #case-study-page .cd-nav-trigger.nav-open .cd-icon {
    /* user opens the navigation - transform the icon into an arrow */
    -ms-transform: translateY(-50%) translateX(-50%) rotate(90deg);
    transform: translateY(-50%) translateX(-50%) rotate(90deg); }
    #case-study-page .cd-nav-trigger.nav-open .cd-icon::after {
      -ms-transform: translateX(-5px) translateY(3px) rotate(45deg) scaleX(0.5);
      transform: translateX(-5px) translateY(3px) rotate(45deg) scaleX(0.5); }
    #case-study-page .cd-nav-trigger.nav-open .cd-icon::before {
      -ms-transform: translateX(-5px) translateY(-3px) rotate(-45deg) scaleX(0.5);
      transform: translateX(-5px) translateY(-3px) rotate(-45deg) scaleX(0.5); }

.cd-case-container {
  background-color: #0a0a0a;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  position: relative; }
  .cd-case-container > ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .cd-case-container > ul li {
      float: none;
      position: relative; }
  .cd-case-container .single-case {
    transition: transform 0.4s;
    /* Force hardware acceleration */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    margin: auto;
    position: absolute;
    top: 0;
    right: auto;
    bottom: auto;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    cursor: pointer; }
    .cd-case-container .single-case:nth-of-type(2) {
      -ms-transform: translateY(33.33333%);
      transform: translateY(33.33333%); }
    .cd-case-container .single-case:nth-of-type(3) {
      -ms-transform: translateY(66.66667%);
      transform: translateY(66.66667%); }
    .cd-case-container .single-case.selected {
      -ms-transform: translateY(0);
      transform: translateY(0);
      background-color: #0a0a0a;
      cursor: auto; }
      .cd-case-container .single-case.selected .cd-title {
        border: 0;
        overflow: visible; }
        .cd-case-container .single-case.selected .cd-title:before {
          height: 300%;
          opacity: .3; }
      .cd-case-container .single-case.selected .event {
        display: block; }
    .cd-case-container .single-case.selected ~ li {
      /* hide siblings projects */
      -ms-transform: translateY(100%);
      transform: translateY(100%); }
  .cd-case-container.nav-open .single-case {
    -ms-transform: translateY(91%);
    transform: translateY(91%);
    box-shadow: 0 0 30px rgba(10, 10, 10, 0.5); }
    .cd-case-container.nav-open .single-case:nth-of-type(2) {
      -ms-transform: translateY(94%);
      transform: translateY(94%); }
    .cd-case-container.nav-open .single-case:nth-of-type(3) {
      -ms-transform: translateY(97%);
      transform: translateY(97%); }
  .cd-case-container.nav-open:hover .single-case {
    -ms-transform: translateY(88%);
    transform: translateY(88%); }
    .cd-case-container.nav-open:hover .single-case:nth-of-type(2) {
      -ms-transform: translateY(92%);
      transform: translateY(92%); }
    .cd-case-container.nav-open:hover .single-case:nth-of-type(3) {
      -ms-transform: translateY(96%);
      transform: translateY(96%); }

.cd-title {
  text-align: center;
  border-bottom: 1px solid rgba(255, 255, 255, 0.8);
  width: 100vw;
  height: 33.33333%;
  display: table;
  overflow: hidden;
  position: relative;
  z-index: 3; }
  .cd-title::before {
    margin: auto;
    position: absolute;
    top: 0;
    right: auto;
    bottom: auto;
    left: 0;
    transition: height 0.2s linear 0.08;
    /* background image */
    content: "";
    background-repeat: no-repeat;
    background-position: center center;
    width: 100%;
    height: 100%;
    opacity: .3; }
  .cd-title::after {
    /* line below title -  visible on hover */
    margin: auto;
    position: absolute;
    top: calc(50% + 30px);
    right: auto;
    bottom: auto;
    left: 50%;
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(0);
    transform: translateX(-50%) translateY(-50%) scaleX(0);
    transition: transform 0.2s;
    content: "";
    background-color: #fefefe;
    width: 60px;
    height: 1px; }
  .single-case:nth-of-type(1) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(1) .cd-title::before {
      background-image: url(../img/img-bck-case-redbull.jpg); }
  .single-case:nth-of-type(2) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(2) .cd-title::before {
      background-image: url(../img/img-bck-case-boost.jpg); }
  .single-case:nth-of-type(3) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(3) .cd-title::before {
      background-image: url(../img/img-bck-case-eljimador.jpg); }
  .single-case:nth-of-type(1) .cd-title::before, .single-case:nth-of-type(2) .cd-title::before, .single-case:nth-of-type(3) .cd-title::before {
    background-size: cover; }
  .cd-title .title {
    transition: transform 0.4s;
    /* Force hardware acceleration */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    vertical-align: middle;
    padding: 0 2em;
    width: 100%;
    display: table-cell;
    position: relative; }
    @media all and (min-width: 1025px) {
      .cd-title .title {
        width: 70%; } }
    .cd-title .title * {
      color: #fefefe; }
    .cd-title .title h2 {
      font-weight: 500; }
    .cd-title .title .event {
      display: none; }
  .no-touch .cd-title:hover::after {
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(1);
    transform: translateX(-50%) translateY(-50%) scaleX(1); }
  .no-touch .selected .cd-title:hover::after {
    transition: transform 0s;
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(0);
    transform: translateX(-50%) translateY(-50%) scaleX(0); }
  .selected .cd-title .title {
    /* vertically center h2 in the full-height image*/
    -ms-transform: translateY(66.66667%);
    transform: translateY(66.66667%); }

.cd-case-info {
  margin: auto;
  position: absolute;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  transition: opacity 0.4s, visibility 0.4s;
  margin: 0;
  width: 100%;
  height: 100%;
  visibility: hidden;
  overflow: auto;
  z-index: 3;
  opacity: 0; }
  .cd-case-info::before {
    /* use to push the .content-wrapper below the intro project image */
    content: "";
    width: 100%;
    height: 100%;
    display: block;
    pointer-events: none; }
  .cd-case-info .content-wrapper {
    background-color: #fefefe;
    margin: 0;
    padding: 4em 0;
    position: relative;
    z-index: 2; }
  .cd-case-info .content-entry .page-featured {
    margin-bottom: 3em; }
  .selected .cd-case-info {
    transition: opacity 0s, visibility 0s;
    visibility: visible;
    opacity: 1;
    -webkit-overflow-scrolling: touch; }
  .cd-case-info.has-boxshadow .content-wrapper {
    /* add a box-shadow while scrolling over the background image */ }

.cd-scroll {
  transition: opacity 0.4s, visibility 0.4s, color 0.4s;
  left: 50%;
  right: auto;
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  /* scroll down arrow */
  color: rgba(255, 255, 255, 0.4);
  font-size: 0.75rem;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
  text-indent: 0;
  background: transparent url(../img/cd-case-arrow.svg) no-repeat center 140%;
  width: auto;
  height: 3.75rem;
  visibility: hidden;
  overflow: hidden;
  cursor: pointer;
  position: fixed;
  top: calc(100% - 250px);
  z-index: 1;
  opacity: 0; }
  .no-touch .cd-scroll:hover {
    color: #fefefe; }
  .project-open .cd-scroll {
    animation: cd-translate 1.2s 0.4s;
    animation-iteration-count: 2;
    visibility: visible;
    opacity: 1; }
  .project-open .has-boxshadow .cd-scroll {
    visibility: hidden;
    opacity: 0; }

@keyframes cd-translate {
  0% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); }
  50% {
    -ms-transform: translateY(0) translateX(-50%);
    transform: translateY(0) translateX(-50%); }
  100% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); } }

@keyframes cd-translate {
  0% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); }
  50% {
    -ms-transform: translateY(0) translateX(-50%);
    transform: translateY(0) translateX(-50%); }
  100% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); } }

/* -------------------------------- 

	Header

-------------------------------- */
.header-container {
  margin: 0;
  padding: 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  height: 100vh;
  position: relative;
  overflow: hidden; }

.cd-section.hero {
  padding-top: 50%;
  height: 75vh;
  min-height: 75vh;
  position: relative;
  overflow: visible; }
  .cd-section.hero .entry {
    text-align: center;
    width: 100%; }
    @media all and (min-width: 668px) {
      .cd-section.hero .entry {
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
        -ms-transform: translateX(-50%) translateY(-70%);
            transform: translateX(-50%) translateY(-70%); } }

.cd-header-container {
  position: relative;
  display: none; }
  @media all and (min-width: 1025px) {
    .cd-header-container {
      display: block; } }
  .cd-header-container .cd-header {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto; }
    .cd-header-container .cd-header:before, .cd-header-container .cd-header:after {
      content: "";
      display: table; }
    .cd-header-container .cd-header:after {
      clear: both; }
    .cd-header-container .cd-header nav {
      width: 50%;
      float: left;
      padding: 1.875rem 0 0; }
      @media screen and (min-width: 41.6875em) {
        .cd-header-container .cd-header nav {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .cd-header-container .cd-header nav {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .cd-header-container .cd-header nav:last-child:not(:first-child) {
        float: right; }
      .cd-header-container .cd-header nav ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        margin: 0;
        padding: 0;
        float: left;
        position: relative; }
        .cd-header-container .cd-header nav ul li {
          margin: 0;
          padding: 0 5px;
          float: left;
          position: relative;
          display: inline; }
          .cd-header-container .cd-header nav ul li:last-child {
            margin-right: 0; }
        .cd-header-container .cd-header nav ul.cd-lang {
          float: right; }
      .cd-header-container .cd-header nav.cd-main-nav {
        padding-top: 2.3em; }
        .cd-header-container .cd-header nav.cd-main-nav a {
          transition: all 0.3s;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
          color: #fefefe;
          font-size: 16px;
          font-weight: 400;
          outline: none;
          background: rgba(254, 254, 254, 0.3);
          border: 1px solid rgba(254, 254, 254, 0.8);
          border-radius: 2px;
          padding: 1rem 3rem;
          display: inline-block;
          overflow: hidden;
          position: relative;
          cursor: pointer;
          font-size: 0.75rem;
          padding: 0.2rem 0.5rem;
          display: block; }
          .cd-header-container .cd-header nav.cd-main-nav a:active {
            background: #990000;
            top: 2px; }
            .cd-header-container .cd-header nav.cd-main-nav a:active:before {
              color: #703b87; }
          .cd-header-container .cd-header nav.cd-main-nav a:hover {
            background-color: #C00; }
      .cd-header-container .cd-header nav.cd-social ul {
        float: right; }

#cd-logo {
  margin: auto;
  position: absolute;
  top: auto;
  right: 0;
  bottom: auto;
  left: 0;
  width: 147px;
  height: 146px;
  top: 10px;
  z-index: 5; }
  @media all and (min-width: 1025px) {
    #cd-logo.hidden {
      transition: left 0.3s, opacity 0.3s;
      margin-left: 0;
      position: fixed;
      top: -20%;
      left: -20%;
      /* assign a position fixed and move outside the viewport (on the left) */
      opacity: 0; }
      #cd-logo.hidden.slide-in {
        /* slide in when the secondary navigation gets fixed */
        width: 127px;
        height: 126px;
        top: 10px;
        left: 5%;
        opacity: 1; }
      #cd-logo.hidden a, #cd-logo.hidden a:active, #cd-logo.hidden a:hover {
        width: 127px;
        height: 126px; } }
  #cd-logo img {
    display: block; }

.cta-entry, .ctas {
  text-align: center;
  overflow: hidden; }
  .cta-entry ul, .ctas ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
    .cta-entry ul li, .ctas ul li {
      float: none;
      position: relative; }
    @media all and (min-width: 668px) {
      .cta-entry ul, .ctas ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        margin: 0;
        padding: 0;
        float: left;
        position: relative;
        left: 50%; }
        .cta-entry ul li, .ctas ul li {
          margin: 0;
          padding: 0 0.8rem;
          float: left;
          position: relative;
          display: inline; }
          .cta-entry ul li:last-child, .ctas ul li:last-child {
            margin-right: 0; }
        .cta-entry ul li, .ctas ul li {
          right: 50%; } }
    .cta-entry ul li, .ctas ul li {
      margin-bottom: 0.5em; }

#home-page .cd-btn-head {
  display: none;
  position: fixed;
  top: -20%;
  right: -20%;
  z-index: 5; }
  @media all and (min-width: 1025px) {
    #home-page .cd-btn-head {
      display: block; } }
  #home-page .cd-btn-head.hidden {
    transition: right 0.3s, opacity 0.3s;
    margin-right: 0; }
    #home-page .cd-btn-head.hidden.slide-in {
      top: 12px;
      right: 3%; }
      @media all and (min-width: 668px) {
        #home-page .cd-btn-head.hidden.slide-in {
          opacity: 1; } }

/* -------------------------------- 

    Page Header

-------------------------------- */
.site-header {
  background-color: #0a0a0a;
  border-bottom: 2px solid #fefefe;
  height: 70px;
  width: 100%;
  position: fixed;
  z-index: 3; }
  .site-header #cd-logo {
    margin: auto;
    position: absolute;
    top: 10px;
    right: 0;
    bottom: auto;
    left: 0;
    width: 127px;
    height: 126px;
    opacity: 1; }
    @media all and (min-width: 668px) {
      .site-header #cd-logo {
        margin: auto;
        position: absolute;
        top: 10px;
        right: auto;
        bottom: auto;
        left: 5%; } }
  .site-header .cd-btn-head {
    margin: auto;
    position: absolute;
    top: 12px;
    right: 3%;
    bottom: auto;
    left: auto; }
    .site-header .cd-btn-head .social {
      display: none; }
      @media all and (min-width: 668px) {
        .site-header .cd-btn-head .social {
          display: block; } }
  .site-header .inner-head {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden; }

/* -------------------------------- 

    Navigation

-------------------------------- */
a.active {
  color: #fefefe !important; }

a.social {
  display: none !important; }

.cd-social ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  margin: 0;
  padding: 0;
  float: left;
  position: relative;
  width: 40px;
  position: relative;
  z-index: 5; }
  .cd-social ul li {
    margin: 0;
    padding: 0 5px;
    float: left;
    position: relative;
    display: inline; }
    .cd-social ul li:last-child {
      margin-right: 0; }
  @media all and (min-width: 1025px) {
    .cd-social ul {
      width: 100px; } }
  .cd-social ul li:last-child {
    padding: 0; }
  .cd-social ul .btn-mobile {
    display: block; }
    @media all and (min-width: 1025px) {
      .cd-social ul .btn-mobile {
        display: none; } }
  .cd-social ul .btn-slide {
    font-size: 0.8125rem;
    margin-left: 1em;
    text-transform: uppercase;
    width: 90px;
    display: none;
    position: relative; }
    @media all and (min-width: 1025px) {
      .cd-social ul .btn-slide {
        display: block; } }
    .cd-social ul .btn-slide > span {
      padding: .8em 0;
      display: inline-block; }
    .cd-social ul .btn-slide .cd-subnav-trigger {
      margin: auto;
      position: absolute;
      top: 0;
      right: 0;
      bottom: auto;
      left: auto;
      width: 50px; }
  .cd-social ul:first-child a {
    text-indent: 200%;
    text-align: left;
    font-size: 0;
    white-space: nowrap;
    overflow: hidden;
    padding: .6em 1em;
    width: 40px;
    height: 40px;
    display: block; }
    .cd-social ul:first-child a.fb {
      background: url(../img/icon-fb.svg) no-repeat 0 0; }
    .cd-social ul:first-child a.tw {
      background: url(../img/icon-tw.svg) no-repeat 0 0; }

.cd-social .hamburger {
  padding: 8px 5px;
  position: absolute;
  top: 0;
  left: 0; }

.cd-social .cd-lang {
  padding: 13px 0; }

.cd-lang a {
  text-indent: 200%;
  text-align: left;
  font-size: 0;
  white-space: nowrap;
  overflow: hidden;
  background: no-repeat 50% 0;
  background-size: cover;
  border: 1px solid #999898;
  width: 25px;
  height: 15px;
  display: block;
  overflow: hidden;
  opacity: .4; }
  .cd-lang a.en {
    background-image: url(../img/icon-flag-us.png); }
  .cd-lang a.es {
    background-image: url(../img/icon-flag-mx.png); }

.en:lang(en), .es:lang(es) {
  border: 1px solid #cccbcb;
  filter: grayscale(0);
  opacity: 1; }

#cd-btn-menu {
  width: 50px; }

.mobile-index {
  width: 50px;
  height: 40px;
  display: block;
  position: fixed;
  top: 12px;
  right: 3%;
  z-index: 10; }
  @media all and (min-width: 668px) {
    .mobile-index {
      display: none; } }

/* -------------------------------- 

	Secondary Fixed Navigation

-------------------------------- */
.cd-secondary-nav {
  width: 100%;
  overflow: hidden; }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav {
      background-color: rgba(0, 0, 0, 0.4);
      z-index: 3;
      opacity: 1; } }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav {
      transition: height 0.3s;
      margin: auto;
      position: absolute;
      top: auto;
      right: auto;
      bottom: 0;
      left: auto;
      padding: 0.3rem 1.1rem 1.1rem;
      min-height: 70px; }
      .cd-secondary-nav nav, .cd-secondary-nav ul, .cd-secondary-nav li, .cd-secondary-nav a {
        height: 100%; } }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav.is-fixed {
      /* on Firefox CSS transition/animation fails when parent element changes position attribute*/
      /* so we defined to diffent classes: .is-fixed to change the position value and .is-animated to change childrens' attributes (padding and opacity)*/
      background-color: #0a0a0a;
      border-bottom: 2px solid #fefefe;
      padding: 0;
      width: 100%;
      height: 70px;
      position: fixed;
      top: 0;
      bottom: auto;
      left: 0; }
      .cd-secondary-nav.is-fixed.show-nav {
        transition: opacity 0.3s;
        opacity: 0; } }
  .cd-secondary-nav.animate-children {
    /* on Firefox CSS transition/animation fails when parent element changes position attribute*/
    /* so we defined to diffent classes: .is-fixed to change the position value and .is-animated to change childrens' attributes (padding and opacity)*/
    box-shadow: 0 1px 2px rgba(10, 10, 10, 0.2); }
    .cd-secondary-nav.animate-children .site-nav li a {
      padding: 1.5625rem 1.875rem 0 1.875rem; }
      .cd-secondary-nav.animate-children .site-nav li a span {
        opacity: 0; }
  .cd-secondary-nav li a {
    padding: 1.6em;
    display: block; }

.site-nav {
  margin: 0;
  padding: 0;
  -ms-transform: scale(0);
  transform: scale(0);
  -ms-transform-origin: 100% 100%;
  transform-origin: 100% 100%;
  transition: transform 0.3s, visibility 0s 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /* mobile first - secondary navigation hidden by default, triggered by tap/click on .cd-secondary-nav-trigger*/
  width: 90%;
  max-width: 400px;
  visibility: hidden;
  position: fixed;
  z-index: 1; }
  @media all and (min-width: 1025px) {
    .site-nav {
      -ms-transform: scale(1);
      transform: scale(1);
      text-align: center;
      width: auto;
      max-width: 100%;
      visibility: visible;
      /* reset navigation values */
      position: static; }
      .site-nav li {
        margin-left: -4px;
        display: inline-block; }
        .site-nav li a {
          transition: padding 0.2s;
          border-bottom: none;
          padding: 3.625rem 2.5rem 0 2.5rem;
          display: block;
          position: relative; }
          .site-nav li a span {
            left: 50%;
            right: auto;
            -ms-transform: translateX(-50%);
            transform: translateX(-50%);
            transition: opacity 0.2s;
            background-repeat: no-repeat;
            width: 40px;
            height: 40px;
            display: inline-block;
            position: absolute;
            top: 18px; } }

.cd-slide-nav {
  display: none;
  margin: auto;
  position: absolute;
  top: 0;
  right: 0;
  bottom: auto;
  left: 0;
  margin: 0;
  padding: 0;
  list-style-type: none;
  -ms-transform: translateY(-100px);
  transform: translateY(-100px);
  transition: transform 0.3s 0.2s;
  text-align: center;
  background-color: #292929;
  height: 100px;
  z-index: 3; }
  @media all and (min-width: 1025px) {
    .cd-slide-nav {
      display: block; } }
  .cd-slide-nav li {
    float: none;
    position: relative; }
  .cd-slide-nav.moves-out {
    -ms-transform: translateY(0);
    transform: translateY(0);
    height: 70px; }
  .cd-slide-nav li {
    margin-left: -4px;
    display: inline-block; }
    .cd-slide-nav li a {
      padding: 1.5625rem 1.875rem 0 1.875rem;
      display: block; }

.cd-secondary-nav .site-nav.is-visible {
  -ms-transform: scale(1);
  transform: scale(1);
  transition: transform 0.3s, visibility 0s 0.1s, ease-in-out;
  margin: 0;
  padding: 0;
  list-style-type: none;
  background-color: rgba(0, 0, 0, 0.95);
  width: 100%;
  max-width: 100%;
  visibility: visible;
  bottom: 0;
  z-index: 3; }
  .cd-secondary-nav .site-nav.is-visible li {
    float: none;
    position: relative; }
  .cd-secondary-nav .site-nav.is-visible li {
    text-align: center;
    text-transform: uppercase; }
    .cd-secondary-nav .site-nav.is-visible li span {
      display: none; }
    .cd-secondary-nav .site-nav.is-visible li a {
      padding: 1.875rem;
      display: block; }

.cd-secondary-nav-trigger {
  white-space: nowrap;
  text-indent: 100%;
  background: rgba(10, 10, 10, 0.75);
  border: 1px solid rgba(255, 255, 255, 0.3);
  width: 44px;
  height: 44px;
  /* image replacement */
  overflow: hidden;
  position: fixed;
  right: 3%;
  bottom: 20px;
  z-index: 2; }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav-trigger {
      display: none; } }
  .cd-secondary-nav-trigger span {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    transition: background 0.3s;
    background: #fefefe;
    border-radius: 50%;
    width: 4px;
    height: 4px;
    display: block;
    /* the span element is used to create the menu icon */
    position: absolute; }
    .cd-secondary-nav-trigger span::before, .cd-secondary-nav-trigger span::after {
      content: "";
      background: inherit;
      border-radius: 50%;
      width: 100%;
      height: 100%;
      position: absolute; }
    .cd-secondary-nav-trigger span::before {
      -ms-transform: rotate(0);
      transform: rotate(0);
      right: -10px; }
    .cd-secondary-nav-trigger span::after {
      -ms-transform: rotate(0);
      transform: rotate(0);
      left: -10px; }
  .cd-secondary-nav-trigger.menu-is-open {
    background: transparent; }
  .cd-secondary-nav-trigger.menu-is-open span {
    background: rgba(254, 254, 254, 0);
    width: 20px;
    height: 2px; }
    .cd-secondary-nav-trigger.menu-is-open span::before, .cd-secondary-nav-trigger.menu-is-open span::after {
      background: #fefefe;
      border-radius: 0;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0; }
    .cd-secondary-nav-trigger.menu-is-open span::before {
      -ms-transform: rotate(135deg);
      transform: rotate(135deg); }
    .cd-secondary-nav-trigger.menu-is-open span::after {
      -ms-transform: rotate(225deg);
      transform: rotate(225deg); }

.page-nav {
  margin: 0;
  padding: 0;
  list-style-type: none;
  text-align: center;
  height: 100px;
  display: none;
  z-index: 1; }
  @media all and (min-width: 1025px) {
    .page-nav {
      display: block; } }
  .page-nav li {
    float: none;
    position: relative; }
  .page-nav li {
    margin-left: -4px;
    display: inline-block; }
    .page-nav li a {
      padding: 1.5625rem 1.875rem 0 1.875rem;
      display: block;
      position: relative; }
      .page-nav li a.active {
        color: #fefefe; }

/* -------------------------------

    Mobile Nav
    
--------------------------------*/
.mobile-nav {
  margin: 0;
  padding: 0;
  list-style-type: none; }
  .mobile-nav li {
    float: none;
    position: relative; }
  .mobile-nav li {
    text-align: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
  .mobile-nav a {
    color: #999898;
    font-size: 1.5em;
    text-transform: uppercase;
    padding: .8em 1em;
    display: block; }
    .mobile-nav a:active {
      color: #fefefe;
      background-color: #C00; }

/* -------------------------------

    CTAs

------------------------------- */
.ctas {
  display: none; }
  @media all and (min-width: 1025px) {
    .ctas {
      position: fixed;
      top: auto;
      right: 0;
      bottom: 0;
      left: 0;
      -ms-transform: translateY(120px);
      transform: translateY(120px);
      transition-property: transform;
      transition-duration: 0.2s;
      transition-timing-function: ease-in-out;
      background-color: rgba(0, 0, 0, 0.3);
      padding: .5em 1em;
      width: 100vw;
      height: 80px;
      overflow: hidden;
      z-index: 10; }
      .ctas.is-visible {
        -ms-transform: translateY(0);
        transform: translateY(0); } }

/* -------------------------------

    

---------------------------------*/
/* Footer */
.footer-container {
  padding: 1.5em 0 1em; }
  .footer-container .footer-main {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto; }
    .footer-container .footer-main:before, .footer-container .footer-main:after {
      content: "";
      display: table; }
    .footer-container .footer-main:after {
      clear: both; }
    .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
      width: 100%;
      float: left; }
      @media screen and (min-width: 41.6875em) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .footer-container .footer-main .copyright:last-child:not(:first-child), .footer-container .footer-main .bck-top:last-child:not(:first-child) {
        float: right; }
      @media all and (min-width: 668px) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          width: 50%;
          float: left; } }
      .footer-container .footer-main .copyright p, .footer-container .footer-main .bck-top p {
        color: #999898;
        font-size: 1em;
        text-align: center; }
        @media all and (min-width: 668px) {
          .footer-container .footer-main .copyright p, .footer-container .footer-main .bck-top p {
            text-align: left; } }
  .footer-container .footer-menu {
    margin: 0;
    padding: 0;
    list-style-type: none;
    margin: 0;
    padding: 0;
    float: right;
    position: relative; }
    .footer-container .footer-menu li {
      margin: 0 0 0 0.8em;
      padding: 0;
      float: left;
      position: relative;
      display: inline; }
      .footer-container .footer-menu li:last-child {
        margin-right: 0; }
    .footer-container .footer-menu a {
      color: #666565;
      font-size: 0.75rem;
      font-weight: 700;
      text-transform: uppercase; }

/* -------------------------------- 

    Preloader 

-------------------------------- */
#preloader {
  color: #fefefe;
  background-color: #0a0a0a;
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 101; }
  #preloader #cd-logo-pre {
    position: absolute;
    left: 50%;
    -ms-transform: translateX(-50%);
        transform: translateX(-50%);
    padding: 8em 0 0;
    width: 167px;
    height: 120px; }
  #preloader .txt {
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%); }
  #preloader .txt-perc {
    font-size: 3.75rem;
    font-weight: 5;
    text-align: center;
    margin: 0 0 6px 0;
    max-width: 400px;
    opacity: 1; }
  #preloader .progress {
    background-color: rgba(254, 254, 254, 0.2);
    margin: 0 auto 15px auto;
    width: 100px;
    height: 5px; }
    #preloader .progress span {
      background-color: rgba(0, 119, 37, 0.8);
      width: 0;
      height: 100%;
      display: block; }
  #preloader.is-hidden {
    visibility: hidden;
    opacity: 0; }

.home.is-loading {
  overflow: hidden; }

/*
 * Pulse animation
*/

@keyframes pulse {
  0% {
    transform: scale(1); }
  50% {
    transform: scale(1.1); }
  100% {
    transform: scale(1); } }

.cd-pulse {
  animation: pulse 2s linear infinite;
  animation-name: pulse; }

/* -------------------------------

    Modal Content

--------------------------------- */
.zoomIn {
  animation-name: zoomIn;
  animation-iteration-count: 1;
  animation-duration: 0.2s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.zoomOut {
  animation-name: zoomOut;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.fadeInDownBig {
  animation-name: fadeInDownBig;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.fadeOutUpBig {
  animation-name: fadeOutUpBig;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.close-button {
  margin: auto;
  position: absolute;
  top: 5%;
  right: 5%;
  bottom: auto;
  left: auto;
  text-align: center;
  border: 1px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  padding: .55em 0;
  width: 50px;
  height: 50px;
  display: inline-block;
  top: 5%;
  z-index: 10;
  cursor: pointer; }
  .close-button:hover {
    background: #C00; }
  .close-button .close {
    width: 30px;
    height: 30px;
    display: inline-block;
    position: relative; }
    .close-button .close i {
      margin: auto;
      position: absolute;
      top: 6px;
      right: 150%;
      bottom: auto;
      left: auto;
      font-size: 0.6875rem;
      font-style: normal;
      text-transform: uppercase; }
    .close-button .close::before, .close-button .close::after {
      content: "";
      background: #fefefe;
      margin-top: -1px;
      width: 100%;
      height: 2px;
      position: absolute;
      top: 50%;
      left: 0; }
    .close-button .close::before {
      -ms-transform: rotate(45deg);
      transform: rotate(45deg); }
    .close-button .close::after {
      -ms-transform: rotate(-45deg);
      transform: rotate(-45deg); }
    .close-button .close.big {
      -ms-transform: scale(3);
      transform: scale(3); }

#contactModal, #mobileMenu {
  display: none;
  z-index: 1006;
  padding: 0;
  border: #0a0a0a;
  background-color: rgba(0, 0, 0, 0.9);
  border-radius: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  height: 100vh;
  min-height: 100vh;
  max-width: none;
  margin-left: 0;
  border: 0;
  border-radius: 0;
  position: fixed; }
  [data-whatinput='mouse'] #contactModal, [data-whatinput='mouse'] #mobileMenu {
    outline: 0; }
  @media screen and (min-width: 48em) {
    #contactModal, #mobileMenu {
      min-height: 0; } }
  #contactModal .column,
  #contactModal .columns, #mobileMenu .column,
  #mobileMenu .columns {
    min-width: 0; }
  #contactModal > :last-child, #mobileMenu > :last-child {
    margin-bottom: 0; }

.modal-content {
  text-align: center;
  background-color: rgba(0, 0, 0, 0.8);
  overflow: auto;
  padding: 6em 1em 1em;
  width: 100%;
  height: 100%; }
  @media all and (min-width: 1025px) {
    .modal-content {
      padding: 8em 5em 0; } }
  .modal-content .ov {
    background: rgba(0, 0, 0, 0.85); }
  .modal-content .entry {
    margin: 0 auto;
    position: relative; }
    @media all and (min-width: 1025px) {
      .modal-content .entry {
        max-width: 90%; } }
    .modal-content .entry p {
      margin-right: auto;
      margin-left: auto; }
      @media all and (min-width: 668px) {
        .modal-content .entry p {
          max-width: 60%; } }
  .modal-content .cd-lang {
    padding: 0; }
    .modal-content .cd-lang li {
      margin-bottom: .3em; }
      .modal-content .cd-lang li a {
        margin-right: auto;
        margin-left: auto;
        display: block;
        width: 50px;
        height: 30px; }

/*--------------------------------

    Form

--------------------------------*/
.form-block {
  position: relative; }

#successBlock {
  margin: auto;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  background-color: rgba(0, 119, 37, 0.8);
  padding: 1em; }
  #successBlock * {
    color: #fefefe; }
  #successBlock p {
    font-size: 1.625rem; }

#formContainer .entry {
  text-align: left;
  padding-top: 1em; }

#formContainer .field-container {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto; }
  #formContainer .field-container:before, #formContainer .field-container:after {
    content: "";
    display: table; }
  #formContainer .field-container:after {
    clear: both; }
  @media all and (min-width: 1025px) {
    #formContainer .field-container [class*="form-"] {
      width: 50%;
      float: left;
      padding-left: 0.9375rem;
      padding-right: 0.9375rem; }
      #formContainer .field-container [class*="form-"]:last-child:not(:first-child) {
        float: right; } }

.cd-form {
  margin: 0 auto;
  padding-bottom: 1em; }
  .cd-form:before, .cd-form:after {
    content: "";
    display: table; }
  .cd-form:after {
    clear: both; }
  @media all and (min-width: 668px) {
    .cd-form legend + div {
      /* reduce margin-top for first form element after the legend */
      margin-top: 20px; }
    .cd-form h4, .cd-form .cd-label {
      font-size: 0.875rem;
      margin-bottom: 10px; }
    .cd-form input[type="text"], .cd-form input[type="email"], .cd-form textarea, .cd-form select {
      padding: 20px; } }
  .cd-form * {
    color: #fefefe; }
  .cd-form fieldset {
    margin: 0;
    padding: 0;
    border: none; }
  .cd-form legend {
    font-size: 2rem;
    margin-bottom: 20px;
    padding-bottom: 10px; }
  .cd-form h4, .cd-form .cd-label {
    font-size: 0.875rem;
    margin-bottom: 10px; }
  .cd-form .icon {
    position: relative; }
  .cd-form .cd-label {
    display: block; }
  .cd-form input, .cd-form textarea, .cd-form select, .cd-form label {
    color: #fefefe;
    font-size: 1.0625rem; }
  .cd-form input[type="text"], .cd-form input[type="email"], .cd-form input[type="tel"], .cd-form textarea, .cd-form select, .cd-form legend {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    appearance: none;
    width: 100%;
    display: block; }
  .cd-form input[type="text"], .cd-form input[type="email"], .cd-form input[type="tel"], .cd-form textarea, .cd-form select {
    box-shadow: inset 0 1px 1px rgba(10, 10, 10, 0.08);
    border: 1px solid rgba(254, 254, 254, 0.3);
    border-radius: .25em;
    /* general style for input elements */
    padding: 18px; }
    .cd-form input[type="text"]:focus, .cd-form input[type="email"]:focus, .cd-form input[type="tel"]:focus, .cd-form textarea:focus, .cd-form select:focus {
      color: #707070;
      outline: none;
      background-color: #fefefe 0.95;
      box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
      border-color: white; }
  .cd-form .message {
    min-height: 238px;
    overflow: auto;
    resize: vertical; }
  .cd-form .submit-container {
    text-align: center;
    clear: both;
    position: relative; }
    .cd-form .submit-container:before, .cd-form .submit-container:after {
      content: "";
      display: table; }
    .cd-form .submit-container:after {
      clear: both; }
  .cd-form [required] {
    background: url("../img/cd-required.svg") no-repeat top right; }
  .cd-form .error-message p {
    color: #fff;
    font-size: 0.9375rem;
    text-align: center;
    background: #c00;
    border-radius: .25em;
    margin: 0 !important;
    padding: 16px; }
  .cd-form .error {
    border-color: #c00 !important; }

.submit {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: rgba(254, 254, 254, 0.3);
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 3rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer;
  color: #b3b1b1;
  font-size: 1.125rem;
  text-transform: uppercase;
  border: 1px solid #cccbcb;
  padding: 1em 2.5em;
  cursor: pointer; }
  .submit:active {
    background: #990000;
    top: 2px; }
    .submit:active:before {
      color: #703b87; }
  .submit:hover {
    background-color: #C00; }
  .submit:hover, .submit:focus {
    color: #fefefe;
    outline: none;
    background: #C00; }

.page-content .submit {
  background-color: #7DC855; }
  .page-content .submit:hover, .page-content .submit:focus {
    background: #C00; }

@keyframes cd-bounce {
  0%, 100% {
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -ms-transform: scale(0.8);
    transform: scale(0.8); } }

/* -------------------------------- 
Custom icons
-------------------------------- */
.cd-form .icon input, .cd-form .icon select, .cd-form .icon textarea {
  padding-left: 54px !important; }

.cd-form .user {
  background: #0a0a0a url("../img/cd-icon-user.svg") no-repeat 16px center; }

.cd-form [required].user {
  background: #0a0a0a url("../img/cd-icon-user.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .tel {
  background: #0a0a0a url("../img/cd-icon-phone.svg") no-repeat 16px center; }

.cd-form [required].tel {
  background: #0a0a0a url("../img/cd-icon-phone.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .email {
  background: #0a0a0a url("../img/cd-icon-email.svg") no-repeat 16px center; }

.cd-form [required].email {
  background: #0a0a0a url("../img/cd-icon-email.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .message {
  background: #0a0a0a url("../img/cd-icon-message.svg") no-repeat 16px 16px; }

.cd-form [required].message {
  background: #0a0a0a url("../img/cd-icon-message.svg") no-repeat 16px 16px, url("../img/cd-required.svg") no-repeat top right; }

/* -------------------------------- 
FLoating labels 
-------------------------------- */
@media all and (min-width: 668px) {
  .floating-labels legend + div {
    /* reduce margin-top for first form element after the legend */
    margin-top: 16px; }
  .floating-labels .cd-label {
    top: 20px; } }

.floating-labels [class*="form-"] div {
  margin: 28px 0; }

.floating-labels .cd-label {
  transition: top 0.2s, left 0.2s, font-size 0.2s;
  color: rgba(254, 254, 254, 0.5);
  font-size: 1.0625rem;
  position: absolute;
  top: 18px;
  left: 18px;
  cursor: text; }

.floating-labels .icon .cd-label {
  left: 56px; }

.floating-labels .icon .error {
  margin: auto;
  position: absolute;
  top: -18px;
  right: 0;
  bottom: auto;
  left: auto;
  color: #C00; }

.floating-labels .icon.has-error .cd-label {
  color: #C00; }

.floating-labels .icon.has-error input[type="text"], .floating-labels .icon.has-error input[type="email"], .floating-labels .icon.has-error input[type="tel"], .floating-labels .icon.has-error textarea, .floating-labels .icon.has-error select {
  color: #C00;
  border-color: #C00; }

.floating-labels .icon.has-success .cd-label {
  color: #007725; }

.floating-labels .icon.has-success input[type="text"], .floating-labels .icon.has-success input[type="email"], .floating-labels .icon.has-success input[type="tel"], .floating-labels .icon.has-success textarea, .floating-labels .icon.has-success select {
  color: #007725;
  border-color: #007725; }

.floating-labels .cd-label.float {
  /* move label out the input field */
  font-size: 0.6875rem;
  font-weight: 500;
  top: -18px;
  left: 0 !important; }

input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
  outline: none;
  background-color: white;
  box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
  border-color: white; }

input.rdr {
  outline: 0;
  background: none;
  border: none;
  width: 20px; }

.content-entry .cd-form input[type="text"], .content-entry .cd-form input[type="email"], .content-entry .cd-form input[type="tel"], .content-entry .cd-form textarea, .content-entry .cd-form select {
  color: rgba(0, 0, 0, 0.5);
  background-color: #fefefe;
  box-shadow: inset 0 1px 1px rgba(10, 10, 10, 0.08);
  border-color: #cccbcb; }
  .content-entry .cd-form input[type="text"]:focus, .content-entry .cd-form input[type="email"]:focus, .content-entry .cd-form input[type="tel"]:focus, .content-entry .cd-form textarea:focus, .content-entry .cd-form select:focus {
    color: #707070;
    outline: none;
    background-color: #fefefe 0.95;
    box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
    border-color: white; }

.content-entry .floating-labels .cd-label {
  color: rgba(10, 10, 10, 0.5); }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  color: inherit;
  font: inherit;
  text-transform: none;
  outline: 0;
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 15px 15px;
  display: inline-block;
  overflow: visible;
  cursor: pointer;
  transition-timing-function: linear;
  transition-duration: 0.15s;
  transition-property: opacity, filter; }
  .hamburger:hover {
    opacity: 0.7; }

.hamburger-box {
  width: 40px;
  height: 24px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  margin-top: -2px;
  display: block;
  top: 50%; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    background-color: #fff;
    border-radius: 4px;
    width: 40px;
    height: 4px;
    position: absolute;
    transition-timing-function: ease;
    transition-duration: .15s;
    transition-property: transform; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -10px; }
  .hamburger-inner::after {
    bottom: -10px; }

/*
   * Arrow Alt
   */
.hamburger--arrowalt .hamburger-inner::before {
  transition: top 0.1s 0.15s ease, transform 0.15s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt .hamburger-inner::after {
  transition: bottom 0.1s 0.15s ease, transform 0.15s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt.is-active .hamburger-inner::before {
  top: 0;
  transform: translate3d(-8px, -10px, 0) rotate(-45deg) scale(0.7, 1);
  transition: top 0.1s ease, transform 0.15s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

.hamburger--arrowalt.is-active .hamburger-inner::after {
  bottom: 0;
  transform: translate3d(-8px, 10px, 0) rotate(45deg) scale(0.7, 1);
  transition: bottom 0.1s ease, transform 0.15s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvXzAwLXZhcnMuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL19wcm9wZXJ0aWVzLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWVudHJhbmNlcy9fZmFkZUluLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWVudHJhbmNlcy9fZmFkZUluRG93bi5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1lbnRyYW5jZXMvX2ZhZGVJbkRvd25CaWcuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL19mYWRpbmctZW50cmFuY2VzL19mYWRlSW5MZWZ0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWVudHJhbmNlcy9fZmFkZUluTGVmdEJpZy5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1lbnRyYW5jZXMvX2ZhZGVJblJpZ2h0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWVudHJhbmNlcy9fZmFkZUluUmlnaHRCaWcuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL19mYWRpbmctZW50cmFuY2VzL19mYWRlSW5VcC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1lbnRyYW5jZXMvX2ZhZGVJblVwQmlnLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWV4aXRzL19mYWRlT3V0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWV4aXRzL19mYWRlT3V0RG93bi5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1leGl0cy9fZmFkZU91dERvd25CaWcuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL19mYWRpbmctZXhpdHMvX2ZhZGVPdXRMZWZ0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWV4aXRzL19mYWRlT3V0TGVmdEJpZy5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1leGl0cy9fZmFkZU91dFJpZ2h0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fZmFkaW5nLWV4aXRzL19mYWRlT3V0UmlnaHRCaWcuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL19mYWRpbmctZXhpdHMvX2ZhZGVPdXRVcC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX2ZhZGluZy1leGl0cy9fZmFkZU91dFVwQmlnLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fem9vbWluZy1lbnRyYW5jZXMvX3pvb21Jbi5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX3pvb21pbmctZW50cmFuY2VzL196b29tSW5Eb3duLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fem9vbWluZy1lbnRyYW5jZXMvX3pvb21JbkxlZnQuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL196b29taW5nLWVudHJhbmNlcy9fem9vbUluUmlnaHQuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL196b29taW5nLWVudHJhbmNlcy9fem9vbUluVXAuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL196b29taW5nLWV4aXRzL196b29tT3V0LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2FuaW1hdGV3aXRoc2Fzcy9fem9vbWluZy1leGl0cy9fem9vbU91dERvd24uc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYW5pbWF0ZXdpdGhzYXNzL196b29taW5nLWV4aXRzL196b29tT3V0TGVmdC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX3pvb21pbmctZXhpdHMvX3pvb21PdXRSaWdodC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9hbmltYXRld2l0aHNhc3MvX3pvb21pbmctZXhpdHMvX3pvb21PdXRVcC5zY3NzIiwiYXBwLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9mb3VuZGF0aW9uLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9fZ2xvYmFsLnNjc3MiLCJhcHAuY3NzIiwiY29yZS9fc2V0dGluZ3Muc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3V0aWwvX21peGlucy5zY3NzIiwiY29yZS9taXhpbnMvX21peGlucy5zY3NzIiwiY29yZS9taXhpbnMvXzAxLXRleHQuc2NzcyIsImNvcmUvbWl4aW5zL18wMi1jb250ZW50LnNjc3MiLCJjb3JlL21peGlucy9fMDMtbGF5b3V0LnNjc3MiLCJjb3JlL21peGlucy9fMDQtZnVuY3Rpb25zLnNjc3MiLCJjb3JlL21peGlucy9fMDUtbWlzYy5zY3NzIiwiY29tcG9uZW50cy9fMDEtdGV4dC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19weC10by1yZW0uc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvdHlwaS9zY3NzL3R5L19taXhpbnMuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvdHlwaS9zY3NzL3R5L19mdW5jdGlvbnMuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fcHJlZml4ZXIuc2NzcyIsImNvbXBvbmVudHMvXzAyLWxheW91dC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvY3NzMy9fbGluZWFyLWdyYWRpZW50LnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9ncmlkL19yb3cuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3V0aWwvX3VuaXQuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2dyaWQvX3NpemUuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2dyaWQvX2NvbHVtbi5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdXRpbC9fYnJlYWtwb2ludC5zY3NzIiwiLi4vLi4vLi4vYm93ZXJfY29tcG9uZW50cy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fcG9zaXRpb24uc2NzcyIsImNvbXBvbmVudHMvXzAyYS1jYXNlc3R1ZHkuc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2NzczMvX3RyYW5zaXRpb24uc2NzcyIsImNvbXBvbmVudHMvXzAzLWhlYWRlci5zY3NzIiwiY29tcG9uZW50cy9fMDNhLW5hdmlnYXRpb24uc2NzcyIsIi4uLy4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fcG9zaXRpb24uc2NzcyIsImNvbXBvbmVudHMvXzA0LWZvb3Rlci5zY3NzIiwiY29tcG9uZW50cy9fMDUtdXRpbGl0aWVzLnNjc3MiLCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9jb21wb25lbnRzL19yZXZlYWwuc2NzcyIsImV4dHJhcy9oYW1idXJnZXJzL19oYW1idXJnZXJzLnNjc3MiLCJleHRyYXMvaGFtYnVyZ2Vycy9fYmFzZS5zY3NzIiwiZXh0cmFzL2hhbWJ1cmdlcnMvdHlwZXMvX2Fycm93YWx0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkNBLDRFQUFZOztBQ3NFVjtFQ2xIQztJQUFJLFdBQVcsRUFBQTtFQUNqQjtJQUFNLFdBQVcsRUFBQSxFQUFBOztBRGlIaEI7RUVsSEE7SUFDRSxXQUFXO0lGb0VULGlDRW5FMkI7SUZxRXZCLDZCRXJFdUIsRUFBQTtFQUUvQjtJQUNFLFdBQVc7SUZnRVQsNkJFL0QyQjtJRmlFdkIseUJFakV1QixFQUFBLEVBQUE7O0FGNEcvQjtFR2xIQTtJQUNFLFdBQVc7SUhvRVQsbUNHbkUyQjtJSHFFdkIsK0JHckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJSGdFVCw2QkcvRDJCO0lIaUV2Qix5QkdqRXVCLEVBQUEsRUFBQTs7QUg0Ry9CO0VJbEhBO0lBQ0UsV0FBVztJSm9FVCxpQ0luRTJCO0lKcUV2Qiw2QklyRXVCLEVBQUE7RUFFL0I7SUFDRSxXQUFXO0lKZ0VULDZCSS9EMkI7SUppRXZCLHlCSWpFdUIsRUFBQSxFQUFBOztBSjRHL0I7RUtsSEE7SUFDRSxXQUFXO0lMb0VULG1DS25FMkI7SUxxRXZCLCtCS3JFdUIsRUFBQTtFQUUvQjtJQUNFLFdBQVc7SUxnRVQsNkJLL0QyQjtJTGlFdkIseUJLakV1QixFQUFBLEVBQUE7O0FMNEcvQjtFTWxIQTtJQUNFLFdBQVc7SU5vRVQsZ0NNbkUyQjtJTnFFdkIsNEJNckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJTmdFVCw2Qk0vRDJCO0lOaUV2Qix5Qk1qRXVCLEVBQUEsRUFBQTs7QU40Ry9CO0VPbEhBO0lBQ0UsV0FBVztJUG9FVCxrQ09uRTJCO0lQcUV2Qiw4Qk9yRXVCLEVBQUE7RUFFL0I7SUFDRSxXQUFXO0lQZ0VULDZCTy9EMkI7SVBpRXZCLHlCT2pFdUIsRUFBQSxFQUFBOztBUDRHL0I7RVFsSEE7SUFDRSxXQUFXO0lSb0VULGdDUW5FMkI7SVJxRXZCLDRCUXJFdUIsRUFBQTtFQUMvQjtJQUNFLFdBQVc7SVJpRVQsNkJRaEUyQjtJUmtFdkIseUJRbEV1QixFQUFBLEVBQUE7O0FSNkcvQjtFU2xIQTtJQUNFLFdBQVc7SVRvRVQsa0NTbkUyQjtJVHFFdkIsOEJTckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJVGdFVCw2QlMvRDJCO0lUaUV2Qix5QlNqRXVCLEVBQUEsRUFBQTs7QVQ0Ry9CO0VVbEhDO0lBQUksV0FBVyxFQUFBO0VBQ2pCO0lBQU0sV0FBVyxFQUFBLEVBQUE7O0FWaUhoQjtFV2xIQTtJQUNFLFdBQVc7SVhvRVQsNkJXbkUyQjtJWHFFdkIseUJXckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJWGdFVCxnQ1cvRDJCO0lYaUV2Qiw0QldqRXVCLEVBQUEsRUFBQTs7QVg0Ry9CO0VZbEhBO0lBQ0UsV0FBVztJWm9FVCw2QlluRTJCO0lacUV2Qix5QllyRXVCLEVBQUE7RUFFL0I7SUFDRSxXQUFXO0laZ0VULGtDWS9EMkI7SVppRXZCLDhCWWpFdUIsRUFBQSxFQUFBOztBWjRHL0I7RWFsSEE7SUFDRSxXQUFXO0lib0VULDZCYW5FMkI7SWJxRXZCLHlCYXJFdUIsRUFBQTtFQUUvQjtJQUNFLFdBQVc7SWJnRVQsaUNhL0QyQjtJYmlFdkIsNkJhakV1QixFQUFBLEVBQUE7O0FiNEcvQjtFY2xIQTtJQUNFLFdBQVc7SWRvRVQsNkJjbkUyQjtJZHFFdkIseUJjckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJZGdFVCxtQ2MvRDJCO0lkaUV2QiwrQmNqRXVCLEVBQUEsRUFBQTs7QWQ0Ry9CO0VlbEhBO0lBQ0UsV0FBVztJZm9FVCw2QmVuRTJCO0lmcUV2Qix5QmVyRXVCLEVBQUE7RUFFL0I7SUFDRSxXQUFXO0lmZ0VULGdDZS9EMkI7SWZpRXZCLDRCZWpFdUIsRUFBQSxFQUFBOztBZjRHL0I7RWdCbEhBO0lBQ0UsV0FBVztJaEJvRVQsNkJnQm5FMkI7SWhCcUV2Qix5QmdCckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJaEJnRVQsa0NnQi9EMkI7SWhCaUV2Qiw4QmdCakV1QixFQUFBLEVBQUE7O0FoQjRHL0I7RWlCbEhBO0lBQ0UsV0FBVztJakJvRVQsNkJpQm5FMkI7SWpCcUV2Qix5QmlCckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJakJnRVQsaUNpQi9EMkI7SWpCaUV2Qiw2QmlCakV1QixFQUFBLEVBQUE7O0FqQjRHL0I7RWtCbEhBO0lBQ0UsV0FBVztJbEJvRVQsNkJrQm5FMkI7SWxCcUV2Qix5QmtCckV1QixFQUFBO0VBRS9CO0lBQ0UsV0FBVztJbEJnRVQsbUNrQi9EMkI7SWxCaUV2QiwrQmtCakV1QixFQUFBLEVBQUE7O0FsQjRHL0I7RW1CbEhBO0lBQ0UsV0FBVztJbkJvRVQsc0NtQm5Fd0I7SW5CcUVwQixrQ21CckVvQixFQUFBO0VBRTVCO0lBQ0UsV0FBVyxFQUFBLEVBQUE7O0FuQjZHYjtFb0JsSEE7SUFDRSxrRUFBdUM7SUFDdkMsV0FBVztJcEJtRVQsaUVvQmxFZ0Q7SXBCb0U1Qyw2RG9CcEU0QyxFQUFBO0VBRXBEO0lBQ0UsK0RBQXVDO0lBQ3ZDLFdBQVc7SXBCOERULG9Fb0I3RHNEO0lwQitEbEQsZ0VvQi9Ea0QsRUFBQSxFQUFBOztBcEIwRzFEO0VxQmxIQTtJQUNFLGtFQUF1QztJQUN2QyxXQUFXO0lyQm1FVCxpRXFCbEVnRDtJckJvRTVDLDZEcUJwRTRDLEVBQUE7RUFFcEQ7SUFDRSwrREFBdUM7SUFDdkMsV0FBVztJckI4RFQsb0VxQjdEc0Q7SXJCK0RsRCxnRXFCL0RrRCxFQUFBLEVBQUE7O0FyQjBHMUQ7RXNCbEhBO0lBQ0Usa0VBQXVDO0lBQ3ZDLFdBQVc7SXRCbUVULGdFc0JsRWdEO0l0Qm9FNUMsNERzQnBFNEMsRUFBQTtFQUVwRDtJQUNFLCtEQUF1QztJQUN2QyxXQUFXO0l0QjhEVCxxRXNCN0RzRDtJdEIrRGxELGlFc0IvRGtELEVBQUEsRUFBQTs7QXRCMEcxRDtFdUJsSEE7SUFDRSxrRUFBdUM7SUFDdkMsV0FBVztJdkJtRVQsZ0V1QmxFZ0Q7SXZCb0U1Qyw0RHVCcEU0QyxFQUFBO0VBRXBEO0lBQ0UsK0RBQXVDO0lBQ3ZDLFdBQVc7SXZCOERULHFFdUI3RHNEO0l2QitEbEQsaUV1Qi9Ea0QsRUFBQSxFQUFBOztBdkIwRzFEO0V3QmxIQTtJQUNFLFdBQVcsRUFBQTtFQUViO0lBQ0UsV0FBVztJeEJpRVQsc0N3QmhFd0I7SXhCa0VwQixrQ3dCbEVvQixFQUFBO0VBRTVCO0lBQ0UsV0FBVyxFQUFBLEVBQUE7O0F4QjBHYjtFeUJsSEE7SUFDRSxrRUFBdUM7SUFDdkMsV0FBVztJekJtRVQscUV5QmxFc0Q7SXpCb0VsRCxpRXlCcEVrRCxFQUFBO0VBRTFEO0lBQ0UsK0RBQXVDO0lBQ3ZDLFdBQVc7SXpCOERULGdFeUI3RGdEO0l6QitENUMsNER5Qi9ENEM7SXpCcUVoRCxvQ3lCcEVxQztJekJzRWpDLGdDeUJ0RWlDLEVBQUEsRUFBQTs7QXpCeUd6QztFMEJsSEE7SUFDRSxXQUFXO0kxQm9FVCxvRTBCbkVzRDtJMUJxRWxELGdFMEJyRWtELEVBQUE7RUFFMUQ7SUFDRSxXQUFXO0kxQmdFVCxxRDBCL0RzQztJMUJpRWxDLGlEMEJqRWtDO0kxQnVFdEMsa0MwQnRFbUM7STFCd0UvQiw4QjBCeEUrQixFQUFBLEVBQUE7O0ExQjJHdkM7RTJCbEhBO0lBQ0UsV0FBVztJM0JvRVQscUUyQm5Fc0Q7STNC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LGlCQUFpQjtFQUNqQiw0Q0Z6Q2dCLEVIb0diO0VBRkQ7SUt2REUscUJDbENTO0lEbUNULFdBQVcsRUFDZDs7QUxxREM7RUs1REYsZVJnQlc7RVFmWCxrQzFDR3lCO0UwQ0Z6QixpQkFBaUI7RUFDakIsNENGekNnQixFSG9HYjtFQUZEO0lLdkRFLHFCQ2xDUztJRG1DVCxXQUFXLEVBQ2Q7O0FMcURDO0VLNURGLGVSZ0JXO0VRZlgsa0MxQ0d5QjtFMENGekIsaUJBQWlCO0VBQ2pCLDRDRnpDZ0IsRUhvR2I7RUFGRDtJS3ZERSxxQkNsQ1M7SURtQ1QsV0FBVyxFQUNkOztBTHFEQztFSzVERixlUmdCVztFUWZYLGtDMUNHeUI7RTBDRnpCLGlCQUFpQjtFQUNqQiw0Q0Z6Q2dCLEVIb0diO0VBRkQ7SUt2REUscUJDbENTO0lEbUNULFdBQVcsRUFDZDs7QUxxREM7RUs1REYsZVJnQlc7RVFmWCxrQzFDR3lCO0UwQ0Z6QixpQkFBaUI7RUFDakIsNENGekNnQixFSG9HYjtFQUZEO0lLdkRFLHFCQ2xDUztJRG1DVCxXQUFXLEVBQ2Q7O0FMcURDO0VLakRGLG1CQUFtQixFTG1EaEI7O0FBRkQ7RUtqREYsbUJBQW1CLEVMbURoQjs7QUFGRDtFS2pERixtQkFBbUIsRUxtRGhCOztBQUZEO0VLakRGLG1CQUFtQixFTG1EaEI7O0FBRkQ7RUtqREYsbUJBQW1CLEVMbURoQjs7QUFGRDtFS2pERixtQkFBbUIsRUxtRGhCOztBQUZEO0VPakNGLG1CQ2JvQjtFSEVwQixrQkFBa0IsRUw4Q2Y7RU90RUg7SVBvRUU7TU9qQ0Ysb0JDYm9CLEVSZ0RqQixFQUFBO0VPdEVIO0lQb0VFO01PakNGLHNCQ2JvQixFUmdEakIsRUFBQTtFQUZEO0lLMUNFLG1CQUFtQixFQUN0Qjs7QUx5Q0M7RU9qQ0YsbUJDYm9CO0VIRXBCLGtCQUFrQixFTDhDZjtFT3RFSDtJUG9FRTtNT2pDRixvQkNib0IsRVJnRGpCLEVBQUE7RU90RUg7SVBvRUU7TU9qQ0Ysc0JDYm9CLEVSZ0RqQixFQUFBO0VBRkQ7SUsxQ0UsbUJBQW1CLEVBQ3RCOztBTHlDQztFT2pDRixtQkNib0I7RUhFcEIsa0JBQWtCLEVMOENmO0VPdEVIO0lQb0VFO01PakNGLG9CQ2JvQixFUmdEakIsRUFBQTtFT3RFSDtJUG9FRTtNT2pDRixzQkNib0IsRVJnRGpCLEVBQUE7RUFGRDtJSzFDRSxtQkFBbUIsRUFDdEI7O0FMeUNDO0VPakNGLG1CQ2JvQjtFSEVwQixrQkFBa0IsRUw4Q2Y7RU90RUg7SVBvRUU7TU9qQ0Ysb0JDYm9CLEVSZ0RqQixFQUFBO0VPdEVIO0lQb0VFO01PakNGLHNCQ2JvQixFUmdEakIsRUFBQTtFQUZEO0lLMUNFLG1CQUFtQixFQUN0Qjs7QUx5Q0M7RU9qQ0YsbUJDYm9CO0VIRXBCLGtCQUFrQixFTDhDZjtFT3RFSDtJUG9FRTtNT2pDRixvQkNib0IsRVJnRGpCLEVBQUE7RU90RUg7SVBvRUU7TU9qQ0Ysc0JDYm9CLEVSZ0RqQixFQUFBO0VBRkQ7SUsxQ0UsbUJBQW1CLEVBQ3RCOztBTHlDQztFT2pDRixvQkNib0I7RUhVcEIsa0JBQWtCLEVMc0NmO0VPdEVIO0lQb0VFO01PakNGLGtCQ2JvQixFUmdEakIsRUFBQTtFT3RFSDtJUG9FRTtNT2pDRixzQkNib0IsRVJnRGpCLEVBQUE7O0FBRkQ7RU9qQ0Ysb0JDYm9CO0VIVXBCLGtCQUFrQixFTHNDZjtFT3RFSDtJUG9FRTtNT2pDRixrQkNib0IsRVJnRGpCLEVBQUE7RU90RUg7SVBvRUU7TU9qQ0Ysc0JDYm9CLEVSZ0RqQixFQUFBOztBQUZEO0VPakNGLG9CQ2JvQjtFSFVwQixrQkFBa0IsRUxzQ2Y7RU90RUg7SVBvRUU7TU9qQ0Ysa0JDYm9CLEVSZ0RqQixFQUFBO0VPdEVIO0lQb0VFO01PakNGLHNCQ2JvQixFUmdEakIsRUFBQTs7QUFGRDtFT2pDRixvQkNib0I7RUhVcEIsa0JBQWtCLEVMc0NmO0VPdEVIO0lQb0VFO01PakNGLGtCQ2JvQixFUmdEakIsRUFBQTtFT3RFSDtJUG9FRTtNT2pDRixzQkNib0IsRVJnRGpCLEVBQUE7O0FLbkNQO0VBQ0ksb0JDekRhO0VEMERiLG1CQUFtQjtFQUNuQixXQUFXLEVBQ2Q7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c0I7RUFDdEIsa0JBQWtCO0VBRWxCLGdCQUFnQjtFQUNoQixtQ0RJK0M7RUNIL0MsMkJERThDO0VDRDlDLHFDQUFxQyxFQVV4QztFQTFCRDtJQXVCWSxhRFBvQyxFQ1MzQzs7QUFHTDtFQUNJLFlEbEI2QztFQ21CN0MsYUFBK0I7RUFDL0Isc0JBQXNCO0VBQ3RCLG1CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGlCQUFtQztFQUNuQyxlQUFlO0VBQ2YsU0FBUyxFQTBCWjtFQTdCRDtJQU1RLHVCRDNCeUM7SUM0QnpDLG1CRDNCd0M7SUM0QnhDLFlEaEN5QztJQ2lDekMsWURoQ3dDO0lDaUN4QyxtQkFBbUI7SUFFbkIsaUNBQWlDO0lBQ2pDLDBCQUEwQjtJQUMxQiwrQkFBK0IsRUFDbEM7RUFmTDtJQWtCUSxZQUFZO0lBQ1osZUFBZSxFQUNsQjtFQXBCTDtJQXVCUSxXQUE4QixFQUNqQztFQXhCTDtJQTJCUSxjQUFpQyxFQUNwQzs7QUNoRUg7O0tBRUc7QUFDSDtFQUdNLG9GQUN3QyxFQUN6Qzs7QUFMTDtFQVFNLHVGQUN3QyxFQUN6Qzs7QUFWTDtFQWdCUSxPQUFPO0VBQ1Asb0VBQTZHO0VBQzdHLHVGQUM2QyxFQUM5Qzs7QUFwQlA7RUF1QlEsVUFBVTtFQUNWLGtFQUEyRztFQUMzRywwRkFDNkMsRUFDOUMiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0VmFyaWFibGVzXG4qL1xuJHNpdGUtcHJpbWFyeS1jb2xvcjogI0MwMDtcbiRzaXRlLXNlY29uZGFyeS1jb2xvcjogIzAwNzcyNTtcbiRzZWN0aW9uLWJjazogJGJsYWNrO1xuJHNpdGUtZ3JheTogI2NjY2JjYjtcbiR0ZXh0LWdyYXk6ICM5YjliOWI7XG5cbiRidXR0b24tY29sb3I6ICM3REM4NTU7XG5cbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcblxuJGZvcm0tYmFja2dyb3VuZDogI2RhZTBlMztcbiRmb3JtLWlucHV0OiAkYmxhY2s7XG5cbiRjb2xvci0xOiAjM2UzOTQ3OyBcbiRjb2xvci0yOiAjNzQ1MzYwOyBcbiRjb2xvci0zOiAjZDg4NjgzOyBcbiRjb2xvci00OiAjZmZmOyBcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIFNpdGVcbiovXG4kbWF4aW11bS13aWR0aDogMTE5MHB4O1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0QnJlYWtwb2ludHNcbiovXG4kYnJlYWtwb2ludHM6IChcbiAgICBzbWFsbDogNjY3cHgsXG4gICAgbWVkaXVtOiA3NjhweCxcbiAgICBsYXJnZTogMTAyNHB4XG4pO1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFBhdGhzXG4qL1xuJGZvbnRQYXRoOiBcIi4uL2ZvbnRzXCI7XG4kaW1nUGF0aDogXCIuLi9pbWdcIjtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRHb29nbGUgRm9udHNcbiovXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjEwMCwzMDAsNDAwLDUwMCk7XG4kcm9ib3RvOiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuXG5AbWl4aW4gcm9ib3RvKCRzaXplLCAkc3R5bGUsICR3ZWlnaHQpIHtcbiAgICBmb250LWZhbWlseTogJHJvYm90bztcbiAgICBmb250LXNpemU6ICRzaXplO1xuICAgIGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICAgIGZvbnQtc3R5bGU6ICRzdHlsZTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHotaW5kZXggXG4qL1xuJHNlY29uZGFyeS1iYXItemluZGV4OiAxO1xuJGludHJvLXppbmRleDogMjtcbiRoZWFkZXItemluZGV4OiAzO1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgaGVhZGVyIGhlaWdodFxuKi9cbiRoZWFkZXItUzogNTBweDtcbiRoZWFkZXItTTogNzBweDtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGludHJvIGhlaWdodFxuKi9cbiRpbnRyby1oZWlnaHQtUzogMzAwcHg7XG4kaW50cm8taGVpZ2h0LU06IDQwMHB4O1xuJGludHJvLWhlaWdodC1MOiA2MDBweDtcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHNlY29uZGFyeSBiYXJcbiovXG4kYmFyLWhlaWdodC1mdWxsOiAxMDBweDtcbiRiYXItaGVpZ2h0OiA3MHB4O1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgQnV0dG9uc1xuKi9cblxuQG1peGluIGN0YU1haW4oJGJnOiByZ2JhKCR3aGl0ZSwgLjMpLCAkaHY6ICRzaXRlLXByaW1hcnktY29sb3IsICR0eXBlOiBtb3JlKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgLjNzKTtcbiAgICBAaW5jbHVkZSBiYWNrZmFjZS12aXNpYmlsaXR5KGhpZGRlbik7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICRiZztcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKCR3aGl0ZSwgLjgpO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICY6YWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRodiwgMTAlKTtcbiAgICAgICAgdG9wOiAycHg7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbG9yOiAjNzAzYjg3O1xuICAgICAgICB9XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaHY7IFxuICAgIH1cbn1cblxuQG1peGluIGN0YVNsaWRlKCRiZzogcmdiYSgkd2hpdGUsIC4zKSwgJGh2OiAkc2l0ZS1wcmltYXJ5LWNvbG9yLCAkdHlwZTogbW9yZSkge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsIC4zcyk7XG4gICAgQGluY2x1ZGUgYmFja2ZhY2UtdmlzaWJpbGl0eShoaWRkZW4pO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiAkYmc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgkd2hpdGUsIC44KTtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgcGFkZGluZzogMXJlbSAyLjJyZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgLjNzKTtcbiAgICAgICAgY29udGVudDogXCJcIjsgXG4gICAgICAgIEBpZiAkdHlwZSA9PSBtYWlsIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgjeyRpbWdQYXRofS9pY29uLW1haWwuc3ZnKTtcbiAgICAgICAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiAzMHB4IDMwcHg7IFxuICAgICAgICAgICAgLW8tYmFja2dyb3VuZC1zaXplOiAzMHB4IDMwcHg7IFxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAzMHB4IDMwcHg7IFxuICAgICAgICB9IFxuICAgICAgICBAZWxzZWlmICR0eXBlID09IG1vcmUge1xuICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skaW1nUGF0aH0vaWNvbi1sYXllcnMuc3ZnKTsgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7IFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogLTEwMCU7XG4gICAgXG4gICAgICAgIHNwZWFrOiBub25lO1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgXG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGFsbCAuM3MpO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgIH1cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkaHYsIDEwJSk7XG4gICAgICAgIHRvcDogMnB4O1xuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBjb2xvcjogIzcwM2I4NztcbiAgICAgICAgfVxuICAgIH1cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGh2OyBcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgcmlnaHQ6IDA7IFxuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgfVxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKDIwMCUpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNwYW4ge1xuICAgICAgICBAaW5jbHVkZSBiYWNrZmFjZS12aXNpYmlsaXR5KGhpZGRlbik7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG59XG4iLCIvLyBkdXJhdGlvbiAgICAgU3BlY2lmaWVzIGhvdyBtYW55IHNlY29uZHMgb3IgbWlsbGlzZWNvbmRzIGFuIGFuaW1hdGlvbiB0YWtlcyB0byBjb21wbGV0ZSBvbmUgY3ljbGUuIERlZmF1bHQgMFxuLy9cbi8vIGRlbGF5ICAgICAgICBTcGVjaWZpZXMgd2hlbiB0aGUgYW5pbWF0aW9uIHdpbGwgc3RhcnQuIERlZmF1bHQgMFxuLy9cbi8vIGZ1bmN0aW9uICAgICBEZXNjcmliZXMgaG93IHRoZSBhbmltYXRpb24gd2lsbCBwcm9ncmVzcyBvdmVyIG9uZSBjeWNsZSBvZiBpdHMgZHVyYXRpb24uIERlZmF1bHQgXCJlYXNlXCJcbi8vXG4vLyBjb3VudCAgICAgICAgU3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIGlzIHBsYXllZC4gRGVmYXVsdCAxXG4vL1xuLy8gZmlsbC1tb2RlICAgIFNwZWNpZmllcyBpZiB0aGUgZWZmZWN0cyBvZiBhbiBhbmltYXRpb24gYXJlIGJlZm9yZSB0aGUgYW5pbWF0aW9uIHN0YXJ0cyBhbmQgYWZ0ZXIgaXQgZW5kcy5cbi8vXG4vLyB2aXNpYmlsaXR5ICAgRGV0ZXJtaW5lcyB3aGV0aGVyIG9yIG5vdCBhIHRyYW5zZm9ybWVkIGVsZW1lbnQgaXMgdmlzaWJsZSB3aGVuIGl0IGlzIG5vdCBmYWNpbmcgdGhlIHNjcmVlbi5cblxuJGNvdW50RGVmYXVsdDogMSAhZGVmYXVsdDtcbiRkdXJhdGlvbkRlZmF1bHQ6IDFzICFkZWZhdWx0O1xuJGRlbGF5RGVmYXVsdDogMHMgIWRlZmF1bHQ7XG4kZnVuY3Rpb25EZWZhdWx0OiBlYXNlICFkZWZhdWx0O1xuJGZpbGxEZWZhdWx0OiBib3RoO1xuJHZpc2liaWxpdHlEZWZhdWx0OiBoaWRkZW4gIWRlZmF1bHQ7XG5cbkBtaXhpbiBjb3VudCgkY291bnQ6IDEpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAkY291bnQ7XG4gICAgIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogJGNvdW50O1xuICAgICAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6ICRjb3VudDtcbiAgICAgICAtby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAkY291bnQ7XG4gICAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogJGNvdW50O1xufVxuXG5AbWl4aW4gZHVyYXRpb24oJGR1cmF0aW9uOiAxcykge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xuICAgICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xuICAgICAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xuICAgICAgIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xuICAgICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xufVxuXG5AbWl4aW4gZGVsYXkoJGRlbGF5OiAuMnMpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAgLW1vei1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAgIC1tcy1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAgICAtby1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbn1cblxuQG1peGluIGZ1bmN0aW9uKCRmdW5jdGlvbjogZWFzZSkge1xuICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246ICRmdW5jdGlvbjtcbiAgICAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkZnVuY3Rpb247XG4gICAgICAtbXMtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogJGZ1bmN0aW9uO1xuICAgICAgIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246ICRmdW5jdGlvbjtcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkZnVuY3Rpb247XG59XG5cbkBtaXhpbiBmaWxsLW1vZGUoJGZpbGw6IGJvdGgpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbDtcbiAgICAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbDtcbiAgICAgIC1tcy1hbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbDtcbiAgICAgICAtby1hbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbDtcbn1cblxuQG1peGluIHZpc2liaWxpdHkoJHZpc2liaWxpdHk6IGhpZGRlbikge1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xuICAgICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xuICAgICAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xuICAgICAgIC1vLWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xuICAgICAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xufVxuXG5AbWl4aW4gdHJhbnNmb3JtKCRwcm9wZXJ0eSkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogJHByb3BlcnR5O1xuICAgICAtbW96LXRyYW5zZm9ybTogJHByb3BlcnR5O1xuICAgICAgLW1zLXRyYW5zZm9ybTogJHByb3BlcnR5O1xuICAgICAgIC1vLXRyYW5zZm9ybTogJHByb3BlcnR5O1xuICAgICAgICAgIHRyYW5zZm9ybTogJHByb3BlcnR5O1xufVxuXG5AbWl4aW4gdHJhbnNmb3JtLW9yaWdpbigkdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcikge1xuICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46ICR0cmFuc2Zvcm0tb3JpZ2luO1xuICAgICAtbW96LXRyYW5zZm9ybS1vcmlnaW46ICR0cmFuc2Zvcm0tb3JpZ2luO1xuICAgICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46ICR0cmFuc2Zvcm0tb3JpZ2luO1xuICAgICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46ICR0cmFuc2Zvcm0tb3JpZ2luO1xuICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46ICR0cmFuc2Zvcm0tb3JpZ2luO1xufVxuXG5AbWl4aW4gdHJhbnNmb3JtLXN0eWxlKCR0cmFuc2Zvcm0tc3R5bGU6IGZsYXQpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm0tc3R5bGU6ICR0cmFuc2Zvcm0tc3R5bGU7XG4gICAgIC1tb3otdHJhbnNmb3JtLXN0eWxlOiAkdHJhbnNmb3JtLXN0eWxlO1xuICAgICAgIC1vLXRyYW5zZm9ybS1zdHlsZTogJHRyYW5zZm9ybS1zdHlsZTtcbiAgICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6ICR0cmFuc2Zvcm0tc3R5bGU7XG59XG5cbkBtaXhpbiBhbmltYXRpb24tbmFtZSgkYW5pbWF0aW9uLW5hbWUpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogJGFuaW1hdGlvbi1uYW1lO1xuICAgICAtbW96LWFuaW1hdGlvbi1uYW1lOiAkYW5pbWF0aW9uLW5hbWU7XG4gICAgICAtbXMtYW5pbWF0aW9uLW5hbWU6ICRhbmltYXRpb24tbmFtZTtcbiAgICAgICAtby1hbmltYXRpb24tbmFtZTogJGFuaW1hdGlvbi1uYW1lO1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiAkYW5pbWF0aW9uLW5hbWU7XG59XG5cbkBtaXhpbiBrZXlmcmFtZXMoJGFuaW1hdGlvbi1uYW1lKSB7XG4gIEAtd2Via2l0LWtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG5cbiAgQC1tb3ota2V5ZnJhbWVzICN7JGFuaW1hdGlvbi1uYW1lfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICBALW1zLWtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG5cbiAgQC1vLWtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG5cbiAgQGtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZUluKSB7XG5cdCAgMCUge29wYWNpdHk6IDA7fVxuXHQxMDAlIHtvcGFjaXR5OiAxO31cbn1cblxuQG1peGluIGZhZGVJbigkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcblx0QGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoZmFkZUluKTtcblx0QGluY2x1ZGUgY291bnQoJGNvdW50KTtcblx0QGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcblx0QGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcblx0QGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcblx0QGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcblx0QGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZUluRG93bikge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgtMjBweCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlSW5Eb3duKCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZShmYWRlSW5Eb3duKTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZUluRG93bkJpZykge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgtMjAwMHB4KSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSk7XG4gIH1cbn1cblxuQG1peGluIGZhZGVJbkRvd25CaWcoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVJbkRvd25CaWcpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlSW5MZWZ0KSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKC0yMHB4KSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgwKSk7XG4gIH1cbn1cblxuQG1peGluIGZhZGVJbkxlZnQoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVJbkxlZnQpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlSW5MZWZ0QmlnKSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKC0yMDAwcHgpKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKDApKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZUluTGVmdEJpZygkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoZmFkZUluTGVmdEJpZyk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKGZhZGVJblJpZ2h0KSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKDIwcHgpKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKDApKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZUluUmlnaHQoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVJblJpZ2h0KTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZUluUmlnaHRCaWcpIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMjAwMHB4KSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgwKSk7XG4gIH1cbn1cblxuQG1peGluIGZhZGVJblJpZ2h0QmlnKCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZShmYWRlSW5SaWdodEJpZyk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKGZhZGVJblVwKSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDIwcHgpKTt9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlSW5VcCgkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoZmFkZUluVXApO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlSW5VcEJpZykge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgyMDAwcHgpKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDApKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZUluVXBCaWcoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVJblVwQmlnKTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZU91dCkge1xuXHQgIDAlIHtvcGFjaXR5OiAxO31cblx0MTAwJSB7b3BhY2l0eTogMDt9XG59XG5cbkBtaXhpbiBmYWRlT3V0KCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuXHRAaW5jbHVkZSBhbmltYXRpb24tbmFtZShmYWRlT3V0KTtcblx0QGluY2x1ZGUgY291bnQoJGNvdW50KTtcblx0QGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcblx0QGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcblx0QGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcblx0QGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcblx0QGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZU91dERvd24pIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMjBweCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlT3V0RG93bigkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoZmFkZU91dERvd24pO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlT3V0RG93bkJpZykge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgyMDAwcHgpKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZU91dERvd25CaWcoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVPdXREb3duQmlnKTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZU91dExlZnQpIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTIwcHgpKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZU91dExlZnQoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVPdXRMZWZ0KTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoZmFkZU91dExlZnRCaWcpIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTIwMDBweCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlT3V0TGVmdEJpZygkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoZmFkZU91dExlZnRCaWcpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlT3V0UmlnaHQpIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMjBweCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlT3V0UmlnaHQoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVPdXRSaWdodCk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKGZhZGVPdXRSaWdodEJpZykge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgwKSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgyMDAwcHgpKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZU91dFJpZ2h0QmlnKCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZShmYWRlT3V0UmlnaHRCaWcpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlT3V0VXApIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoLTIwcHgpKTtcbiAgfVxufVxuXG5AbWl4aW4gZmFkZU91dFVwKCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZShmYWRlT3V0VXApO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlT3V0VXBCaWcpIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoLTIwMDBweCkpO1xuICB9XG59XG5cbkBtaXhpbiBmYWRlT3V0VXBCaWcoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKGZhZGVPdXRVcEJpZyk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKHpvb21Jbikge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguMywgLjMsIC4zKSk7XG4gIH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkBtaXhpbiB6b29tSW4oJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKHpvb21Jbik7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKHpvb21JbkRvd24pIHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1MCwgMC4wNTUsIDAuNjc1LCAwLjE5MCk7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguMSwgLjEsIC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKSk7XG4gIH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyMCwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguNDc1LCAuNDc1LCAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKSk7XG4gIH1cbn1cblxuQG1peGluIHpvb21JbkRvd24oJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKHpvb21JbkRvd24pO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyh6b29tSW5MZWZ0KSB7XG4gIDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NTAsIDAuMDU1LCAwLjY3NSwgMC4xOTApO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlM2QoLjEsIC4xLCAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCkpO1xuICB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlM2QoLjQ3NSwgLjQ3NSwgLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCkpO1xuICB9XG59XG5cbkBtaXhpbiB6b29tSW5MZWZ0KCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZSh6b29tSW5MZWZ0KTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoem9vbUluUmlnaHQpIHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1MCwgMC4wNTUsIDAuNjc1LCAwLjE5MCk7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguMSwgLjEsIC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApKTtcbiAgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIwLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZTNkKC40NzUsIC40NzUsIC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKSk7XG4gIH1cbn1cblxuQG1peGluIHpvb21JblJpZ2h0KCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZSh6b29tSW5SaWdodCk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKHpvb21JblVwKSB7XG4gIDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NTAsIDAuMDU1LCAwLjY3NSwgMC4xOTApO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlM2QoLjEsIC4xLCAuMSkgdHJhbnNsYXRlM2QoMCwgMTAwMHB4LCAwKSk7XG4gIH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyMCwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguNDc1LCAuNDc1LCAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCkpO1xuICB9XG59XG5cbkBtaXhpbiB6b29tSW5VcCgkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoem9vbUluVXApO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyh6b29tT3V0KSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUzZCguMywgLjMsIC4zKSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5AbWl4aW4gem9vbU91dCgkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoem9vbU91dCk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGluY2x1ZGUga2V5ZnJhbWVzKHpvb21PdXREb3duKSB7XG4gIDQwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUwLCAwLjA1NSwgMC42NzUsIDAuMTkwKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZTNkKC40NzUsIC40NzUsIC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlM2QoLjEsIC4xLCAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKSk7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtLW9yaWdpbihjZW50ZXIgYm90dG9tKTtcbiAgfVxufVxuXG5AbWl4aW4gem9vbU91dERvd24oJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKHpvb21PdXREb3duKTtcbiAgQGluY2x1ZGUgY291bnQoJGNvdW50KTtcbiAgQGluY2x1ZGUgZHVyYXRpb24oJGR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgZGVsYXkoJGRlbGF5KTtcbiAgQGluY2x1ZGUgZnVuY3Rpb24oJGZ1bmN0aW9uKTtcbiAgQGluY2x1ZGUgZmlsbC1tb2RlKCRmaWxsKTtcbiAgQGluY2x1ZGUgdmlzaWJpbGl0eSgkdmlzaWJpbGl0eSk7XG59XG4iLCJAaW5jbHVkZSBrZXlmcmFtZXMoem9vbU91dExlZnQpIHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZTNkKC40NzUsIC40NzUsIC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZSguMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCkpO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1vcmlnaW4obGVmdCBjZW50ZXIpO1xuICB9XG59XG5cbkBtaXhpbiB6b29tT3V0TGVmdCgkY291bnQ6ICRjb3VudERlZmF1bHQsICRkdXJhdGlvbjogJGR1cmF0aW9uRGVmYXVsdCwgJGRlbGF5OiAkZGVsYXlEZWZhdWx0LCAkZnVuY3Rpb246ICRmdW5jdGlvbkRlZmF1bHQsICRmaWxsOiAkZmlsbERlZmF1bHQsICR2aXNpYmlsaXR5OiAkdmlzaWJpbGl0eURlZmF1bHQpIHtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLW5hbWUoem9vbU91dExlZnQpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyh6b29tT3V0UmlnaHQpIHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZTNkKC40NzUsIC40NzUsIC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUoLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCkpO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1vcmlnaW4ocmlnaHQgY2VudGVyKTtcbiAgfVxufVxuXG5AbWl4aW4gem9vbU91dFJpZ2h0KCRjb3VudDogJGNvdW50RGVmYXVsdCwgJGR1cmF0aW9uOiAkZHVyYXRpb25EZWZhdWx0LCAkZGVsYXk6ICRkZWxheURlZmF1bHQsICRmdW5jdGlvbjogJGZ1bmN0aW9uRGVmYXVsdCwgJGZpbGw6ICRmaWxsRGVmYXVsdCwgJHZpc2liaWxpdHk6ICR2aXNpYmlsaXR5RGVmYXVsdCkge1xuICBAaW5jbHVkZSBhbmltYXRpb24tbmFtZSh6b29tT3V0UmlnaHQpO1xuICBAaW5jbHVkZSBjb3VudCgkY291bnQpO1xuICBAaW5jbHVkZSBkdXJhdGlvbigkZHVyYXRpb24pO1xuICBAaW5jbHVkZSBkZWxheSgkZGVsYXkpO1xuICBAaW5jbHVkZSBmdW5jdGlvbigkZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBmaWxsLW1vZGUoJGZpbGwpO1xuICBAaW5jbHVkZSB2aXNpYmlsaXR5KCR2aXNpYmlsaXR5KTtcbn1cbiIsIkBpbmNsdWRlIGtleWZyYW1lcyh6b29tT3V0VXApIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NTAsIDAuMDU1LCAwLjY3NSwgMC4xOTApO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlM2QoLjQ3NSwgLjQ3NSwgLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCkpO1xuICB9XG4gIDEwMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIwLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZTNkKC4xLCAuMSwgLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApKTtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0tb3JpZ2luKGNlbnRlciBib3R0b20pO1xuICB9XG59XG5cbkBtaXhpbiB6b29tT3V0VXAoJGNvdW50OiAkY291bnREZWZhdWx0LCAkZHVyYXRpb246ICRkdXJhdGlvbkRlZmF1bHQsICRkZWxheTogJGRlbGF5RGVmYXVsdCwgJGZ1bmN0aW9uOiAkZnVuY3Rpb25EZWZhdWx0LCAkZmlsbDogJGZpbGxEZWZhdWx0LCAkdmlzaWJpbGl0eTogJHZpc2liaWxpdHlEZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1uYW1lKHpvb21PdXRVcCk7XG4gIEBpbmNsdWRlIGNvdW50KCRjb3VudCk7XG4gIEBpbmNsdWRlIGR1cmF0aW9uKCRkdXJhdGlvbik7XG4gIEBpbmNsdWRlIGRlbGF5KCRkZWxheSk7XG4gIEBpbmNsdWRlIGZ1bmN0aW9uKCRmdW5jdGlvbik7XG4gIEBpbmNsdWRlIGZpbGwtbW9kZSgkZmlsbCk7XG4gIEBpbmNsdWRlIHZpc2liaWxpdHkoJHZpc2liaWxpdHkpO1xufVxuIiwiQGNoYXJzZXQgJ3V0Zi04JztcblxuQGltcG9ydCAnYm91cmJvbic7XG5AaW1wb3J0IFwiYW5pbWF0ZS5zY3NzXCI7XG5AaW1wb3J0ICd0eXBpJztcblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRGcmFtZXdvcmtcbiovXG5AaW1wb3J0ICdjb3JlL2ZuZCc7XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0QXBwXG4qL1xuQGltcG9ydCAnY29yZS9taXhpbnMvbWl4aW5zJztcblxuQGltcG9ydCAnY29tcG9uZW50cy8wMC12YXJzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvMDEtdGV4dCc7XG5AaW1wb3J0ICdjb21wb25lbnRzLzAyLWxheW91dCc7XG5AaW1wb3J0ICdjb21wb25lbnRzLzAyYS1jYXNlc3R1ZHknO1xuQGltcG9ydCAnY29tcG9uZW50cy8wMy1oZWFkZXInO1xuQGltcG9ydCAnY29tcG9uZW50cy8wM2EtbmF2aWdhdGlvbic7XG5AaW1wb3J0ICdjb21wb25lbnRzLzA0LWZvb3Rlcic7XG5AaW1wb3J0ICdjb21wb25lbnRzLzA1LXV0aWxpdGllcyc7XG5cbkBpbXBvcnQgJ2V4dHJhcy9oYW1idXJnZXJzL2hhbWJ1cmdlcnMnXG4iLCIvKipcbiAqIEZvdW5kYXRpb24gZm9yIFNpdGVzIGJ5IFpVUkJcbiAqIFZlcnNpb24gNi4yLjRcbiAqIGZvdW5kYXRpb24uenVyYi5jb21cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCBPcGVuIFNvdXJjZVxuICovXG5cbi8vIFNhc3MgdXRpbGl0aWVzXG5AaW1wb3J0ICd1dGlsL3V0aWwnO1xuXG4vLyBHbG9iYWwgdmFyaWFibGVzIGFuZCBzdHlsZXNcbkBpbXBvcnQgJ2dsb2JhbCc7XG5cbi8vIENvbXBvbmVudHNcbkBpbXBvcnQgJ2dyaWQvZ3JpZCc7XG5AaW1wb3J0ICd0eXBvZ3JhcGh5L3R5cG9ncmFwaHknO1xuQGltcG9ydCAnZm9ybXMvZm9ybXMnO1xuQGltcG9ydCAnY29tcG9uZW50cy92aXNpYmlsaXR5JztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvZmxvYXQnO1xuQGltcG9ydCAnY29tcG9uZW50cy9idXR0b24nO1xuQGltcG9ydCAnY29tcG9uZW50cy9idXR0b24tZ3JvdXAnO1xuQGltcG9ydCAnY29tcG9uZW50cy9hY2NvcmRpb24tbWVudSc7XG5AaW1wb3J0ICdjb21wb25lbnRzL2FjY29yZGlvbic7XG5AaW1wb3J0ICdjb21wb25lbnRzL2JhZGdlJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvYnJlYWRjcnVtYnMnO1xuQGltcG9ydCAnY29tcG9uZW50cy9jYWxsb3V0JztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvY2xvc2UtYnV0dG9uJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvZHJpbGxkb3duJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvZHJvcGRvd24tbWVudSc7XG5AaW1wb3J0ICdjb21wb25lbnRzL2Ryb3Bkb3duJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvZmxleCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL2ZsZXgtdmlkZW8nO1xuQGltcG9ydCAnY29tcG9uZW50cy9sYWJlbCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL21lZGlhLW9iamVjdCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL21lbnUnO1xuQGltcG9ydCAnY29tcG9uZW50cy9tZW51LWljb24nO1xuQGltcG9ydCAnY29tcG9uZW50cy9vZmYtY2FudmFzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvb3JiaXQnO1xuQGltcG9ydCAnY29tcG9uZW50cy9wYWdpbmF0aW9uJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcmV2ZWFsJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc2xpZGVyJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc3RpY2t5JztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc3dpdGNoJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvdGFibGUnO1xuQGltcG9ydCAnY29tcG9uZW50cy90YWJzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvdGl0bGUtYmFyJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvdG9wLWJhcic7XG5AaW1wb3J0ICdjb21wb25lbnRzL3RodW1ibmFpbCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL3Rvb2x0aXAnO1xuXG5AbWl4aW4gZm91bmRhdGlvbi1ldmVyeXRoaW5nKCRmbGV4OiBmYWxzZSkge1xuICBAaWYgJGZsZXgge1xuICAgICRnbG9iYWwtZmxleGJveDogdHJ1ZSAhZ2xvYmFsO1xuICB9XG5cbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1nbG9iYWwtc3R5bGVzO1xuICBAaWYgbm90ICRmbGV4IHtcbiAgICBAaW5jbHVkZSBmb3VuZGF0aW9uLWdyaWQ7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBpbmNsdWRlIGZvdW5kYXRpb24tZmxleC1ncmlkO1xuICB9XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tdHlwb2dyYXBoeTtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1mb3JtcztcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1idXR0b247XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tYWNjb3JkaW9uO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWFjY29yZGlvbi1tZW51O1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWJhZGdlO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWJyZWFkY3J1bWJzO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWJ1dHRvbi1ncm91cDtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1jYWxsb3V0O1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWNsb3NlLWJ1dHRvbjtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1tZW51O1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLW1lbnUtaWNvbjtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1kcmlsbGRvd24tbWVudTtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1kcm9wZG93bjtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1kcm9wZG93bi1tZW51O1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWZsZXgtdmlkZW87XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tbGFiZWw7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tbWVkaWEtb2JqZWN0O1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLW9mZi1jYW52YXM7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tb3JiaXQ7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tcGFnaW5hdGlvbjtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1wcm9ncmVzcy1iYXI7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tc2xpZGVyO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXN0aWNreTtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1yZXZlYWw7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tc3dpdGNoO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXRhYmxlO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXRhYnM7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tdGh1bWJuYWlsO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXRpdGxlLWJhcjtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi10b29sdGlwO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXRvcC1iYXI7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tdmlzaWJpbGl0eS1jbGFzc2VzO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLWZsb2F0LWNsYXNzZXM7XG5cbiAgQGlmICRmbGV4IHtcbiAgICBAaW5jbHVkZSBmb3VuZGF0aW9uLWZsZXgtY2xhc3NlcztcbiAgfVxufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vIHNjc3MtbGludDpkaXNhYmxlIENvbG9yVmFyaWFibGUsIFF1YWxpZnlpbmdFbGVtZW50LCBWZW5kb3JQcmVmaXhcblxuLy8vL1xuLy8vIEBncm91cCBnbG9iYWxcbi8vLy9cblxuLy8vIEZvbnQgc2l6ZSBhdHRyaWJ1dGUgYXBwbGllZCB0byBgPGh0bWw+YCBhbmQgYDxib2R5PmAuIFdlIHVzZSAxMDAlIGJ5IGRlZmF1bHQgc28gdGhlIHZhbHVlIGlzIGluaGVyaXRlZCBmcm9tIHRoZSB1c2VyJ3MgYnJvd3NlciBzZXR0aW5ncy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRnbG9iYWwtZm9udC1zaXplOiAxMDAlICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIHdpZHRoIG9mIHlvdXIgc2l0ZS4gVXNlZCBieSB0aGUgZ3JpZCB0byBkZXRlcm1pbmUgcm93IHdpZHRoLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC13aWR0aDogcmVtLWNhbGMoMTIwMCkgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGxpbmUgaGVpZ2h0IGZvciBhbGwgdHlwZS4gYCRnbG9iYWwtbGluZWhlaWdodGAgaXMgMjRweCB3aGlsZSBgJGdsb2JhbC1mb250LXNpemVgIGlzIDE2cHhcbi8vLyBAdHlwZSBOdW1iZXJcbiRnbG9iYWwtbGluZWhlaWdodDogMS41ICFkZWZhdWx0O1xuXG4vLy8gQ29sb3JzIHVzZWQgZm9yIGJ1dHRvbnMsIGNhbGxvdXRzLCBsaW5rcywgZXRjLiBUaGVyZSBtdXN0IGFsd2F5cyBiZSBhIGNvbG9yIGNhbGxlZCBgcHJpbWFyeWAuXG4vLy8gQHR5cGUgTWFwXG4kZm91bmRhdGlvbi1wYWxldHRlOiAoXG4gIHByaW1hcnk6ICMyMTk5ZTgsXG4gIHNlY29uZGFyeTogIzc3NyxcbiAgc3VjY2VzczogIzNhZGI3NixcbiAgd2FybmluZzogI2ZmYWUwMCxcbiAgYWxlcnQ6ICNlYzU4NDAsXG4pICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgbGlnaHQgZ3JheSBVSSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJGxpZ2h0LWdyYXk6ICNlNmU2ZTYgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciB1c2VkIGZvciBtZWRpdW0gZ3JheSBVSSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJG1lZGl1bS1ncmF5OiAjY2FjYWNhICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgZGFyayBncmF5IFVJIGl0ZW1zLlxuLy8vIEB0eXBlIENvbG9yXG4kZGFyay1ncmF5OiAjOGE4YThhICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgYmxhY2sgdWkgaXRlbXMuXG4vLy8gQHR5cGUgQ29sb3JcbiRibGFjazogIzBhMGEwYSAhZGVmYXVsdDtcblxuLy8vIENvbG9yIHVzZWQgZm9yIHdoaXRlIHVpIGl0ZW1zLlxuLy8vIEB0eXBlIENvbG9yXG4kd2hpdGU6ICNmZWZlZmUgIWRlZmF1bHQ7XG5cbi8vLyBCYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIENvbG9yXG4kYm9keS1iYWNrZ3JvdW5kOiAkd2hpdGUgIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IGNvbG9yIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIENvbG9yXG4kYm9keS1mb250LWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XG5cbi8vLyBGb250IHN0YWNrIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIExpc3RcbiRib2R5LWZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIFJvYm90bywgQXJpYWwsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbi8vLyBTZXQgdG8gYHRydWVgIHRvIGVuYWJsZSBhbnRpYWxpYXNlZCB0eXBlLCB1c2luZyB0aGUgYC13ZWJraXQtZm9udC1zbW9vdGhpbmdgIGFuZCBgLW1vei1vc3gtZm9udC1zbW9vdGhpbmdgIENTUyBwcm9wZXJ0aWVzLlxuLy8vIEB0eXBlIEJvb2xlYW5cbiRib2R5LWFudGlhbGlhc2VkOiB0cnVlICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIHZhbHVlIHVzZWQgZm9yIG1hcmdpbiBvbiBjb21wb25lbnRzLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1tYXJnaW46IDFyZW0gIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgdmFsdWUgdXNlZCBmb3IgcGFkZGluZyBvbiBjb21wb25lbnRzLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1wYWRkaW5nOiAxcmVtICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIGZvbnQgd2VpZ2h0IHVzZWQgZm9yIG5vcm1hbCB0eXBlLlxuLy8vIEB0eXBlIEtleXdvcmQgfCBOdW1iZXJcbiRnbG9iYWwtd2VpZ2h0LW5vcm1hbDogbm9ybWFsICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIGZvbnQgd2VpZ2h0IHVzZWQgZm9yIGJvbGQgdHlwZS5cbi8vLyBAdHlwZSBLZXl3b3JkIHwgTnVtYmVyXG4kZ2xvYmFsLXdlaWdodC1ib2xkOiBib2xkICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIHZhbHVlIHVzZWQgZm9yIGFsbCBlbGVtZW50cyB0aGF0IGhhdmUgYSBib3JkZXIgcmFkaXVzLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1yYWRpdXM6IDAgIWRlZmF1bHQ7XG5cbi8vLyBTZXRzIHRoZSB0ZXh0IGRpcmVjdGlvbiBvZiB0aGUgQ1NTLiBDYW4gYmUgZWl0aGVyIGBsdHJgIG9yIGBydGxgLlxuLy8vIEB0eXBlIEtleXdvcmRcbiRnbG9iYWwtdGV4dC1kaXJlY3Rpb246IGx0ciAhZGVmYXVsdDtcblxuLy8vIEVuYWJsZXMgZmxleGJveCBmb3IgY29tcG9uZW50cyB0aGF0IHN1cHBvcnQgaXQuXG4vLy8gQHR5cGUgQm9vbGVhblxuJGdsb2JhbC1mbGV4Ym94OiBmYWxzZSAhZGVmYXVsdDtcblxuQGlmIG5vdCBtYXAtaGFzLWtleSgkZm91bmRhdGlvbi1wYWxldHRlLCBwcmltYXJ5KSB7XG4gIEBlcnJvciAnSW4gJGZvdW5kYXRpb24tcGFsZXR0ZSwgeW91IG11c3QgaGF2ZSBhIGNvbG9yIG5hbWVkIFwicHJpbWFyeVwiLic7XG59XG5cbi8vIEludGVybmFsIHZhcmlhYmxlcyB1c2VkIGZvciB0ZXh0IGRpcmVjdGlvblxuJGdsb2JhbC1sZWZ0OiBpZigkZ2xvYmFsLXRleHQtZGlyZWN0aW9uID09IHJ0bCwgcmlnaHQsIGxlZnQpO1xuJGdsb2JhbC1yaWdodDogaWYoJGdsb2JhbC10ZXh0LWRpcmVjdGlvbiA9PSBydGwsIGxlZnQsIHJpZ2h0KTtcblxuLy8gSW50ZXJuYWwgdmFyaWFibGVzIHVzZWQgZm9yIGNvbG9yc1xuJHByaW1hcnktY29sb3I6IG1hcC1nZXQoJGZvdW5kYXRpb24tcGFsZXR0ZSwgcHJpbWFyeSk7XG4kc2Vjb25kYXJ5LWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHNlY29uZGFyeSk7XG4kc3VjY2Vzcy1jb2xvcjogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBzdWNjZXNzKTtcbiR3YXJuaW5nLWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHdhcm5pbmcpO1xuJGFsZXJ0LWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIGFsZXJ0KTtcblxuLy8gUmVtb3ZlIHRoaXMgaW4gNi4zXG4kLXpmLW1lbnUtaWNvbi1pbXBvcnRlZDogZmFsc2U7XG4kLXpmLWZsZXgtY2xhc3Nlcy1pbXBvcnRlZDogZmFsc2U7XG5cbkBtaXhpbiBmb3VuZGF0aW9uLWdsb2JhbC1zdHlsZXMge1xuICBAaW5jbHVkZSAtemYtbm9ybWFsaXplO1xuXG4gIC8vIFRoZXNlIHN0eWxlcyBhcmUgYXBwbGllZCB0byBhIDxtZXRhPiB0YWcsIHdoaWNoIGlzIHJlYWQgYnkgdGhlIEZvdW5kYXRpb24gSmF2YVNjcmlwdFxuICAuZm91bmRhdGlvbi1tcSB7XG4gICAgZm9udC1mYW1pbHk6ICcjey16Zi1icC1zZXJpYWxpemUoJGJyZWFrcG9pbnRzKX0nO1xuICB9XG5cbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAkZ2xvYmFsLWZvbnQtc2l6ZTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG5cbiAgLy8gU2V0IGJveC1zaXppbmcgZ2xvYmFsbHkgdG8gaGFuZGxlIHBhZGRpbmcgYW5kIGJvcmRlciB3aWR0aHNcbiAgKixcbiAgKjo6YmVmb3JlLFxuICAqOjphZnRlciB7XG4gICAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgfVxuXG4gIC8vIERlZmF1bHQgYm9keSBzdHlsZXNcbiAgYm9keSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1mYW1pbHk6ICRib2R5LWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtd2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6ICRnbG9iYWwtbGluZWhlaWdodDtcbiAgICBjb2xvcjogJGJvZHktZm9udC1jb2xvcjtcbiAgICBiYWNrZ3JvdW5kOiAkYm9keS1iYWNrZ3JvdW5kO1xuXG4gICAgQGlmICgkYm9keS1hbnRpYWxpYXNlZCkge1xuICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAgIH1cbiAgfVxuXG4gIGltZyB7XG4gICAgLy8gR3JpZCBkZWZhdWx0cyB0byBnZXQgaW1hZ2VzIGFuZCBlbWJlZHMgdG8gd29yayBwcm9wZXJseVxuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYztcblxuICAgIC8vIEdldCByaWQgb2YgZ2FwIHVuZGVyIGltYWdlcyBieSBtYWtpbmcgdGhlbSBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGJ5IGRlZmF1bHRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgfVxuXG4gIC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSB0YWtlcyBvbiBoZWlnaHQgYXV0b21hdGljYWxseVxuICB0ZXh0YXJlYSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4gIH1cblxuICAvLyBNYWtlIHNlbGVjdCBlbGVtZW50cyBhcmUgMTAwJSB3aWR0aCBieSBkZWZhdWx0XG4gIHNlbGVjdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4gIH1cblxuICAvLyBTdHlsZXMgR29vZ2xlIE1hcHMgYW5kIE1hcFF1ZXN0IGVtYmVkcyBwcm9wZXJseVxuICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBJZFNlbGVjdG9yXG4gICNtYXBfY2FudmFzLFxuICAubWFwX2NhbnZhcyxcbiAgLm1xYS1kaXNwbGF5IHtcbiAgICBpbWcsXG4gICAgZW1iZWQsXG4gICAgb2JqZWN0IHtcbiAgICAgIG1heC13aWR0aDogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gIC8vIFJlc2V0IDxidXR0b24+IHN0eWxlcyBjcmVhdGVkIGJ5IG1vc3QgYnJvd3NlcnNcbiAgYnV0dG9uIHtcbiAgICBAaW5jbHVkZSBkaXNhYmxlLW1vdXNlLW91dGxpbmU7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgfVxuXG4gIC8vIEludGVybmFsIGNsYXNzZXMgdG8gc2hvdy9oaWRlIGVsZW1lbnRzIGluIEphdmFTY3JpcHRcbiAgLmlzLXZpc2libGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAuaXMtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLy8vIExvYWRzIG5vcm1hbGl6ZS5jc3MuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG5AbWl4aW4gLXpmLW5vcm1hbGl6ZSB7XG4gIC8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuICAvKipcbiAgICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAgICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAgICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICAgKi9cblxuICBodG1sIHtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICAgKi9cblxuICBib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICAvKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gICAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gICAqIGFuZCBGaXJlZm94LlxuICAgKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICAgKi9cblxuICBhcnRpY2xlLFxuICBhc2lkZSxcbiAgZGV0YWlscyxcbiAgZmlnY2FwdGlvbixcbiAgZmlndXJlLFxuICBmb290ZXIsXG4gIGhlYWRlcixcbiAgaGdyb3VwLFxuICBtYWluLFxuICBtZW51LFxuICBuYXYsXG4gIHNlY3Rpb24sXG4gIHN1bW1hcnkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gICAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAgICovXG5cbiAgYXVkaW8sXG4gIGNhbnZhcyxcbiAgcHJvZ3Jlc3MsXG4gIHZpZGVvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbiAgfVxuXG4gIC8qKlxuICAgKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICAgKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICAgKi9cblxuICBhdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAgICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICAgKi9cblxuICBbaGlkZGVuXSxcbiAgdGVtcGxhdGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAvKiBMaW5rc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICovXG5cbiAgYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAvKipcbiAgICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICAgKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gICAqL1xuXG4gIGE6YWN0aXZlLFxuICBhOmhvdmVyIHtcbiAgICBvdXRsaW5lOiAwO1xuICB9XG5cbiAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAgKi9cblxuICBhYmJyW3RpdGxlXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gICAqL1xuXG4gIGIsXG4gIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICAgKi9cblxuICBkZm4ge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gICAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgICovXG5cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIG1hcmdpbjogMC42N2VtIDA7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAgICovXG5cbiAgbWFyayB7XG4gICAgYmFja2dyb3VuZDogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICovXG5cbiAgc21hbGwge1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICB9XG5cbiAgLyoqXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAgICovXG5cbiAgc3ViLFxuICBzdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIH1cblxuICBzdXAge1xuICAgIHRvcDogLTAuNWVtO1xuICB9XG5cbiAgc3ViIHtcbiAgICBib3R0b206IC0wLjI1ZW07XG4gIH1cblxuICAvKiBFbWJlZGRlZCBjb250ZW50XG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICAgKi9cblxuICBpbWcge1xuICAgIGJvcmRlcjogMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAgICovXG5cbiAgc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICAvKiBHcm91cGluZyBjb250ZW50XG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICAgKi9cblxuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICAgKi9cblxuICBociB7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cblxuICBwcmUge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAgICovXG5cbiAgY29kZSxcbiAga2JkLFxuICBwcmUsXG4gIHNhbXAge1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgfVxuXG4gIC8qIEZvcm1zXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gICAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAgICovXG5cbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAgICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gICAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gICAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAgKi9cblxuICBidXR0b24sXG4gIGlucHV0LFxuICBvcHRncm91cCxcbiAgc2VsZWN0LFxuICB0ZXh0YXJlYSB7XG4gICAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gICAgbWFyZ2luOiAwOyAvKiAzICovXG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gICAqL1xuXG4gIGJ1dHRvbiB7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICAgKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICAgKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICAgKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gICAqL1xuXG4gIGJ1dHRvbixcbiAgc2VsZWN0IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgfVxuXG4gIC8qKlxuICAgKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICAgKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAgICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICAgKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICAgKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gICAqL1xuXG4gIGJ1dHRvbixcbiAgaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG4gIGlucHV0W3R5cGU9XCJyZXNldFwiXSxcbiAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbiAgfVxuXG4gIC8qKlxuICAgKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICAgKi9cblxuICBidXR0b25bZGlzYWJsZWRdLFxuICBodG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gICAqL1xuXG4gIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbiAgaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlcjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAgICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gICAqL1xuXG4gIGlucHV0IHtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB9XG5cbiAgLyoqXG4gICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAgICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAgICpcbiAgICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgICovXG5cbiAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuICBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIH1cblxuICAvKipcbiAgICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAgICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAgICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICAgKi9cblxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cblxuICAvKipcbiAgICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gICAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gICAqL1xuXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAgICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICAgKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gICAqL1xuXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gICAqIFtOT1RFXSBXZSBkb24ndCBlbmFibGUgdGhpcyBydWxlc2V0IGluIEZvdW5kYXRpb24sIGJlY2F1c2Ugd2Ugd2FudCB0aGUgPGZpZWxkc2V0PiBlbGVtZW50IHRvIGhhdmUgcGxhaW4gc3R5bGluZy5cbiAgICovXG5cbiAgLyogZmllbGRzZXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gICAgbWFyZ2luOiAwIDJweDtcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG4gIH0gKi9cblxuICAvKipcbiAgICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICAgKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gICAqL1xuXG4gIGxlZ2VuZCB7XG4gICAgYm9yZGVyOiAwOyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gICAqL1xuXG4gIHRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxuXG4gIC8qKlxuICAgKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gICAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICAgKi9cblxuICBvcHRncm91cCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICAvKiBUYWJsZXNcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICAgKi9cblxuICB0YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgfVxuXG4gIHRkLFxuICB0aCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufVxuIiwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzoxMDAsMzAwLDQwMCw1MDApO1xuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZUluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZUluRG93biB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgZmFkZUluRG93biB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW5Eb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZUluRG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyBmYWRlSW5Eb3duQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZUluRG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgZmFkZUluRG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkBrZXlmcmFtZXMgZmFkZUluRG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5MZWZ0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlSW5MZWZ0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkxlZnQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5MZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVJbkxlZnRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyBmYWRlSW5MZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlSW5MZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW5MZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZUluUmlnaHQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW5SaWdodCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5SaWdodEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZUluUmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZUluUmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlSW5SaWdodEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5VcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyBmYWRlSW5VcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIGZhZGVJblVwIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlSW5VcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZUluVXBCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVJblVwQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIGZhZGVJblVwQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgZmFkZUluVXBCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW5VcEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyBmYWRlT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDsgfSB9XG5cbkAtby1rZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVPdXREb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXREb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dERvd24ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGZhZGVPdXREb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlT3V0RG93biB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0RG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZU91dERvd25CaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dERvd25CaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlT3V0RG93bkJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwMDBweCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXREb3duQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0TGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXRMZWZ0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyBmYWRlT3V0TGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlT3V0TGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlT3V0TGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwcHgpOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVPdXRMZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXRMZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dExlZnRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGZhZGVPdXRMZWZ0QmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlT3V0TGVmdEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0UmlnaHQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZU91dFJpZ2h0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dFJpZ2h0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlT3V0UmlnaHQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXRSaWdodCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0UmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXRSaWdodEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyBmYWRlT3V0UmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlT3V0UmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlT3V0UmlnaHRCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAwcHgpOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVPdXRVcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXRVcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dFVwIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGZhZGVPdXRVcCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlT3V0VXAge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0VXBCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgZmFkZU91dFVwQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgZmFkZU91dFVwQmlnIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpOyB9IH1cblxuQC1vLWtleWZyYW1lcyBmYWRlT3V0VXBCaWcge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXRVcEJpZyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwMHB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyB6b29tSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIHpvb21JbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyB6b29tSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC1vLWtleWZyYW1lcyB6b29tSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQGtleWZyYW1lcyB6b29tSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHpvb21JbkRvd24ge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7IH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tSW5Eb3duIHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyB6b29tSW5Eb3duIHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIHpvb21JbkRvd24ge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7IH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbUluRG93biB7XG4gIDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTEwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0xMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMTAwMHB4LCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHpvb21JbkxlZnQge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7IH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tSW5MZWZ0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyB6b29tSW5MZWZ0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIHpvb21JbkxlZnQge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7IH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbUluTGVmdCB7XG4gIDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoLTEwMDBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKC0xMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgtMTAwMHB4LCAwLCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgxMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHpvb21JblJpZ2h0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7IH0gfVxuXG5ALW1vei1rZXlmcmFtZXMgem9vbUluUmlnaHQge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDEwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIHpvb21JblJpZ2h0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIHpvb21JblJpZ2h0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIHpvb21JblJpZ2h0IHtcbiAgMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgxMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMTAwMHB4LCAwLCAwKTsgfVxuICA2MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgem9vbUluVXAge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tSW5VcCB7XG4gIDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMTAwMHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7IH1cbiAgNjAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgem9vbUluVXAge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgem9vbUluVXAge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbUluVXAge1xuICAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDEwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAxMDAwcHgsIDApOyB9XG4gIDYwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyB6b29tT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIHpvb21PdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTsgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5ALW1zLWtleWZyYW1lcyB6b29tT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQC1vLWtleWZyYW1lcyB6b29tT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQGtleWZyYW1lcyB6b29tT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4zLCAwLjMsIDAuMyk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMywgMC4zLCAwLjMpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHpvb21PdXREb3duIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApOyB9XG4gIDEwMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tT3V0RG93biB7XG4gIDQwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtby10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207IH0gfVxuXG5ALW1zLWtleWZyYW1lcyB6b29tT3V0RG93biB7XG4gIDQwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtby10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIHpvb21PdXREb3duIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApOyB9XG4gIDEwMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbU91dERvd24ge1xuICA0MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIC02MHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgLTYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCAtNjBweCwgMCk7IH1cbiAgMTAwJSB7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMSk7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIDIwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAyMDAwcHgsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtbW96LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHpvb21PdXRMZWZ0IHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIHpvb21PdXRMZWZ0IHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgem9vbU91dExlZnQge1xuICA0MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIHpvb21PdXRMZWZ0IHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyOyB9IH1cblxuQGtleWZyYW1lcyB6b29tT3V0TGVmdCB7XG4gIDQwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDQycHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCg0MnB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoNDJweCwgMCwgMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKC0yMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgtMjAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoLTIwMDBweCwgMCwgMCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgICAtbW96LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgICAtby10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyB6b29tT3V0UmlnaHQge1xuICA0MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tT3V0UmlnaHQge1xuICA0MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIHpvb21PdXRSaWdodCB7XG4gIDQwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoMjAwMHB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgICAtby10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyOyB9IH1cblxuQC1vLWtleWZyYW1lcyB6b29tT3V0UmlnaHQge1xuICA0MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjEpIHRyYW5zbGF0ZTNkKDIwMDBweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbU91dFJpZ2h0IHtcbiAgNDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgtNDJweCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKC00MnB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoLTQycHgsIDAsIDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoMjAwMHB4LCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMC4xKSB0cmFuc2xhdGUzZCgyMDAwcHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoMjAwMHB4LCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoMjAwMHB4LCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMSkgdHJhbnNsYXRlM2QoMjAwMHB4LCAwLCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgICAtbW96LXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgem9vbU91dFVwIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyB6b29tT3V0VXAge1xuICA0MCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApOyB9XG4gIDEwMCUge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMjAwMHB4LCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICAtbW96LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW8tdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tOyB9IH1cblxuQC1tcy1rZXlmcmFtZXMgem9vbU91dFVwIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgem9vbU91dFVwIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbU91dFVwIHtcbiAgNDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC40NzUsIDAuNDc1LCAwLjQ3NSkgdHJhbnNsYXRlM2QoMCwgNjBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuNDc1LCAwLjQ3NSwgMC40NzUpIHRyYW5zbGF0ZTNkKDAsIDYwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjQ3NSwgMC40NzUsIDAuNDc1KSB0cmFuc2xhdGUzZCgwLCA2MHB4LCAwKTsgfVxuICAxMDAlIHtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC4xLCAwLjEsIDAuMSkgdHJhbnNsYXRlM2QoMCwgLTIwMDBweCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDAuMSwgMC4xLCAwLjEpIHRyYW5zbGF0ZTNkKDAsIC0yMDAwcHgsIDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjEsIDAuMSwgMC4xKSB0cmFuc2xhdGUzZCgwLCAtMjAwMHB4LCAwKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBib3R0b207XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGJvdHRvbTsgfSB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0RnJhbWV3b3JrXG4qL1xuLyoqXG4gKiBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4gKiBWZXJzaW9uIDYuMi40XG4gKiBmb3VuZGF0aW9uLnp1cmIuY29tXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcbiAqL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gICAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gICAqIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4gICAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAgICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAgICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICAgKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICAgKiBhbmQgRmlyZWZveC5cbiAgICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAgICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAgICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAgICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICAgKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAgICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAgICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAgICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICAgKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICAgKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gICAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAgICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAgKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAgKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICAgKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAgICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICAgKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gICAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAgICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gICAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAgICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gICAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAgICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICAgKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gICAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAgICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gICAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICAgKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbi8qIEZvcm1zXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAgICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICAgKi9cbi8qKlxuICAgKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gICAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICAgKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICAgKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqLyB9XG5cbi8qKlxuICAgKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAgICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICAgKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICAgKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICAgKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gICAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gICAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gICAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICAgKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gICAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gICAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAgICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gICAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gICAqL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDsgfVxuXG4vKipcbiAgICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICAgKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICAgKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gICAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICAgKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAgICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICAgKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICAgKlxuICAgKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICAgKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAgKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICAgKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICAgKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gICAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gICAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICAgKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICAgKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAgICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICAgKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gICAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gICAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAgICogW05PVEVdIFdlIGRvbid0IGVuYWJsZSB0aGlzIHJ1bGVzZXQgaW4gRm91bmRhdGlvbiwgYmVjYXVzZSB3ZSB3YW50IHRoZSA8ZmllbGRzZXQ+IGVsZW1lbnQgdG8gaGF2ZSBwbGFpbiBzdHlsaW5nLlxuICAgKi9cbi8qIGZpZWxkc2V0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICAgIG1hcmdpbjogMCAycHg7XG4gICAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xuICB9ICovXG4vKipcbiAgICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICAgKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gICAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAgICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICAgKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gICAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICAgKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICAgKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLmZvdW5kYXRpb24tbXEge1xuICBmb250LWZhbWlseTogXCJzbWFsbD0wZW0mbWVkaXVtPTQwZW0mbGFyZ2U9NjRlbSZ4bGFyZ2U9NzVlbSZ4eGxhcmdlPTkwZW1cIjsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYm9keSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBSb2JvdG8sIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBjb2xvcjogIzBhMGEwYTtcbiAgYmFja2dyb3VuZDogI2ZlZmVmZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IH1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG50ZXh0YXJlYSB7XG4gIGhlaWdodDogYXV0bztcbiAgbWluLWhlaWdodDogNTBweDtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG5zZWxlY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG4jbWFwX2NhbnZhcyBpbWcsXG4jbWFwX2NhbnZhcyBlbWJlZCxcbiNtYXBfY2FudmFzIG9iamVjdCxcbi5tYXBfY2FudmFzIGltZyxcbi5tYXBfY2FudmFzIGVtYmVkLFxuLm1hcF9jYW52YXMgb2JqZWN0LFxuLm1xYS1kaXNwbGF5IGltZyxcbi5tcWEtZGlzcGxheSBlbWJlZCxcbi5tcWEtZGlzcGxheSBvYmplY3Qge1xuICBtYXgtd2lkdGg6IG5vbmUgIWltcG9ydGFudDsgfVxuXG5idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cbiAgW2RhdGEtd2hhdGlucHV0PSdtb3VzZSddIGJ1dHRvbiB7XG4gICAgb3V0bGluZTogMDsgfVxuXG4uaXMtdmlzaWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH1cblxuLmlzLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEFwcFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgXG4gIFVzZWZ1bCBNaXhpbnNcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiBcdFVzYWdlXG4gICBcdEBpbmNsdWRlIGZvbnQtZmFjZSgnVWJ1bnR1JywgJy4uL2ZvbnRzJyk7XG4gICBcdFxuIFx0T3V0cHV0IENTU1xuICAgXHRAZm9udC1mYWNlIHtcbiAgICBcdGZvbnQtZmFtaWx5OiAnVWJ1bnR1JztcbiAgICAgXHRzcmM6IHVybCgnLi4vZm9udHMuZW90Jyk7XG4gICAgIFx0c3JjOiB1cmwoJy4uL2ZvbnRzLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIFx0dXJsKCcuLi9mb250cy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgICBcdHVybCgnLi4vZm9udHMud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgIFx0dXJsKCcuLi9mb250cy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICAgXHR1cmwoJy4uL2ZvbnRzLnN2ZyNVYnVudHUpIGZvcm1hdCgnc3ZnJyk7XG4gICAgIFx0Zm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgXHRmb250LXN0eWxlOiBub3JtYWw7XG4gICBcdH1cblxuICAgXHRAbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAwKSB7XG4gICAgXHRAZm9udC1mYWNlIHtcbiAgICAgICBcdFx0Zm9udC1mYW1pbHk6ICdVYnVudHUnO1xuICAgICAgIFx0XHRzcmM6IHVybCgnLi4vZm9udHMuc3ZnI1VidW50dScpIGZvcm1hdCgnc3ZnJyk7XG4gICAgIFx0fVxuICAgXHR9XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRBbnRpYWxpYXNlZFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRGb250IFNpemUgd2l0aCByZW1cblx0XG5cdFVzYWdlXG5cdHAge1xuXHQgIEBpbmNsdWRlIGZvbnQtc2l6ZSgxNHB4KVxuXHR9XG5cblx0T3V0cHV0XG5cdHAge1xuXHQgIGZvbnQtc2l6ZTogMTRweDsgLy9XaWxsIGJlIG92ZXJyaWRkZW4gaWYgYnJvd3NlciBzdXBwb3J0cyByZW1cblx0ICBmb250LXNpemU6IDAuOHJlbTtcblx0fVxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRMaW5lLWhlaWdodCB2YWx1ZXMgaW4gYm90aCBwaXhlbHMgYW5kIHJlbXNcblxuXHRVc2FnZVxuICBcdC5mb28ge1xuICAgIFx0QGluY2x1ZGUgbGluZS1oZWlnaHQoMTYpO1xuICBcdH1cblxuXHRPdXRwdXRcbiAgXHQuZm9vIHtcblx0ICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuXHQgICAgbGluZS1oZWlnaHQ6IDFyZW07XG4gIFx0fVxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgSGVhZGluZ3NcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFRleHQgSW5kZW50XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdFVzYWdlXG4gICAuZm9vIHtcbiAgICBcdEBpbmNsdWRlIHdvcmQtd3JhcCgpO1xuICAgXHR9XG5cbiBcdE91dHB1dFxuICAgLmZvbyB7XG4gICAgXHRoeXBoZW5zOiBhdXRvO1xuICAgIFx0b3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgICBcdHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgIH1cbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdENsZWFyZml4XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRIaWRlIHRleHRcblx0ZXhhbXBsZTpcblx0LmVsZW1lbnQge1xuXHRcdEBpbmNsdWRlIGhpZGUtdGV4dDtcblx0fVxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0SGlkZSBmcm9tIGJvdGggc2NyZWVucmVhZGVycyBhbmQgYnJvd3NlcnNcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW5yZWFkZXJzXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRBbGxvdyB0aGUgZWxlbWVudCB0byBiZSBmb2N1c2FibGUgd2hlbiBuYXZpZ2F0ZWQgdG8gdmlhIHRoZSBrZXlib2FyZFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0SGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW5yZWFkZXJzLCBidXQgbWFpbnRhaW4gbGF5b3V0XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdEZvcm0gaW5wdXQgcGxhY2Vob2xkZXIgdGV4dFxuXHRleGFtcGxlOlxuXHRpbnB1dCxcblx0dGV4dGFyZWEge1xuXHRcdEBpbmNsdWRlIGlucHV0LXBsYWNlaG9sZGVyIHtcblx0XHRcdGNvbG9yOiAkZ3JleTtcblx0XHR9XG5cdH1cblxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Rmx1aWQgUHJvcGVydHlcblx0aHR0cDovL3d3dy5hZHJlbmFsaW5tZWRpYS5jb20uYXUvdGhlLWFnZW5jeS9pbnNpZ2h0cy90aGlzLWNoYW5nZXMtZXZlcnl0aGluZy1jc3MtZmx1aWQtcHJvcGVydGllcy5hc3B4XG5cdEhUTUw6XG5cdDxoMSBjbGFzcz1cImVsZW1lbnRcIj5cblx0XHQ8c3Bhbj5UZXh0IHRvIHJlcGxhY2U8L3NwYW4+XG5cdDwvaDE+XG5cdGV4YW1wbGU6XG5cdGgxIHtcblx0XHRAaW5jbHVkZSBmcChmb250LXNpemUsIDUwLCAxMDApOyAvLyA1MHB4IGF0IDMyMCwgMTAwcHggYXQgMTkyMDtcblx0fVxuXHRvdXRwdXQ6XG5cdGgxIHtcblx0XHRmb250LXNpemU6IGNhbGMoMy4xMjV2dyArIDQwcHgpOyAvL1RoaXMgaXMgdGhlIG1hZ2ljIVxuXHR9XG5cdEBtZWRpYSAobWF4LXdpZHRoOjMyMHB4KXsgLy9DbGlwcyB0aGUgc3RhcnQgdG8gdGhlIG1pbiB2YWx1ZVxuXHRcdGZvbnQtc2l6ZTo1MHB4O1xuXHR9XG5cdEBtZWRpYSAobWluLXdpZHRoOjE5MjBweCl7IC8vQ2xpcHMgdGhlIGVuZCB0byB0aGUgbWF4IHZhbHVlXG5cdFx0Zm9udC1zaXplOjEwMHB4O1xuXHR9XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBCcmVha3BvaW50c1xuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBaZXJvIG91dFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XG5cdFBzZXVkb1xuXG5cdFVzYWdlXG5cdGRpdjo6YWZ0ZXIge1xuXHQgICAgQGluY2x1ZGUgcHNldWRvO1xuXHQgICAgdG9wOiAtMXJlbTsgbGVmdDogLTFyZW07XG5cdCAgICB3aWR0aDogMXJlbTsgaGVpZ2h0OiAxcmVtO1xuXHR9XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgVXNhZ2VcbiAgIC5mb28ge1xuICAgICAgICBAaW5jbHVkZSB3aWR0aCgxNTAwcHgsIDMwMHB4KTtcbiAgICB9XG5cbiAgICBPdXRwdXRcbiAgIC5mb28ge1xuICAgICAgICBtYXgtd2lkdGg6IDE1MDBweDtcbiAgICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICB9XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRWZXJ0aWNhbCBBbGlnblxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Q2VudGVyIEJsb2NrXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRBYnNvbHV0ZSBQb3NpdGlvbmluZ1xuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgQ2VudGVyIEFsaWduXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIE1lbnUgbGlzdFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBDZW50ZXIgbGlzdFxuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Qi9XIE9wYWNpdHlcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFByZWZpeGVycyAodG8gYmUgdXNlZCB3aXRoIEJvdXJib24pXG4qL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdENpcmNsZVxuXG5fLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdEFuaW1hdGlvbnNcblxuXHRVc2FnZTpcblx0QGluY2x1ZGUga2V5ZnJhbWVzKG1vdmUtdGhlLW9iamVjdCkge1xuXHQgIDAlICAgeyBsZWZ0OiAxMDBweDsgfVxuXHQgIDEwMCUgeyBsZWZ0OiAyMDBweDsgfVxuXHR9XG5cblx0Lm9iamVjdC10by1hbmltYXRlIHtcblx0ICBAaW5jbHVkZSBhbmltYXRpb24oJ21vdmUtdGhlLW9iamVjdCAuNXMgMScsICdtb3ZlLXRoZS1vYmplY3QtYWdhaW4gLjVzIDEgLjVzJyk7XG5cdH0gXG5cdFxuXy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0VmFyaWFibGVzXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIFNpdGVcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEJyZWFrcG9pbnRzXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRQYXRoc1xuKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0R29vZ2xlIEZvbnRzXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHotaW5kZXggXG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGhlYWRlciBoZWlnaHRcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgaW50cm8gaGVpZ2h0XG4qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHNlY29uZGFyeSBiYXJcbiovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgQnV0dG9uc1xuKi9cbmJvZHkge1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjsgfVxuICBib2R5ICoge1xuICAgIGNvbG9yOiAjZmVmZWZlOyB9XG5cbmgxIHtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG4gIGgxIHN1cCB7XG4gICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gICAgdG9wOiAtMjBweDsgfVxuXG5oMiB7XG4gIGNvbG9yOiAjZmVmZWZlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTsgfVxuICBoMiBzdXAge1xuICAgIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICAgIHRvcDogLTIwcHg7IH1cblxuaDMge1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cbiAgaDMgc3VwIHtcbiAgICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgICB0b3A6IC0yMHB4OyB9XG5cbmg0IHtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG4gIGg0IHN1cCB7XG4gICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gICAgdG9wOiAtMjBweDsgfVxuXG5oNSB7XG4gIGNvbG9yOiAjZmVmZWZlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTsgfVxuICBoNSBzdXAge1xuICAgIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICAgIHRvcDogLTIwcHg7IH1cblxuaDYge1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cbiAgaDYgc3VwIHtcbiAgICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgICB0b3A6IC0yMHB4OyB9XG5cbmgxIHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmgyIHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmgzIHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmg0IHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmg1IHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmg2IHtcbiAgbWFyZ2luOiAwIDAgMi41cmVtOyB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMi4zNzVyZW07IH0gfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDIuNTU1NTZyZW07IH0gfVxuICBoMi5zdWItdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgbWFyZ2luOiAwIDAgLjNyZW07IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDIuMzc1cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDMge1xuICAgICAgZm9udC1zaXplOiAyLjU1NTU2cmVtOyB9IH1cbiAgaDMuc3ViLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cblxuaDQge1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIG1hcmdpbjogMCAwIC4zcmVtOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgaDQge1xuICAgICAgZm9udC1zaXplOiAyLjM3NXJlbTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIGg0IHtcbiAgICAgIGZvbnQtc2l6ZTogMi41NTU1NnJlbTsgfSB9XG4gIGg0LnN1Yi10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG5cbmg1IHtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGg1IHtcbiAgICAgIGZvbnQtc2l6ZTogMi4zNzVyZW07IH0gfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICBoNSB7XG4gICAgICBmb250LXNpemU6IDIuNTU1NTZyZW07IH0gfVxuICBoNS5zdWItdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgbWFyZ2luOiAwIDAgLjNyZW07IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICBoNiB7XG4gICAgICBmb250LXNpemU6IDIuMzc1cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDYge1xuICAgICAgZm9udC1zaXplOiAyLjU1NTU2cmVtOyB9IH1cbiAgaDYuc3ViLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cblxuaDMge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDMge1xuICAgICAgZm9udC1zaXplOiAxLjU1NTU2cmVtOyB9IH1cblxuaDQge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGg0IHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDQge1xuICAgICAgZm9udC1zaXplOiAxLjU1NTU2cmVtOyB9IH1cblxuaDUge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGg1IHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDUge1xuICAgICAgZm9udC1zaXplOiAxLjU1NTU2cmVtOyB9IH1cblxuaDYge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBtYXJnaW46IDAgMCAuM3JlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGg2IHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgaDYge1xuICAgICAgZm9udC1zaXplOiAxLjU1NTU2cmVtOyB9IH1cblxuc3VwIHtcbiAgZm9udC1zaXplOiAwLjYyNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0xMHB4OyB9XG5cbmEge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5wIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBjb2xvcjogI2NiY2JjYjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgbWFyZ2luLXRvcDogMDsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NjdweCkge1xuICAgIHAge1xuICAgICAgZm9udC1zaXplOiAxMTIuNSU7IH0gfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTEyLjUlOyB9IH1cblxuaHIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHRyYW5zcGFyZW50LCByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuMzUpLCB0cmFuc3BhcmVudCk7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAyLjVlbSAwO1xuICBoZWlnaHQ6IDFweDsgfVxuXG4uY2QtbWFpbi1uYXYgYSB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLmN0YSwgLmN0YS1hbHQge1xuICB3aWR0aDogMjAwcHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cblxuLmN0YSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NCwgMjU0LCAyNTQsIDAuMyk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU0LCAyNTQsIDI1NCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwYWRkaW5nOiAxcmVtIDIuMnJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuY3RhOmJlZm9yZSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9pY29uLWxheWVycy5zdmcpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAtMTAwJTtcbiAgICBzcGVhazogbm9uZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuICAuY3RhOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogLTE7IH1cbiAgLmN0YTphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICM5OTAwMDA7XG4gICAgdG9wOiAycHg7IH1cbiAgICAuY3RhOmFjdGl2ZTpiZWZvcmUge1xuICAgICAgY29sb3I6ICM3MDNiODc7IH1cbiAgLmN0YTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0MwMDsgfVxuICAgIC5jdGE6aG92ZXI6YmVmb3JlIHtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgbGVmdDogMDsgfVxuICAgIC5jdGE6aG92ZXIgc3BhbiB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMCUpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTsgfVxuICAuY3RhIHNwYW4ge1xuICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5jdGEtYWx0IHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGNvbG9yOiAjZmVmZWZlO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICM3REM4NTU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU0LCAyNTQsIDI1NCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwYWRkaW5nOiAxcmVtIDIuMnJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICNmZWZlZmUgIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jdGEtYWx0OmJlZm9yZSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9pY29uLW1haWwuc3ZnKTtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIC1vLWJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAtMTAwJTtcbiAgICBzcGVhazogbm9uZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuICAuY3RhLWFsdDphZnRlciB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IC0xOyB9XG4gIC5jdGEtYWx0OmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogIzAwNDQxNTtcbiAgICB0b3A6IDJweDsgfVxuICAgIC5jdGEtYWx0OmFjdGl2ZTpiZWZvcmUge1xuICAgICAgY29sb3I6ICM3MDNiODc7IH1cbiAgLmN0YS1hbHQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc3MjU7IH1cbiAgICAuY3RhLWFsdDpob3ZlcjpiZWZvcmUge1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gICAgLmN0YS1hbHQ6aG92ZXIgc3BhbiB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMCUpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTsgfVxuICAuY3RhLWFsdCBzcGFuIHtcbiAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgfVxuXG4uc2l0ZS1uYXYgbGkgYSwgLnNpdGUtbmF2IGxpIGIsIC5jZC1zbGlkZS1uYXYgbGkgYSwgLmNkLXNsaWRlLW5hdiBsaSBiLCAucGFnZS1uYXYgbGkgYSwgLnBhZ2UtbmF2IGxpIGIge1xuICBjb2xvcjogcmdiYSgyNTQsIDI1NCwgMjU0LCAwLjQ1KTtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAuc2l0ZS1uYXYgbGkgYTpob3ZlciwgLnNpdGUtbmF2IGxpIGI6aG92ZXIsIC5jZC1zbGlkZS1uYXYgbGkgYTpob3ZlciwgLmNkLXNsaWRlLW5hdiBsaSBiOmhvdmVyLCAucGFnZS1uYXYgbGkgYTpob3ZlciwgLnBhZ2UtbmF2IGxpIGI6aG92ZXIge1xuICAgIGNvbG9yOiAjZmVmZWZlOyB9XG4gIC5zaXRlLW5hdiBsaSBhOmhvdmVyIGIsIC5zaXRlLW5hdiBsaSBhLmFjdGl2ZSBiLCAuc2l0ZS1uYXYgbGkgYjpob3ZlciBiLCAuc2l0ZS1uYXYgbGkgYi5hY3RpdmUgYiwgLmNkLXNsaWRlLW5hdiBsaSBhOmhvdmVyIGIsIC5jZC1zbGlkZS1uYXYgbGkgYS5hY3RpdmUgYiwgLmNkLXNsaWRlLW5hdiBsaSBiOmhvdmVyIGIsIC5jZC1zbGlkZS1uYXYgbGkgYi5hY3RpdmUgYiwgLnBhZ2UtbmF2IGxpIGE6aG92ZXIgYiwgLnBhZ2UtbmF2IGxpIGEuYWN0aXZlIGIsIC5wYWdlLW5hdiBsaSBiOmhvdmVyIGIsIC5wYWdlLW5hdiBsaSBiLmFjdGl2ZSBiIHtcbiAgICBjb2xvcjogI2ZlZmVmZTsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblx0SGVybyBhbmQgU2VjdGlvbnNcbiAgICBcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbiNjZC1pbnRybyAudGl0bGUgaDEge1xuICBmb250LXNpemU6IDNyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHBhZGRpbmc6IDAgMWVtOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgI2NkLWludHJvIC50aXRsZSBoMSB7XG4gICAgICBmb250LXNpemU6IDMuMjVyZW07XG4gICAgICBsaW5lLWhlaWdodDogMjsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICNjZC1pbnRybyAudGl0bGUgaDEge1xuICAgICAgZm9udC1zaXplOiA0LjMzMzMzcmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNTsgfSB9XG4gICNjZC1pbnRybyAudGl0bGUgaDEgc3BhbiB7XG4gICAgcGFkZGluZzogMCAwIC4zZW07IH1cbiAgI2NkLWludHJvIC50aXRsZSBoMSAudGFnIHtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9ybWFsO1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICNjZC1pbnRybyAudGl0bGUgaDEgLnRhZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfSB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAjY2QtaW50cm8gLnRpdGxlIGgxIC50YWcge1xuICAgICAgICBmb250LXNpemU6IDEuNzc3NzhyZW07IH0gfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAjY2QtaW50cm8gLnRpdGxlIGgxIC50YWcge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiA4MCU7IH0gfVxuICAjY2QtaW50cm8gLnRpdGxlIGgxIC5lbmQtdGFnIGkge1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4jY2QtaW50cm8uaXMtbG9hZGVkIC50YWc6bnRoLWNoaWxkKDEpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bjtcbiAgLW1vei1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bjtcbiAgLW1zLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duO1xuICAtby1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bjtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG4gIC13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtbXMtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW8tYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gIC1tb3otYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAtby1hbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDAuNXM7XG4gIC1tb3otYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xuICAtby1hbmltYXRpb24tZGVsYXk6IDAuNXM7XG4gIGFuaW1hdGlvbi1kZWxheTogMC41cztcbiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuI2NkLWludHJvLmlzLWxvYWRlZCAudGFnOm50aC1jaGlsZCgyKSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG4gIC1tb3otYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG4gIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bjtcbiAgLW8tYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duO1xuICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgLW8tYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgLW1vei1hbmltYXRpb24tZGVsYXk6IDFzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuI2NkLWludHJvLmlzLWxvYWRlZCAuZW5kLXRhZyB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgLW1vei1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAtbXMtYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgLW8tYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tcy1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gIC1tcy1hbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMS41cztcbiAgLW1vei1hbmltYXRpb24tZGVsYXk6IDEuNXM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDEuNXM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogMS41cztcbiAgYW5pbWF0aW9uLWRlbGF5OiAxLjVzO1xuICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtbXMtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtby1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAjY2QtaW50cm8uaXMtbG9hZGVkIC5lbmQtdGFnIGkge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgICAtbW96LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG4gICAgLW1zLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG4gICAgLW8tYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAtbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgLW8tYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAgIC1tb3otYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAgIC1tcy1hbmltYXRpb24tZHVyYXRpb246IDAuOHM7XG4gICAgLW8tYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC44cztcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMnM7XG4gICAgLW1vei1hbmltYXRpb24tZGVsYXk6IDJzO1xuICAgIC1tcy1hbmltYXRpb24tZGVsYXk6IDJzO1xuICAgIC1vLWFuaW1hdGlvbi1kZWxheTogMnM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAycztcbiAgICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgIC1tcy1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC1vLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLmNkLXNlY3Rpb246bm90KC5oZXJvKSAudGl0bGUge1xuICBmb250LXNpemU6IDEuNzVyZW07IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC50aXRsZSB7XG4gICAgICBmb250LXNpemU6IDIuMzc1cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAudGl0bGUge1xuICAgICAgZm9udC1zaXplOiAyLjU1NTU2cmVtOyB9IH1cblxuLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuc21hbGwtdGl0bGUge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi1ib3R0b206IDIuNXJlbTtcbiAgcGFkZGluZzogLjVlbSAwO1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4uY2Qtc2VjdGlvbjpub3QoLmhlcm8pIHAge1xuICBmb250LXNpemU6IDEuMjVyZW07IH1cblxuLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IC50aXRsZSB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSAudGl0bGUge1xuICAgICAgZm9udC1zaXplOiAzLjI1cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDI7IH0gfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgLnRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogNC4zMzMzM3JlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH0gfVxuXG4uY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgcCB7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43Nzc3OHJlbTsgfSB9XG5cbi5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSBmb290ZXIgYSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjN0RDODU1O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NCwgMjU0LCAyNTQsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcGFkZGluZzogMXJlbSAyLjJyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IGZvb3RlciBhOmJlZm9yZSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9pY29uLW1haWwuc3ZnKTtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIC1vLWJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAtMTAwJTtcbiAgICBzcGVhazogbm9uZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgZm9vdGVyIGE6YWZ0ZXIge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTsgfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgZm9vdGVyIGE6YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDA0NDE1O1xuICAgIHRvcDogMnB4OyB9XG4gICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IGZvb3RlciBhOmFjdGl2ZTpiZWZvcmUge1xuICAgICAgY29sb3I6ICM3MDNiODc7IH1cbiAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IGZvb3RlciBhOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NzI1OyB9XG4gICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IGZvb3RlciBhOmhvdmVyOmJlZm9yZSB7XG4gICAgICByaWdodDogMDtcbiAgICAgIGxlZnQ6IDA7IH1cbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgZm9vdGVyIGE6aG92ZXIgc3BhbiB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMCUpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTsgfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgZm9vdGVyIGEgc3BhbiB7XG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cbiAgICBEZWZhdWx0IFBhZ2VzIFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLnBhZ2UtY29udGVudCAqOm5vdChzcGFuKSB7XG4gIGNvbG9yOiAjNGE0YTRhO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuICAgIENhc2UgU3R1ZGllcyBcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5zaW5nbGUtY2FzZSAudGl0bGUsIC5zaW5nbGUtY2FzZSAuZXZlbnQge1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG5cbi5zaW5nbGUtY2FzZSAudGl0bGUge1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuXG4uc2luZ2xlLWNhc2UgLmV2ZW50IHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NjhweCkge1xuICAgIC5zaW5nbGUtY2FzZSAuZXZlbnQge1xuICAgICAgZm9udC1zaXplOiAycmVtOyB9IH1cblxuLnNpbmdsZS1jYXNlIC5jb250ZW50LWVudHJ5IGg0IHtcbiAgY29sb3I6ICM5OTk4OTg7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLnNpbmdsZS1jYXNlIC5jb250ZW50LWVudHJ5IHVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuICBwYWRkaW5nLWxlZnQ6IDEuMjVyZW07IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIHtcbiAgICAuc2luZ2xlLWNhc2UgLmNvbnRlbnQtZW50cnkgdWwge1xuICAgICAgcGFkZGluZy1sZWZ0OiAyLjVyZW07IH0gfVxuICAuc2luZ2xlLWNhc2UgLmNvbnRlbnQtZW50cnkgdWwgbGkge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjFlbTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2N3B4KSB7XG4gICAgICAuc2luZ2xlLWNhc2UgLmNvbnRlbnQtZW50cnkgdWwgbGkge1xuICAgICAgICBmb250LXNpemU6IDExMi41JTsgfSB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuc2luZ2xlLWNhc2UgLmNvbnRlbnQtZW50cnkgdWwgbGkge1xuICAgICAgICBmb250LXNpemU6IDExMi41JTsgfSB9XG5cbmh0bWwsIGJvZHkge1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7IH1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi5vdiB7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7IH1cblxuLm1haW4tc2NlbmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMS4ycztcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDsgfVxuXG4uYmNnIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IGF1dG87XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogMDtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDc1JSA1MCU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IGF1dG87IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmJjZyB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTIwJTsgfSB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG5IZXJvIGNvbXBvbmVudHMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uaGVhZGVyLWNvbnRhaW5lciAuYmNnIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9pbWctYmNrLWhlcm8uanBnKTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAuaGVhZGVyLWNvbnRhaW5lciAuYmNnIHtcbiAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiAxMjAlO1xuICAgICAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IDEyMCU7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEyMCU7IH0gfVxuXG4uaGVhZGVyLWNvbnRhaW5lciAub3Yge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoYm90dG9tLCBibGFjaywgdHJhbnNwYXJlbnQsIGJsYWNrKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCxibGFjaywgdHJhbnNwYXJlbnQsIGJsYWNrKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IC44NTsgfVxuXG4jY2QtY29tbXVuaXR5IC5iY2cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ltZy1iY2stY29tbXVuaXR5LmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDQ4JSAtMTAlOyB9XG5cbiNjZC1jb25uZWN0aW9uIC5iY2cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ltZy1iY2stY29ubmVjdGlvbi5qcGcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7IH1cblxuI2NkLWV4cGVyaWVuY2UgLmJjZyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaW1nLWJjay1leHBlcmllbmNlLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfVxuXG4jY2QtZW5nYWdlIC5iY2cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ltZy1iY2stZW5nYWdlLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDQ4JSAwOyB9XG5cbiNjZC1zdW1tYXJ5IC5iY2cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ltZy1iY2stc3VtbWFyeS5qcGcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgMDsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuICAgIE1haW4gY29tcG9uZW50cyBcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5jZC1zZWN0aW9uIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAtbW96LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG4gIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAtby1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IDFzO1xuICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgLW8tYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtbW96LWFuaW1hdGlvbi1kZWxheTogMHM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtby1hbmltYXRpb24tZGVsYXk6IDBzO1xuICBhbmltYXRpb24tZGVsYXk6IDBzO1xuICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtbXMtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtby1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxOyB9XG5cbi5jZC1zZWN0aW9uOm5vdCguaGVybykge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICBwYWRkaW5nLXRvcDogMzAlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4MDBweDsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NjhweCkge1xuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykge1xuICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgIG1pbi1oZWlnaHQ6IDgwMHB4OyB9IH1cbiAgLmNkLXNlY3Rpb246bm90KC5oZXJvKTpiZWZvcmUsIC5jZC1zZWN0aW9uOm5vdCguaGVybyk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLmNkLXNlY3Rpb246bm90KC5oZXJvKTphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIHtcbiAgICAgIHBhZGRpbmctdG9wOiAxMi41cmVtOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSB7XG4gICAgICBwYWRkaW5nLXRvcDogMTIlOyB9IH1cbiAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAub3Yge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAub3Yge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7IH0gfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5iY2cge1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMS4xcyBsaW5lYXI7XG4gICAgb3BhY2l0eTogLjI7IH1cbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5iY2cuYmNnLXZpc2libGUge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSB7XG4gICAgbWF4LXdpZHRoOiA3NXJlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgcGFkZGluZzogMCAxZW0gMWVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5OmJlZm9yZSwgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnk6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnk6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSAuaWNvbiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIHtcbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmljb24ge1xuICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICBsZWZ0OiAwLjkzNzVyZW07IH0gfVxuICAgICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIHtcbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmljb24ge1xuICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICBsZWZ0OiAyLjdyZW07IH0gfVxuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5IC5jb250ZW50IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBvcGFjaXR5OiAwOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MS42ODc1ZW0pIHtcbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmNvbnRlbnQge1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMC42MjVyZW07XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMC42MjVyZW07IH0gfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgICAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSAuY29udGVudCB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjkzNzVyZW07XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMC45Mzc1cmVtOyB9IH1cbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5IC5jb250ZW50Omxhc3QtY2hpbGQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH1cbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5IC5jb250ZW50Omxhc3QtY2hpbGQ6bGFzdC1jaGlsZCB7XG4gICAgICAgIGZsb2F0OiBsZWZ0OyB9XG4gICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NjhweCkge1xuICAgICAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSAuY29udGVudCB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVlbTsgfSB9XG4gICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmNvbnRlbnQge1xuICAgICAgICAgIHdpZHRoOiA1OC4zMzMzMyU7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiA1ZW07IH0gfVxuICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmNvbnRlbnQgLnNlY3Rpb24tdGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5IC5jb250ZW50LmNvbnRlbnQtdmlzaWJsZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmNvbnRlbnQuY29udGVudC12aXNpYmxlIC5pY29uIHtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZUluO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG4gICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDFzO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgICAgICAgICAtby1hbmltYXRpb24tZGVsYXk6IDFzO1xuICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMXM7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtby1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICAtby1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4gICAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykgLmVudHJ5IC5jb250ZW50LmNvbnRlbnQtdmlzaWJsZSAuc21hbGwtdGl0bGUge1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZUluVXA7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDAuM3M7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tZGVsYXk6IDAuM3M7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1kZWxheTogMC4zcztcbiAgICAgICAgICAtby1hbmltYXRpb24tZGVsYXk6IDAuM3M7XG4gICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAwLjNzO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAgICAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSAuY29udGVudC5jb250ZW50LXZpc2libGUgLnRpdGxlIHtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICBhbmltYXRpb24tbmFtZTogZmFkZUluVXA7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtby1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tZGVsYXk6IDAuNXM7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xuICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMC41cztcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1vLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKSAuZW50cnkgLmNvbnRlbnQuY29udGVudC12aXNpYmxlIHAge1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZUluVXA7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1tcy1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDAuOHM7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tZGVsYXk6IDAuOHM7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1kZWxheTogMC44cztcbiAgICAgICAgICAtby1hbmltYXRpb24tZGVsYXk6IDAuOHM7XG4gICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAwLjhzO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAgICAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pIC5lbnRyeSAuY29udGVudC5jb250ZW50LXZpc2libGUgLnNlY3Rpb24tZm9vdGVyIHtcbiAgICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xuICAgICAgICAgIC1vLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbiAgICAgICAgICBhbmltYXRpb24tbmFtZTogZmFkZUluVXA7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtbXMtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgICAgICAgICAtby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gICAgICAgICAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICAgICAgICAtby1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1kZWxheTogMXM7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1kZWxheTogMXM7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IDFzO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAtbW96LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgLmVudHJ5IHtcbiAgICAgIG1heC13aWR0aDogNjByZW07IH0gfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLnN1bW1hcnkgLmVudHJ5IC5jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MS42ODc1ZW0pIHtcbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSAuZW50cnkgLmNvbnRlbnQge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDAuNjI1cmVtO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjYyNXJlbTsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5zdW1tYXJ5IC5lbnRyeSAuY29udGVudCB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMC45Mzc1cmVtO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjkzNzVyZW07IH0gfVxuICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuc3VtbWFyeSAuZW50cnkgLmNvbnRlbnQ6bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICBmbG9hdDogcmlnaHQ7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLmluZm8tZ3JhcGhpYyAuZW50cnkge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBib3R0b206IGF1dG87IH0gfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLmluZm8tZ3JhcGhpYyAuZW50cnkgLmNvbnRlbnQge1xuICAgIG1hcmdpbi1ib3R0b206IDVlbTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAgICAgLmNkLXNlY3Rpb246bm90KC5oZXJvKS5pbmZvLWdyYXBoaWMgLmVudHJ5IC5jb250ZW50IHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7IH0gfVxuICAuY2Qtc2VjdGlvbjpub3QoLmhlcm8pLmluZm8tZ3JhcGhpYyAuZW50cnkgLmZlYXR1cmVkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuaW5mby1ncmFwaGljIC5lbnRyeSAuZmVhdHVyZWQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAgIC5jZC1zZWN0aW9uOm5vdCguaGVybykuaW5mby1ncmFwaGljIC5lbnRyeSAuZmVhdHVyZWQge1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMTIlO1xuICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgIHdpZHRoOiAyMy43NXJlbTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuIERlZmF1bHQgUGFnZXMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ucGFnZS1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgcGFkZGluZy1ib3R0b206IDYuMjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAucGFnZS1jb250ZW50IC5jb250ZW50IC50aXRsZS1jb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybCguLi9pbWcvaW1nLXBhZ2UtaGVhZGVyLmpwZykgbm8tcmVwZWF0IDUwJSA1MCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIHBhZGRpbmc6IDkuMzc1cmVtIDJyZW0gMS44NzVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnBhZ2UtY29udGVudCAuY29udGVudCAudGl0bGUtY29udGFpbmVyIC5vdiB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7IH1cbiAgICAucGFnZS1jb250ZW50IC5jb250ZW50IC50aXRsZS1jb250YWluZXIgLnRpdGxlIHtcbiAgICAgIGNvbG9yOiAjZmVmZWZlO1xuICAgICAgZm9udC1zaXplOiAyLjNyZW07XG4gICAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5wYWdlLWNvbnRlbnQgLmNvbnRlbnQtZW50cnkge1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDcwJTsgfVxuICAucGFnZS1jb250ZW50IC5wYWdlLWZlYXR1cmUge1xuICAgIG1hcmdpbi1ib3R0b206IDIuNWVtOyB9XG5cbi5lbmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cblx0Q2FzZXNcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5tYWluLXNjZW5lLnByb2plY3Qtb3BlbiAjY2Qtc3VtbWFyeSwgLm1haW4tc2NlbmUucHJvamVjdC1vcGVuIC5mb290ZXItY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4jY2FzZS1zdHVkeS1wYWdlIC5wYWdlLWNvbnRlbnQge1xuICBwYWRkaW5nOiA0LjM3NXJlbSAwIDA7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycztcbiAgLW1vei10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnM7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycztcbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LWluZGVudDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjYpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogNDRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDcuNXJlbTtcbiAgcmlnaHQ6IDMuNSU7XG4gIHotaW5kZXg6IDU7XG4gIG9wYWNpdHk6IDA7IH1cbiAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIucHJvamVjdC1vcGVuIHtcbiAgICBvcGFjaXR5OiAxOyB9XG4gICNjYXNlLXN0dWR5LXBhZ2UgLmNkLW5hdi10cmlnZ2VyIC5jZC1pY29uLCAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlciAuY2QtaWNvbjo6YmVmb3JlLCAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlciAuY2QtaWNvbjo6YWZ0ZXIge1xuICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuICAubm8tdG91Y2ggI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXI6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNDMDA7IH1cbiAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIgLmNkLWljb24ge1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0b3A6IDUwJTtcbiAgICBib3R0b206IGF1dG87XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MsIGJhY2tncm91bmQtY29sb3IgMC4zcztcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDAuM3MsIGJhY2tncm91bmQtY29sb3IgMC4zcztcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcywgYmFja2dyb3VuZC1jb2xvciAwLjNzO1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIC8qIG1pZGRsZSBsaW5lIG9mIHRoZSBtZW51IGljb24gKi9cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlciAuY2QtaWNvbjo6YmVmb3JlLCAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlciAuY2QtaWNvbjo6YWZ0ZXIge1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjNzO1xuICAgICAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAwLjNzO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG4gICAgICAvKiB1cHBlciBhbmQgbG93ZXIgbGluZXMgb2YgdGhlIG1lbnUgaWNvbiAqL1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7IH1cbiAgICAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlciAuY2QtaWNvbjo6YmVmb3JlIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02cHgpO1xuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02cHgpO1xuICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02cHgpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02cHgpOyB9XG4gICAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIgLmNkLWljb246OmFmdGVyIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDZweCk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg2cHgpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg2cHgpO1xuICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDZweCk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNnB4KTsgfVxuICAjY2FzZS1zdHVkeS1wYWdlIC5jZC1uYXYtdHJpZ2dlci5wcm9qZWN0LW9wZW4gLmNkLWljb24ge1xuICAgIC8qIHVzZXIgc2VsZWN0cyBhIHByb2plY3RzIC0gdHJhbnNmb3JtIHRoZSBpY29uIGludG8gYSAnWCcgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NCwgMjU0LCAyNTQsIDApOyB9XG4gICAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIucHJvamVjdC1vcGVuIC5jZC1pY29uOjpiZWZvcmUsICNjYXNlLXN0dWR5LXBhZ2UgLmNkLW5hdi10cmlnZ2VyLnByb2plY3Qtb3BlbiAuY2QtaWNvbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTsgfVxuICAgICNjYXNlLXN0dWR5LXBhZ2UgLmNkLW5hdi10cmlnZ2VyLnByb2plY3Qtb3BlbiAuY2QtaWNvbjo6YmVmb3JlIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoNDVkZWcpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoNDVkZWcpO1xuICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSg0NWRlZyk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKDQ1ZGVnKTsgfVxuICAgICNjYXNlLXN0dWR5LXBhZ2UgLmNkLW5hdi10cmlnZ2VyLnByb2plY3Qtb3BlbiAuY2QtaWNvbjo6YWZ0ZXIge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZyk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZyk7XG4gICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZyk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZyk7IH1cbiAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIubmF2LW9wZW4gLmNkLWljb24ge1xuICAgIC8qIHVzZXIgb3BlbnMgdGhlIG5hdmlnYXRpb24gLSB0cmFuc2Zvcm0gdGhlIGljb24gaW50byBhbiBhcnJvdyAqL1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDkwZGVnKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSg5MGRlZyk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSg5MGRlZyk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDkwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoOTBkZWcpOyB9XG4gICAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIubmF2LW9wZW4gLmNkLWljb246OmFmdGVyIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoM3B4KSByb3RhdGUoNDVkZWcpIHNjYWxlWCgwLjUpO1xuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCkgdHJhbnNsYXRlWSgzcHgpIHJvdGF0ZSg0NWRlZykgc2NhbGVYKDAuNSk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoM3B4KSByb3RhdGUoNDVkZWcpIHNjYWxlWCgwLjUpO1xuICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoM3B4KSByb3RhdGUoNDVkZWcpIHNjYWxlWCgwLjUpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoM3B4KSByb3RhdGUoNDVkZWcpIHNjYWxlWCgwLjUpOyB9XG4gICAgI2Nhc2Utc3R1ZHktcGFnZSAuY2QtbmF2LXRyaWdnZXIubmF2LW9wZW4gLmNkLWljb246OmJlZm9yZSB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNXB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSgtNDVkZWcpIHNjYWxlWCgwLjUpO1xuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoLTQ1ZGVnKSBzY2FsZVgoMC41KTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoLTQ1ZGVnKSBzY2FsZVgoMC41KTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNXB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSgtNDVkZWcpIHNjYWxlWCgwLjUpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoLTNweCkgcm90YXRlKC00NWRlZykgc2NhbGVYKDAuNSk7IH1cblxuLmNkLWNhc2UtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmNkLWNhc2UtY29udGFpbmVyID4gdWwge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5jZC1jYXNlLWNvbnRhaW5lciA+IHVsIGxpIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jZC1jYXNlLWNvbnRhaW5lciAuc2luZ2xlLWNhc2Uge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC40cztcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDAuNHM7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHM7XG4gICAgLyogRm9yY2UgaGFyZHdhcmUgYWNjZWxlcmF0aW9uICovXG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogYXV0bztcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgei1pbmRleDogMjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAuY2QtY2FzZS1jb250YWluZXIgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDIpIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMzLjMzMzMzJSk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMy4zMzMzMyUpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMy4zMzMzMyUpO1xuICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMzLjMzMzMzJSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzMuMzMzMzMlKTsgfVxuICAgIC5jZC1jYXNlLWNvbnRhaW5lciAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMykge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDY2LjY2NjY3JSk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDY2LjY2NjY3JSk7XG4gICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg2Ni42NjY2NyUpOyB9XG4gICAgLmNkLWNhc2UtY29udGFpbmVyIC5zaW5nbGUtY2FzZS5zZWxlY3RlZCB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gICAgICBjdXJzb3I6IGF1dG87IH1cbiAgICAgIC5jZC1jYXNlLWNvbnRhaW5lciAuc2luZ2xlLWNhc2Uuc2VsZWN0ZWQgLmNkLXRpdGxlIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuICAgICAgICAuY2QtY2FzZS1jb250YWluZXIgLnNpbmdsZS1jYXNlLnNlbGVjdGVkIC5jZC10aXRsZTpiZWZvcmUge1xuICAgICAgICAgIGhlaWdodDogMzAwJTtcbiAgICAgICAgICBvcGFjaXR5OiAuMzsgfVxuICAgICAgLmNkLWNhc2UtY29udGFpbmVyIC5zaW5nbGUtY2FzZS5zZWxlY3RlZCAuZXZlbnQge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5jZC1jYXNlLWNvbnRhaW5lciAuc2luZ2xlLWNhc2Uuc2VsZWN0ZWQgfiBsaSB7XG4gICAgICAvKiBoaWRlIHNpYmxpbmdzIHByb2plY3RzICovXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTsgfVxuICAuY2QtY2FzZS1jb250YWluZXIubmF2LW9wZW4gLnNpbmdsZS1jYXNlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5MSUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDkxJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5MSUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5MSUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg5MSUpO1xuICAgIGJveC1zaGFkb3c6IDAgMCAzMHB4IHJnYmEoMTAsIDEwLCAxMCwgMC41KTsgfVxuICAgIC5jZC1jYXNlLWNvbnRhaW5lci5uYXYtb3BlbiAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMikge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTQlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDk0JSk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDk0JSk7XG4gICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTQlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg5NCUpOyB9XG4gICAgLmNkLWNhc2UtY29udGFpbmVyLm5hdi1vcGVuIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgzKSB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5NyUpO1xuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTclKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTclKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5NyUpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDk3JSk7IH1cbiAgLmNkLWNhc2UtY29udGFpbmVyLm5hdi1vcGVuOmhvdmVyIC5zaW5nbGUtY2FzZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODglKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg4OCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODglKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODglKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODglKTsgfVxuICAgIC5jZC1jYXNlLWNvbnRhaW5lci5uYXYtb3Blbjpob3ZlciAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMikge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTIlKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDkyJSk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDkyJSk7XG4gICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTIlKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg5MiUpOyB9XG4gICAgLmNkLWNhc2UtY29udGFpbmVyLm5hdi1vcGVuOmhvdmVyIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgzKSB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5NiUpO1xuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTYlKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOTYlKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg5NiUpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDk2JSk7IH1cblxuLmNkLXRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMzMuMzMzMzMlO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAzOyB9XG4gIC5jZC10aXRsZTo6YmVmb3JlIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogYXV0bztcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCAwLjJzIGxpbmVhciAwLjA4O1xuICAgIC1tb3otdHJhbnNpdGlvbjogaGVpZ2h0IDAuMnMgbGluZWFyIDAuMDg7XG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMnMgbGluZWFyIDAuMDg7XG4gICAgLyogYmFja2dyb3VuZCBpbWFnZSAqL1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvcGFjaXR5OiAuMzsgfVxuICAuY2QtdGl0bGU6OmFmdGVyIHtcbiAgICAvKiBsaW5lIGJlbG93IHRpdGxlIC0gIHZpc2libGUgb24gaG92ZXIgKi9cbiAgICBtYXJnaW46IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogY2FsYyg1MCUgKyAzMHB4KTtcbiAgICByaWdodDogYXV0bztcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgwKTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuMnM7XG4gICAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAwLjJzO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDFweDsgfVxuICAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMSkgLmNkLXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDEpIC5jZC10aXRsZTo6YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaW1nLWJjay1jYXNlLXJlZGJ1bGwuanBnKTsgfVxuICAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMikgLmNkLXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDIpIC5jZC10aXRsZTo6YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaW1nLWJjay1jYXNlLWJvb3N0LmpwZyk7IH1cbiAgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDMpIC5jZC10aXRsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTsgfVxuICAgIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgzKSAuY2QtdGl0bGU6OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ltZy1iY2stY2FzZS1lbGppbWFkb3IuanBnKTsgfVxuICAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMSkgLmNkLXRpdGxlOjpiZWZvcmUsIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgyKSAuY2QtdGl0bGU6OmJlZm9yZSwgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDMpIC5jZC10aXRsZTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gIC5jZC10aXRsZSAudGl0bGUge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC40cztcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDAuNHM7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHM7XG4gICAgLyogRm9yY2UgaGFyZHdhcmUgYWNjZWxlcmF0aW9uICovXG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIHBhZGRpbmc6IDAgMmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgICAuY2QtdGl0bGUgLnRpdGxlIHtcbiAgICAgICAgd2lkdGg6IDcwJTsgfSB9XG4gICAgLmNkLXRpdGxlIC50aXRsZSAqIHtcbiAgICAgIGNvbG9yOiAjZmVmZWZlOyB9XG4gICAgLmNkLXRpdGxlIC50aXRsZSBoMiB7XG4gICAgICBmb250LXdlaWdodDogNTAwOyB9XG4gICAgLmNkLXRpdGxlIC50aXRsZSAuZXZlbnQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAubm8tdG91Y2ggLmNkLXRpdGxlOmhvdmVyOjphZnRlciB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgxKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDEpOyB9XG4gIC5uby10b3VjaCAuc2VsZWN0ZWQgLmNkLXRpdGxlOmhvdmVyOjphZnRlciB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwcztcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDBzO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwcztcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMCk7IH1cbiAgLnNlbGVjdGVkIC5jZC10aXRsZSAudGl0bGUge1xuICAgIC8qIHZlcnRpY2FsbHkgY2VudGVyIGgyIGluIHRoZSBmdWxsLWhlaWdodCBpbWFnZSovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg2Ni42NjY2NyUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNjYuNjY2NjclKTsgfVxuXG4uY2QtY2FzZS1pbmZvIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IGF1dG87XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMsIHZpc2liaWxpdHkgMC40cztcbiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMsIHZpc2liaWxpdHkgMC40cztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzLCB2aXNpYmlsaXR5IDAuNHM7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvdmVyZmxvdzogYXV0bztcbiAgei1pbmRleDogMztcbiAgb3BhY2l0eTogMDsgfVxuICAuY2QtY2FzZS1pbmZvOjpiZWZvcmUge1xuICAgIC8qIHVzZSB0byBwdXNoIHRoZSAuY29udGVudC13cmFwcGVyIGJlbG93IHRoZSBpbnRybyBwcm9qZWN0IGltYWdlICovXG4gICAgY29udGVudDogXCJcIjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgLmNkLWNhc2UtaW5mbyAuY29udGVudC13cmFwcGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiA0ZW0gMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMjsgfVxuICAuY2QtY2FzZS1pbmZvIC5jb250ZW50LWVudHJ5IC5wYWdlLWZlYXR1cmVkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzZW07IH1cbiAgLnNlbGVjdGVkIC5jZC1jYXNlLWluZm8ge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwcywgdmlzaWJpbGl0eSAwcztcbiAgICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMHMsIHZpc2liaWxpdHkgMHM7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwcywgdmlzaWJpbGl0eSAwcztcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gIC5jZC1jYXNlLWluZm8uaGFzLWJveHNoYWRvdyAuY29udGVudC13cmFwcGVyIHtcbiAgICAvKiBhZGQgYSBib3gtc2hhZG93IHdoaWxlIHNjcm9sbGluZyBvdmVyIHRoZSBiYWNrZ3JvdW5kIGltYWdlICovIH1cblxuLmNkLXNjcm9sbCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzLCB2aXNpYmlsaXR5IDAuNHMsIGNvbG9yIDAuNHM7XG4gIC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzLCB2aXNpYmlsaXR5IDAuNHMsIGNvbG9yIDAuNHM7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cywgdmlzaWJpbGl0eSAwLjRzLCBjb2xvciAwLjRzO1xuICBsZWZ0OiA1MCU7XG4gIHJpZ2h0OiBhdXRvO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAvKiBzY3JvbGwgZG93biBhcnJvdyAqL1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1pbmRlbnQ6IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi9pbWcvY2QtY2FzZS1hcnJvdy5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgMTQwJTtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMy43NXJlbTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiBjYWxjKDEwMCUgLSAyNTBweCk7XG4gIHotaW5kZXg6IDE7XG4gIG9wYWNpdHk6IDA7IH1cbiAgLm5vLXRvdWNoIC5jZC1zY3JvbGw6aG92ZXIge1xuICAgIGNvbG9yOiAjZmVmZWZlOyB9XG4gIC5wcm9qZWN0LW9wZW4gLmNkLXNjcm9sbCB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNkLXRyYW5zbGF0ZSAxLjJzIDAuNHM7XG4gICAgLW1vei1hbmltYXRpb246IGNkLXRyYW5zbGF0ZSAxLjJzIDAuNHM7XG4gICAgLW8tYW5pbWF0aW9uOiBjZC10cmFuc2xhdGUgMS4ycyAwLjRzO1xuICAgIGFuaW1hdGlvbjogY2QtdHJhbnNsYXRlIDEuMnMgMC40cztcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDI7XG4gICAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAyO1xuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDI7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIC5wcm9qZWN0LW9wZW4gLmhhcy1ib3hzaGFkb3cgLmNkLXNjcm9sbCB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIG9wYWNpdHk6IDA7IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGNkLXRyYW5zbGF0ZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyBjZC10cmFuc2xhdGUge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDUwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTsgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGNkLXRyYW5zbGF0ZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfSB9XG5cbkBrZXlmcmFtZXMgY2QtdHJhbnNsYXRlIHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGNkLXRyYW5zbGF0ZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyBjZC10cmFuc2xhdGUge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDUwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTsgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH0gfVxuXG5ALW8ta2V5ZnJhbWVzIGNkLXRyYW5zbGF0ZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfSB9XG5cbkBrZXlmcmFtZXMgY2QtdHJhbnNsYXRlIHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cblx0SGVhZGVyXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uaGVhZGVyLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5jZC1zZWN0aW9uLmhlcm8ge1xuICBwYWRkaW5nLXRvcDogNTAlO1xuICBoZWlnaHQ6IDc1dmg7XG4gIG1pbi1oZWlnaHQ6IDc1dmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cbiAgLmNkLXNlY3Rpb24uaGVybyAuZW50cnkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAuY2Qtc2VjdGlvbi5oZXJvIC5lbnRyeSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC03MCUpOyB9IH1cblxuLmNkLWhlYWRlci1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmNkLWhlYWRlci1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAuY2QtaGVhZGVyLWNvbnRhaW5lciAuY2QtaGVhZGVyIHtcbiAgICBtYXgtd2lkdGg6IDc1cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXI6YmVmb3JlLCAuY2QtaGVhZGVyLWNvbnRhaW5lciAuY2QtaGVhZGVyOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXI6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuY2QtaGVhZGVyLWNvbnRhaW5lciAuY2QtaGVhZGVyIG5hdiB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBwYWRkaW5nOiAxLjg3NXJlbSAwIDA7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQxLjY4NzVlbSkge1xuICAgICAgICAuY2QtaGVhZGVyLWNvbnRhaW5lciAuY2QtaGVhZGVyIG5hdiB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjYyNXJlbTtcbiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjYyNXJlbTsgfSB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXIgbmF2IHtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDAuOTM3NXJlbTtcbiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjkzNzVyZW07IH0gfVxuICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXY6bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfVxuICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXYgdWwge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXIgbmF2IHVsIGxpIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMCA1cHg7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZTsgfVxuICAgICAgICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXIgbmF2IHVsIGxpOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXIgbmF2IHVsLmNkLWxhbmcge1xuICAgICAgICAgIGZsb2F0OiByaWdodDsgfVxuICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXYuY2QtbWFpbi1uYXYge1xuICAgICAgICBwYWRkaW5nLXRvcDogMi4zZW07IH1cbiAgICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXYuY2QtbWFpbi1uYXYgYSB7XG4gICAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAgICAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICBjb2xvcjogI2ZlZmVmZTtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU0LCAyNTQsIDI1NCwgMC4zKTtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NCwgMjU0LCAyNTQsIDAuOCk7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgICAgICAgIHBhZGRpbmc6IDFyZW0gM3JlbTtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAwLjJyZW0gMC41cmVtO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXYuY2QtbWFpbi1uYXYgYTphY3RpdmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIzk5MDAwMDtcbiAgICAgICAgICAgIHRvcDogMnB4OyB9XG4gICAgICAgICAgICAuY2QtaGVhZGVyLWNvbnRhaW5lciAuY2QtaGVhZGVyIG5hdi5jZC1tYWluLW5hdiBhOmFjdGl2ZTpiZWZvcmUge1xuICAgICAgICAgICAgICBjb2xvcjogIzcwM2I4NzsgfVxuICAgICAgICAgIC5jZC1oZWFkZXItY29udGFpbmVyIC5jZC1oZWFkZXIgbmF2LmNkLW1haW4tbmF2IGE6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0MwMDsgfVxuICAgICAgLmNkLWhlYWRlci1jb250YWluZXIgLmNkLWhlYWRlciBuYXYuY2Qtc29jaWFsIHVsIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0OyB9XG5cbiNjZC1sb2dvIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogYXV0bztcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDE0N3B4O1xuICBoZWlnaHQ6IDE0NnB4O1xuICB0b3A6IDEwcHg7XG4gIHotaW5kZXg6IDU7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgI2NkLWxvZ28uaGlkZGVuIHtcbiAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogbGVmdCAwLjNzLCBvcGFjaXR5IDAuM3M7XG4gICAgICAtbW96LXRyYW5zaXRpb246IGxlZnQgMC4zcywgb3BhY2l0eSAwLjNzO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAwLjNzLCBvcGFjaXR5IDAuM3M7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogLTIwJTtcbiAgICAgIGxlZnQ6IC0yMCU7XG4gICAgICAvKiBhc3NpZ24gYSBwb3NpdGlvbiBmaXhlZCBhbmQgbW92ZSBvdXRzaWRlIHRoZSB2aWV3cG9ydCAob24gdGhlIGxlZnQpICovXG4gICAgICBvcGFjaXR5OiAwOyB9XG4gICAgICAjY2QtbG9nby5oaWRkZW4uc2xpZGUtaW4ge1xuICAgICAgICAvKiBzbGlkZSBpbiB3aGVuIHRoZSBzZWNvbmRhcnkgbmF2aWdhdGlvbiBnZXRzIGZpeGVkICovXG4gICAgICAgIHdpZHRoOiAxMjdweDtcbiAgICAgICAgaGVpZ2h0OiAxMjZweDtcbiAgICAgICAgdG9wOiAxMHB4O1xuICAgICAgICBsZWZ0OiA1JTtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgI2NkLWxvZ28uaGlkZGVuIGEsICNjZC1sb2dvLmhpZGRlbiBhOmFjdGl2ZSwgI2NkLWxvZ28uaGlkZGVuIGE6aG92ZXIge1xuICAgICAgICB3aWR0aDogMTI3cHg7XG4gICAgICAgIGhlaWdodDogMTI2cHg7IH0gfVxuICAjY2QtbG9nbyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5jdGEtZW50cnksIC5jdGFzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5jdGEtZW50cnkgdWwsIC5jdGFzIHVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7IH1cbiAgICAuY3RhLWVudHJ5IHVsIGxpLCAuY3RhcyB1bCBsaSB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAuY3RhLWVudHJ5IHVsLCAuY3RhcyB1bCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGxlZnQ6IDUwJTsgfVxuICAgICAgICAuY3RhLWVudHJ5IHVsIGxpLCAuY3RhcyB1bCBsaSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDAgMC44cmVtO1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7IH1cbiAgICAgICAgICAuY3RhLWVudHJ5IHVsIGxpOmxhc3QtY2hpbGQsIC5jdGFzIHVsIGxpOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgICAgIC5jdGEtZW50cnkgdWwgbGksIC5jdGFzIHVsIGxpIHtcbiAgICAgICAgICByaWdodDogNTAlOyB9IH1cbiAgICAuY3RhLWVudHJ5IHVsIGxpLCAuY3RhcyB1bCBsaSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuXG4jaG9tZS1wYWdlIC5jZC1idG4taGVhZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAtMjAlO1xuICByaWdodDogLTIwJTtcbiAgei1pbmRleDogNTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAjaG9tZS1wYWdlIC5jZC1idG4taGVhZCB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICNob21lLXBhZ2UgLmNkLWJ0bi1oZWFkLmhpZGRlbiB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiByaWdodCAwLjNzLCBvcGFjaXR5IDAuM3M7XG4gICAgLW1vei10cmFuc2l0aW9uOiByaWdodCAwLjNzLCBvcGFjaXR5IDAuM3M7XG4gICAgdHJhbnNpdGlvbjogcmlnaHQgMC4zcywgb3BhY2l0eSAwLjNzO1xuICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgICNob21lLXBhZ2UgLmNkLWJ0bi1oZWFkLmhpZGRlbi5zbGlkZS1pbiB7XG4gICAgICB0b3A6IDEycHg7XG4gICAgICByaWdodDogMyU7IH1cbiAgICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAgICNob21lLXBhZ2UgLmNkLWJ0bi1oZWFkLmhpZGRlbi5zbGlkZS1pbiB7XG4gICAgICAgICAgb3BhY2l0eTogMTsgfSB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG4gICAgUGFnZSBIZWFkZXJcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5zaXRlLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmVmZWZlO1xuICBoZWlnaHQ6IDcwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDM7IH1cbiAgLnNpdGUtaGVhZGVyICNjZC1sb2dvIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTBweDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTI3cHg7XG4gICAgaGVpZ2h0OiAxMjZweDtcbiAgICBvcGFjaXR5OiAxOyB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIHtcbiAgICAgIC5zaXRlLWhlYWRlciAjY2QtbG9nbyB7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIGxlZnQ6IDUlOyB9IH1cbiAgLnNpdGUtaGVhZGVyIC5jZC1idG4taGVhZCB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEycHg7XG4gICAgcmlnaHQ6IDMlO1xuICAgIGJvdHRvbTogYXV0bztcbiAgICBsZWZ0OiBhdXRvOyB9XG4gICAgLnNpdGUtaGVhZGVyIC5jZC1idG4taGVhZCAuc29jaWFsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAgIC5zaXRlLWhlYWRlciAuY2QtYnRuLWhlYWQgLnNvY2lhbCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAuc2l0ZS1oZWFkZXIgLmlubmVyLWhlYWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuICAgIE5hdmlnYXRpb25cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmEuYWN0aXZlIHtcbiAgY29sb3I6ICNmZWZlZmUgIWltcG9ydGFudDsgfVxuXG5hLnNvY2lhbCB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4uY2Qtc29jaWFsIHVsIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDQwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogNTsgfVxuICAuY2Qtc29jaWFsIHVsIGxpIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMCA1cHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZTsgfVxuICAgIC5jZC1zb2NpYWwgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmNkLXNvY2lhbCB1bCB7XG4gICAgICB3aWR0aDogMTAwcHg7IH0gfVxuICAuY2Qtc29jaWFsIHVsIGxpOmxhc3QtY2hpbGQge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLmNkLXNvY2lhbCB1bCAuYnRuLW1vYmlsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAgIC5jZC1zb2NpYWwgdWwgLmJ0bi1tb2JpbGUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmNkLXNvY2lhbCB1bCAuYnRuLXNsaWRlIHtcbiAgICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgICBtYXJnaW4tbGVmdDogMWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgd2lkdGg6IDkwcHg7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAgIC5jZC1zb2NpYWwgdWwgLmJ0bi1zbGlkZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAuY2Qtc29jaWFsIHVsIC5idG4tc2xpZGUgPiBzcGFuIHtcbiAgICAgIHBhZGRpbmc6IC44ZW0gMDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5jZC1zb2NpYWwgdWwgLmJ0bi1zbGlkZSAuY2Qtc3VibmF2LXRyaWdnZXIge1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IGF1dG87XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgd2lkdGg6IDUwcHg7IH1cbiAgLmNkLXNvY2lhbCB1bDpmaXJzdC1jaGlsZCBhIHtcbiAgICB0ZXh0LWluZGVudDogMjAwJTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtc2l6ZTogMDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcGFkZGluZzogLjZlbSAxZW07XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmNkLXNvY2lhbCB1bDpmaXJzdC1jaGlsZCBhLmZiIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvaWNvbi1mYi5zdmcpIG5vLXJlcGVhdCAwIDA7IH1cbiAgICAuY2Qtc29jaWFsIHVsOmZpcnN0LWNoaWxkIGEudHcge1xuICAgICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9pY29uLXR3LnN2Zykgbm8tcmVwZWF0IDAgMDsgfVxuXG4uY2Qtc29jaWFsIC5oYW1idXJnZXIge1xuICBwYWRkaW5nOiA4cHggNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDsgfVxuXG4uY2Qtc29jaWFsIC5jZC1sYW5nIHtcbiAgcGFkZGluZzogMTNweCAwOyB9XG5cbi5jZC1sYW5nIGEge1xuICB0ZXh0LWluZGVudDogMjAwJTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiBuby1yZXBlYXQgNTAlIDA7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM5OTk4OTg7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDE1cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvcGFjaXR5OiAuNDsgfVxuICAuY2QtbGFuZyBhLmVuIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2ljb24tZmxhZy11cy5wbmcpOyB9XG4gIC5jZC1sYW5nIGEuZXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaWNvbi1mbGFnLW14LnBuZyk7IH1cblxuLmVuOmxhbmcoZW4pLCAuZXM6bGFuZyhlcykge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjYmNiO1xuICBmaWx0ZXI6IGdyYXlzY2FsZSgwKTtcbiAgb3BhY2l0eTogMTsgfVxuXG4jY2QtYnRuLW1lbnUge1xuICB3aWR0aDogNTBweDsgfVxuXG4ubW9iaWxlLWluZGV4IHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMnB4O1xuICByaWdodDogMyU7XG4gIHotaW5kZXg6IDEwOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgLm1vYmlsZS1pbmRleCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cblx0U2Vjb25kYXJ5IEZpeGVkIE5hdmlnYXRpb25cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5jZC1zZWNvbmRhcnktbmF2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmNkLXNlY29uZGFyeS1uYXYge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgICAgei1pbmRleDogMztcbiAgICAgIG9wYWNpdHk6IDE7IH0gfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdiB7XG4gICAgICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCAwLjNzO1xuICAgICAgLW1vei10cmFuc2l0aW9uOiBoZWlnaHQgMC4zcztcbiAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjNzO1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiBhdXRvO1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgcGFkZGluZzogMC4zcmVtIDEuMXJlbSAxLjFyZW07XG4gICAgICBtaW4taGVpZ2h0OiA3MHB4OyB9XG4gICAgICAuY2Qtc2Vjb25kYXJ5LW5hdiBuYXYsIC5jZC1zZWNvbmRhcnktbmF2IHVsLCAuY2Qtc2Vjb25kYXJ5LW5hdiBsaSwgLmNkLXNlY29uZGFyeS1uYXYgYSB7XG4gICAgICAgIGhlaWdodDogMTAwJTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAgIC5jZC1zZWNvbmRhcnktbmF2LmlzLWZpeGVkIHtcbiAgICAgIC8qIG9uIEZpcmVmb3ggQ1NTIHRyYW5zaXRpb24vYW5pbWF0aW9uIGZhaWxzIHdoZW4gcGFyZW50IGVsZW1lbnQgY2hhbmdlcyBwb3NpdGlvbiBhdHRyaWJ1dGUqL1xuICAgICAgLyogc28gd2UgZGVmaW5lZCB0byBkaWZmZW50IGNsYXNzZXM6IC5pcy1maXhlZCB0byBjaGFuZ2UgdGhlIHBvc2l0aW9uIHZhbHVlIGFuZCAuaXMtYW5pbWF0ZWQgdG8gY2hhbmdlIGNoaWxkcmVucycgYXR0cmlidXRlcyAocGFkZGluZyBhbmQgb3BhY2l0eSkqL1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmVmZWZlO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiA3MHB4O1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiAwO1xuICAgICAgYm90dG9tOiBhdXRvO1xuICAgICAgbGVmdDogMDsgfVxuICAgICAgLmNkLXNlY29uZGFyeS1uYXYuaXMtZml4ZWQuc2hvdy1uYXYge1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgICAgICAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgICAgICAgb3BhY2l0eTogMDsgfSB9XG4gIC5jZC1zZWNvbmRhcnktbmF2LmFuaW1hdGUtY2hpbGRyZW4ge1xuICAgIC8qIG9uIEZpcmVmb3ggQ1NTIHRyYW5zaXRpb24vYW5pbWF0aW9uIGZhaWxzIHdoZW4gcGFyZW50IGVsZW1lbnQgY2hhbmdlcyBwb3NpdGlvbiBhdHRyaWJ1dGUqL1xuICAgIC8qIHNvIHdlIGRlZmluZWQgdG8gZGlmZmVudCBjbGFzc2VzOiAuaXMtZml4ZWQgdG8gY2hhbmdlIHRoZSBwb3NpdGlvbiB2YWx1ZSBhbmQgLmlzLWFuaW1hdGVkIHRvIGNoYW5nZSBjaGlsZHJlbnMnIGF0dHJpYnV0ZXMgKHBhZGRpbmcgYW5kIG9wYWNpdHkpKi9cbiAgICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgxMCwgMTAsIDEwLCAwLjIpOyB9XG4gICAgLmNkLXNlY29uZGFyeS1uYXYuYW5pbWF0ZS1jaGlsZHJlbiAuc2l0ZS1uYXYgbGkgYSB7XG4gICAgICBwYWRkaW5nOiAxLjU2MjVyZW0gMS44NzVyZW0gMCAxLjg3NXJlbTsgfVxuICAgICAgLmNkLXNlY29uZGFyeS1uYXYuYW5pbWF0ZS1jaGlsZHJlbiAuc2l0ZS1uYXYgbGkgYSBzcGFuIHtcbiAgICAgICAgb3BhY2l0eTogMDsgfVxuICAuY2Qtc2Vjb25kYXJ5LW5hdiBsaSBhIHtcbiAgICBwYWRkaW5nOiAxLjZlbTtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uc2l0ZS1uYXYge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7XG4gIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICAtby10cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjNzLCB2aXNpYmlsaXR5IDBzIDAuM3M7XG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMC4zcywgdmlzaWJpbGl0eSAwcyAwLjNzO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcywgdmlzaWJpbGl0eSAwcyAwLjNzO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAvKiBtb2JpbGUgZmlyc3QgLSBzZWNvbmRhcnkgbmF2aWdhdGlvbiBoaWRkZW4gYnkgZGVmYXVsdCwgdHJpZ2dlcmVkIGJ5IHRhcC9jbGljayBvbiAuY2Qtc2Vjb25kYXJ5LW5hdi10cmlnZ2VyKi9cbiAgd2lkdGg6IDkwJTtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDE7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLnNpdGUtbmF2IHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICAvKiByZXNldCBuYXZpZ2F0aW9uIHZhbHVlcyAqL1xuICAgICAgcG9zaXRpb246IHN0YXRpYzsgfVxuICAgICAgLnNpdGUtbmF2IGxpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC00cHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgICAuc2l0ZS1uYXYgbGkgYSB7XG4gICAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBwYWRkaW5nIDAuMnM7XG4gICAgICAgICAgLW1vei10cmFuc2l0aW9uOiBwYWRkaW5nIDAuMnM7XG4gICAgICAgICAgdHJhbnNpdGlvbjogcGFkZGluZyAwLjJzO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgcGFkZGluZzogMy42MjVyZW0gMi41cmVtIDAgMi41cmVtO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgICAgIC5zaXRlLW5hdiBsaSBhIHNwYW4ge1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzO1xuICAgICAgICAgICAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnM7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnM7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDE4cHg7IH0gfVxuXG4uY2Qtc2xpZGUtbmF2IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCk7XG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMHB4KTtcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwcHgpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MgMC4ycztcbiAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAwLjNzIDAuMnM7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIDAuMnM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5MjkyOTtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgei1pbmRleDogMzsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAuY2Qtc2xpZGUtbmF2IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLmNkLXNsaWRlLW5hdiBsaSB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jZC1zbGlkZS1uYXYubW92ZXMtb3V0IHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgaGVpZ2h0OiA3MHB4OyB9XG4gIC5jZC1zbGlkZS1uYXYgbGkge1xuICAgIG1hcmdpbi1sZWZ0OiAtNHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5jZC1zbGlkZS1uYXYgbGkgYSB7XG4gICAgICBwYWRkaW5nOiAxLjU2MjVyZW0gMS44NzVyZW0gMCAxLjg3NXJlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5jZC1zZWNvbmRhcnktbmF2IC5zaXRlLW5hdi5pcy12aXNpYmxlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtby10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MsIHZpc2liaWxpdHkgMHMgMC4xcywgZWFzZS1pbi1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMC4zcywgdmlzaWJpbGl0eSAwcyAwLjFzLCBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIHZpc2liaWxpdHkgMHMgMC4xcywgZWFzZS1pbi1vdXQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOTUpO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDM7IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYgLnNpdGUtbmF2LmlzLXZpc2libGUgbGkge1xuICAgIGZsb2F0OiBub25lO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuY2Qtc2Vjb25kYXJ5LW5hdiAuc2l0ZS1uYXYuaXMtdmlzaWJsZSBsaSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdiAuc2l0ZS1uYXYuaXMtdmlzaWJsZSBsaSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdiAuc2l0ZS1uYXYuaXMtdmlzaWJsZSBsaSBhIHtcbiAgICAgIHBhZGRpbmc6IDEuODc1cmVtO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cblxuLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlciB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtaW5kZW50OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDEwLCAxMCwgMTAsIDAuNzUpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gIHdpZHRoOiA0NHB4O1xuICBoZWlnaHQ6IDQ0cHg7XG4gIC8qIGltYWdlIHJlcGxhY2VtZW50ICovXG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDMlO1xuICBib3R0b206IDIwcHg7XG4gIHotaW5kZXg6IDI7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlciBzcGFuIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgYm90dG9tOiBhdXRvO1xuICAgIHJpZ2h0OiBhdXRvO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3M7XG4gICAgLW1vei10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3M7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzO1xuICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHdpZHRoOiA0cHg7XG4gICAgaGVpZ2h0OiA0cHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLyogdGhlIHNwYW4gZWxlbWVudCBpcyB1c2VkIHRvIGNyZWF0ZSB0aGUgbWVudSBpY29uICovXG4gICAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gICAgLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlciBzcGFuOjpiZWZvcmUsIC5jZC1zZWNvbmRhcnktbmF2LXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuICAgIC5jZC1zZWNvbmRhcnktbmF2LXRyaWdnZXIgc3Bhbjo6YmVmb3JlIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAgIHJpZ2h0OiAtMTBweDsgfVxuICAgIC5jZC1zZWNvbmRhcnktbmF2LXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgICAgbGVmdDogLTEwcHg7IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlci5tZW51LWlzLW9wZW4ge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG4gIC5jZC1zZWNvbmRhcnktbmF2LXRyaWdnZXIubWVudS1pcy1vcGVuIHNwYW4ge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU0LCAyNTQsIDI1NCwgMCk7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAycHg7IH1cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdi10cmlnZ2VyLm1lbnUtaXMtb3BlbiBzcGFuOjpiZWZvcmUsIC5jZC1zZWNvbmRhcnktbmF2LXRyaWdnZXIubWVudS1pcy1vcGVuIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gICAgLmNkLXNlY29uZGFyeS1uYXYtdHJpZ2dlci5tZW51LWlzLW9wZW4gc3Bhbjo6YmVmb3JlIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xuICAgICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7IH1cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdi10cmlnZ2VyLm1lbnUtaXMtb3BlbiBzcGFuOjphZnRlciB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDIyNWRlZyk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDIyNWRlZyk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMjI1ZGVnKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKDIyNWRlZyk7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgyMjVkZWcpOyB9XG5cbi5wYWdlLW5hdiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwcHg7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHotaW5kZXg6IDE7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgLnBhZ2UtbmF2IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLnBhZ2UtbmF2IGxpIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnBhZ2UtbmF2IGxpIHtcbiAgICBtYXJnaW4tbGVmdDogLTRweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAucGFnZS1uYXYgbGkgYSB7XG4gICAgICBwYWRkaW5nOiAxLjU2MjVyZW0gMS44NzVyZW0gMCAxLjg3NXJlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAucGFnZS1uYXYgbGkgYS5hY3RpdmUge1xuICAgICAgICBjb2xvcjogI2ZlZmVmZTsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICBNb2JpbGUgTmF2XG4gICAgXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ubW9iaWxlLW5hdiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9XG4gIC5tb2JpbGUtbmF2IGxpIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm1vYmlsZS1uYXYgbGkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOyB9XG4gIC5tb2JpbGUtbmF2IGEge1xuICAgIGNvbG9yOiAjOTk5ODk4O1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBwYWRkaW5nOiAuOGVtIDFlbTtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5tb2JpbGUtbmF2IGE6YWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjZmVmZWZlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0MwMDsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICBDVEFzXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5jdGFzIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgICAuY3RhcyB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMjBweCk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMjBweCk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEyMHB4KTtcbiAgICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMjBweCk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTIwcHgpO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OiAtd2Via2l0LXRyYW5zZm9ybTtcbiAgICAgIC1tb3otdHJhbnNpdGlvbi1wcm9wZXJ0eTogLW1vei10cmFuc2Zvcm07XG4gICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XG4gICAgICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IDAuMnM7XG4gICAgICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IDAuMnM7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjJzO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XG4gICAgICAtbW96LXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xuICAgICAgd2lkdGg6IDEwMHZ3O1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHotaW5kZXg6IDEwOyB9XG4gICAgICAuY3Rhcy5pcy12aXNpYmxlIHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogRm9vdGVyICovXG4uZm9vdGVyLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDEuNWVtIDAgMWVtOyB9XG4gIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFpbiB7XG4gICAgbWF4LXdpZHRoOiA3NXJlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cbiAgICAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW46YmVmb3JlLCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW46YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluOmFmdGVyIHtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluIC5jb3B5cmlnaHQsIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFpbiAuYmNrLXRvcCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZsb2F0OiBsZWZ0OyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MS42ODc1ZW0pIHtcbiAgICAgICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluIC5jb3B5cmlnaHQsIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFpbiAuYmNrLXRvcCB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjYyNXJlbTtcbiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjYyNXJlbTsgfSB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgICAgIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFpbiAuY29weXJpZ2h0LCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW4gLmJjay10b3Age1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMC45Mzc1cmVtO1xuICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDAuOTM3NXJlbTsgfSB9XG4gICAgICAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW4gLmNvcHlyaWdodDpsYXN0LWNoaWxkOm5vdCg6Zmlyc3QtY2hpbGQpLCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW4gLmJjay10b3A6bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfVxuICAgICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjY4cHgpIHtcbiAgICAgICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluIC5jb3B5cmlnaHQsIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFpbiAuYmNrLXRvcCB7XG4gICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICBmbG9hdDogbGVmdDsgfSB9XG4gICAgICAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW4gLmNvcHlyaWdodCBwLCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1haW4gLmJjay10b3AgcCB7XG4gICAgICAgIGNvbG9yOiAjOTk5ODk4O1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgICAgICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluIC5jb3B5cmlnaHQgcCwgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYWluIC5iY2stdG9wIHAge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfSB9XG4gIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWVudSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1lbnUgbGkge1xuICAgICAgbWFyZ2luOiAwIDAgMCAwLjhlbTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZTsgfVxuICAgICAgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tZW51IGxpOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1lbnUgYSB7XG4gICAgICBjb2xvcjogIzY2NjU2NTtcbiAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG4gICAgUHJlbG9hZGVyIFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuI3ByZWxvYWRlciB7XG4gIGNvbG9yOiAjZmVmZWZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMTsgfVxuICAjcHJlbG9hZGVyICNjZC1sb2dvLXByZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgcGFkZGluZzogOGVtIDAgMDtcbiAgICB3aWR0aDogMTY3cHg7XG4gICAgaGVpZ2h0OiAxMjBweDsgfVxuICAjcHJlbG9hZGVyIC50eHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbiAgI3ByZWxvYWRlciAudHh0LXBlcmMge1xuICAgIGZvbnQtc2l6ZTogMy43NXJlbTtcbiAgICBmb250LXdlaWdodDogNTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIDAgNnB4IDA7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBvcGFjaXR5OiAxOyB9XG4gICNwcmVsb2FkZXIgLnByb2dyZXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NCwgMjU0LCAyNTQsIDAuMik7XG4gICAgbWFyZ2luOiAwIGF1dG8gMTVweCBhdXRvO1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDVweDsgfVxuICAgICNwcmVsb2FkZXIgLnByb2dyZXNzIHNwYW4ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxMTksIDM3LCAwLjgpO1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAjcHJlbG9hZGVyLmlzLWhpZGRlbiB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIG9wYWNpdHk6IDA7IH1cblxuLmhvbWUuaXMtbG9hZGluZyB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLypcbiAqIFB1bHNlIGFuaW1hdGlvblxuKi9cbkAtd2Via2l0LWtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4xKTsgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7IH0gfVxuXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfSB9XG5cbi5jZC1wdWxzZSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBwdWxzZSAycyBsaW5lYXIgaW5maW5pdGU7XG4gIC1tb3otYW5pbWF0aW9uOiBwdWxzZSAycyBsaW5lYXIgaW5maW5pdGU7XG4gIGFuaW1hdGlvbjogcHVsc2UgMnMgbGluZWFyIGluZmluaXRlO1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBwdWxzZTtcbiAgYW5pbWF0aW9uLW5hbWU6IHB1bHNlOyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIE1vZGFsIENvbnRlbnRcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uem9vbUluIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogem9vbUluO1xuICAtbW96LWFuaW1hdGlvbi1uYW1lOiB6b29tSW47XG4gIC1tcy1hbmltYXRpb24tbmFtZTogem9vbUluO1xuICAtby1hbmltYXRpb24tbmFtZTogem9vbUluO1xuICBhbmltYXRpb24tbmFtZTogem9vbUluO1xuICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjJzO1xuICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC4ycztcbiAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogMC4ycztcbiAgLW8tYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjJzO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLW1vei1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLnpvb21PdXQge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiB6b29tT3V0O1xuICAtbW96LWFuaW1hdGlvbi1uYW1lOiB6b29tT3V0O1xuICAtbXMtYW5pbWF0aW9uLW5hbWU6IHpvb21PdXQ7XG4gIC1vLWFuaW1hdGlvbi1uYW1lOiB6b29tT3V0O1xuICBhbmltYXRpb24tbmFtZTogem9vbU91dDtcbiAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tcy1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgLW1vei1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIC1tcy1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIC1vLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMHM7XG4gIC1tb3otYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLW1zLWFuaW1hdGlvbi1kZWxheTogMHM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogMHM7XG4gIGFuaW1hdGlvbi1kZWxheTogMHM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtbXMtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLW8tYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtbW96LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1tcy1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtby1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1vLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5mYWRlSW5Eb3duQmlnIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bkJpZztcbiAgLW1vei1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bkJpZztcbiAgLW1zLWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duQmlnO1xuICAtby1hbmltYXRpb24tbmFtZTogZmFkZUluRG93bkJpZztcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd25CaWc7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xuICAtbXMtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW8tYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIC1tb3otYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAtby1hbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtbW96LWFuaW1hdGlvbi1kZWxheTogMHM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtby1hbmltYXRpb24tZGVsYXk6IDBzO1xuICBhbmltYXRpb24tZGVsYXk6IDBzO1xuICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLW1zLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1vLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAtbXMtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW8tYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtby1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4uZmFkZU91dFVwQmlnIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogZmFkZU91dFVwQmlnO1xuICAtbW96LWFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0VXBCaWc7XG4gIC1tcy1hbmltYXRpb24tbmFtZTogZmFkZU91dFVwQmlnO1xuICAtby1hbmltYXRpb24tbmFtZTogZmFkZU91dFVwQmlnO1xuICBhbmltYXRpb24tbmFtZTogZmFkZU91dFVwQmlnO1xuICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1tb3otYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMTtcbiAgLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC1vLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgLW1zLWFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgLW8tYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLW1vei1hbmltYXRpb24tZGVsYXk6IDBzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgLW1zLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC1vLWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLmNsb3NlLWJ1dHRvbiB7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUlO1xuICByaWdodDogNSU7XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgcGFkZGluZzogLjU1ZW0gMDtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0b3A6IDUlO1xuICB6LWluZGV4OiAxMDtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jbG9zZS1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNDMDA7IH1cbiAgLmNsb3NlLWJ1dHRvbiAuY2xvc2Uge1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmNsb3NlLWJ1dHRvbiAuY2xvc2UgaSB7XG4gICAgICBtYXJnaW46IGF1dG87XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDZweDtcbiAgICAgIHJpZ2h0OiAxNTAlO1xuICAgICAgYm90dG9tOiBhdXRvO1xuICAgICAgbGVmdDogYXV0bztcbiAgICAgIGZvbnQtc2l6ZTogMC42ODc1cmVtO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC5jbG9zZS1idXR0b24gLmNsb3NlOjpiZWZvcmUsIC5jbG9zZS1idXR0b24gLmNsb3NlOjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgYmFja2dyb3VuZDogI2ZlZmVmZTtcbiAgICAgIG1hcmdpbi10b3A6IC0xcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiAwOyB9XG4gICAgLmNsb3NlLWJ1dHRvbiAuY2xvc2U6OmJlZm9yZSB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgIC5jbG9zZS1idXR0b24gLmNsb3NlOjphZnRlciB7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XG4gICAgLmNsb3NlLWJ1dHRvbiAuY2xvc2UuYmlnIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgzKTtcbiAgICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgzKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDMpO1xuICAgICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgzKTtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMyk7IH1cblxuI2NvbnRhY3RNb2RhbCwgI21vYmlsZU1lbnUge1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiAxMDA2O1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6ICMwYTBhMGE7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC45KTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgbWF4LXdpZHRoOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBwb3NpdGlvbjogZml4ZWQ7IH1cbiAgW2RhdGEtd2hhdGlucHV0PSdtb3VzZSddICNjb250YWN0TW9kYWwsIFtkYXRhLXdoYXRpbnB1dD0nbW91c2UnXSAjbW9iaWxlTWVudSB7XG4gICAgb3V0bGluZTogMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgI2NvbnRhY3RNb2RhbCwgI21vYmlsZU1lbnUge1xuICAgICAgbWluLWhlaWdodDogMDsgfSB9XG4gICNjb250YWN0TW9kYWwgLmNvbHVtbixcbiAgI2NvbnRhY3RNb2RhbCAuY29sdW1ucywgI21vYmlsZU1lbnUgLmNvbHVtbixcbiAgI21vYmlsZU1lbnUgLmNvbHVtbnMge1xuICAgIG1pbi13aWR0aDogMDsgfVxuICAjY29udGFjdE1vZGFsID4gOmxhc3QtY2hpbGQsICNtb2JpbGVNZW51ID4gOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLm1vZGFsLWNvbnRlbnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHBhZGRpbmc6IDZlbSAxZW0gMWVtO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAgIC5tb2RhbC1jb250ZW50IHtcbiAgICAgIHBhZGRpbmc6IDhlbSA1ZW0gMDsgfSB9XG4gIC5tb2RhbC1jb250ZW50IC5vdiB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjg1KTsgfVxuICAubW9kYWwtY29udGVudCAuZW50cnkge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAgICAgLm1vZGFsLWNvbnRlbnQgLmVudHJ5IHtcbiAgICAgICAgbWF4LXdpZHRoOiA5MCU7IH0gfVxuICAgIC5tb2RhbC1jb250ZW50IC5lbnRyeSBwIHtcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9XG4gICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NjhweCkge1xuICAgICAgICAubW9kYWwtY29udGVudCAuZW50cnkgcCB7XG4gICAgICAgICAgbWF4LXdpZHRoOiA2MCU7IH0gfVxuICAubW9kYWwtY29udGVudCAuY2QtbGFuZyB7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5tb2RhbC1jb250ZW50IC5jZC1sYW5nIGxpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07IH1cbiAgICAgIC5tb2RhbC1jb250ZW50IC5jZC1sYW5nIGxpIGEge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgIGhlaWdodDogMzBweDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICBGb3JtXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5mb3JtLWJsb2NrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbiNzdWNjZXNzQmxvY2sge1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTE5LCAzNywgMC44KTtcbiAgcGFkZGluZzogMWVtOyB9XG4gICNzdWNjZXNzQmxvY2sgKiB7XG4gICAgY29sb3I6ICNmZWZlZmU7IH1cbiAgI3N1Y2Nlc3NCbG9jayBwIHtcbiAgICBmb250LXNpemU6IDEuNjI1cmVtOyB9XG5cbiNmb3JtQ29udGFpbmVyIC5lbnRyeSB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmctdG9wOiAxZW07IH1cblxuI2Zvcm1Db250YWluZXIgLmZpZWxkLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNzVyZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cbiAgI2Zvcm1Db250YWluZXIgLmZpZWxkLWNvbnRhaW5lcjpiZWZvcmUsICNmb3JtQ29udGFpbmVyIC5maWVsZC1jb250YWluZXI6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgI2Zvcm1Db250YWluZXIgLmZpZWxkLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgI2Zvcm1Db250YWluZXIgLmZpZWxkLWNvbnRhaW5lciBbY2xhc3MqPVwiZm9ybS1cIl0ge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAwLjkzNzVyZW07XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwLjkzNzVyZW07IH1cbiAgICAgICNmb3JtQ29udGFpbmVyIC5maWVsZC1jb250YWluZXIgW2NsYXNzKj1cImZvcm0tXCJdOmxhc3QtY2hpbGQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuXG4uY2QtZm9ybSB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLWJvdHRvbTogMWVtOyB9XG4gIC5jZC1mb3JtOmJlZm9yZSwgLmNkLWZvcm06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLmNkLWZvcm06YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gICAgLmNkLWZvcm0gbGVnZW5kICsgZGl2IHtcbiAgICAgIC8qIHJlZHVjZSBtYXJnaW4tdG9wIGZvciBmaXJzdCBmb3JtIGVsZW1lbnQgYWZ0ZXIgdGhlIGxlZ2VuZCAqL1xuICAgICAgbWFyZ2luLXRvcDogMjBweDsgfVxuICAgIC5jZC1mb3JtIGg0LCAuY2QtZm9ybSAuY2QtbGFiZWwge1xuICAgICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgICAuY2QtZm9ybSBpbnB1dFt0eXBlPVwidGV4dFwiXSwgLmNkLWZvcm0gaW5wdXRbdHlwZT1cImVtYWlsXCJdLCAuY2QtZm9ybSB0ZXh0YXJlYSwgLmNkLWZvcm0gc2VsZWN0IHtcbiAgICAgIHBhZGRpbmc6IDIwcHg7IH0gfVxuICAuY2QtZm9ybSAqIHtcbiAgICBjb2xvcjogI2ZlZmVmZTsgfVxuICAuY2QtZm9ybSBmaWVsZHNldCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiBub25lOyB9XG4gIC5jZC1mb3JtIGxlZ2VuZCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7IH1cbiAgLmNkLWZvcm0gaDQsIC5jZC1mb3JtIC5jZC1sYWJlbCB7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG4gIC5jZC1mb3JtIC5pY29uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmNkLWZvcm0gLmNkLWxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuY2QtZm9ybSBpbnB1dCwgLmNkLWZvcm0gdGV4dGFyZWEsIC5jZC1mb3JtIHNlbGVjdCwgLmNkLWZvcm0gbGFiZWwge1xuICAgIGNvbG9yOiAjZmVmZWZlO1xuICAgIGZvbnQtc2l6ZTogMS4wNjI1cmVtOyB9XG4gIC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCAuY2QtZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIC5jZC1mb3JtIHRleHRhcmVhLCAuY2QtZm9ybSBzZWxlY3QsIC5jZC1mb3JtIGxlZ2VuZCB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgICAtbXMtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAtby1hcHBlYXJhbmNlOiBub25lO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmNkLWZvcm0gaW5wdXRbdHlwZT1cInRleHRcIl0sIC5jZC1mb3JtIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgLmNkLWZvcm0gaW5wdXRbdHlwZT1cInRlbFwiXSwgLmNkLWZvcm0gdGV4dGFyZWEsIC5jZC1mb3JtIHNlbGVjdCB7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMTAsIDEwLCAxMCwgMC4wOCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTQsIDI1NCwgMjU0LCAwLjMpO1xuICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtO1xuICAgIC8qIGdlbmVyYWwgc3R5bGUgZm9yIGlucHV0IGVsZW1lbnRzICovXG4gICAgcGFkZGluZzogMThweDsgfVxuICAgIC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOmZvY3VzLCAuY2QtZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl06Zm9jdXMsIC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZWxcIl06Zm9jdXMsIC5jZC1mb3JtIHRleHRhcmVhOmZvY3VzLCAuY2QtZm9ybSBzZWxlY3Q6Zm9jdXMge1xuICAgICAgY29sb3I6ICM3MDcwNzA7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZSAwLjk1O1xuICAgICAgYm94LXNoYWRvdzogMCAwIDVweCByZ2JhKDEwLCAxMCwgMTAsIDAuMik7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlOyB9XG4gIC5jZC1mb3JtIC5tZXNzYWdlIHtcbiAgICBtaW4taGVpZ2h0OiAyMzhweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICByZXNpemU6IHZlcnRpY2FsOyB9XG4gIC5jZC1mb3JtIC5zdWJtaXQtY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmNkLWZvcm0gLnN1Ym1pdC1jb250YWluZXI6YmVmb3JlLCAuY2QtZm9ybSAuc3VibWl0LWNvbnRhaW5lcjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAuY2QtZm9ybSAuc3VibWl0LWNvbnRhaW5lcjphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAuY2QtZm9ybSBbcmVxdWlyZWRdIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvY2QtcmVxdWlyZWQuc3ZnXCIpIG5vLXJlcGVhdCB0b3AgcmlnaHQ7IH1cbiAgLmNkLWZvcm0gLmVycm9yLW1lc3NhZ2UgcCB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAwLjkzNzVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQ6ICNjMDA7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1ZW07XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogMTZweDsgfVxuICAuY2QtZm9ybSAuZXJyb3Ige1xuICAgIGJvcmRlci1jb2xvcjogI2MwMCAhaW1wb3J0YW50OyB9XG5cbi5zdWJtaXQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTQsIDI1NCwgMjU0LCAwLjMpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NCwgMjU0LCAyNTQsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcGFkZGluZzogMXJlbSAzcmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogI2IzYjFiMTtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjY2JjYjtcbiAgcGFkZGluZzogMWVtIDIuNWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLnN1Ym1pdDphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICM5OTAwMDA7XG4gICAgdG9wOiAycHg7IH1cbiAgICAuc3VibWl0OmFjdGl2ZTpiZWZvcmUge1xuICAgICAgY29sb3I6ICM3MDNiODc7IH1cbiAgLnN1Ym1pdDpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0MwMDsgfVxuICAuc3VibWl0OmhvdmVyLCAuc3VibWl0OmZvY3VzIHtcbiAgICBjb2xvcjogI2ZlZmVmZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICNDMDA7IH1cblxuLnBhZ2UtY29udGVudCAuc3VibWl0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdEQzg1NTsgfVxuICAucGFnZS1jb250ZW50IC5zdWJtaXQ6aG92ZXIsIC5wYWdlLWNvbnRlbnQgLnN1Ym1pdDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZDogI0MwMDsgfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgY2QtYm91bmNlIHtcbiAgMCUsIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4gIDUwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC44KTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGNkLWJvdW5jZSB7XG4gIDAlLCAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC44KTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgY2QtYm91bmNlIHtcbiAgMCUsIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4gIDUwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC44KTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpOyB9IH1cblxuQGtleWZyYW1lcyBjZC1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC44KTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMC44KTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMC44KTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7IH0gfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcbkN1c3RvbSBpY29uc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5jZC1mb3JtIC5pY29uIGlucHV0LCAuY2QtZm9ybSAuaWNvbiBzZWxlY3QsIC5jZC1mb3JtIC5pY29uIHRleHRhcmVhIHtcbiAgcGFkZGluZy1sZWZ0OiA1NHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNkLWZvcm0gLnVzZXIge1xuICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybChcIi4uL2ltZy9jZC1pY29uLXVzZXIuc3ZnXCIpIG5vLXJlcGVhdCAxNnB4IGNlbnRlcjsgfVxuXG4uY2QtZm9ybSBbcmVxdWlyZWRdLnVzZXIge1xuICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybChcIi4uL2ltZy9jZC1pY29uLXVzZXIuc3ZnXCIpIG5vLXJlcGVhdCAxNnB4IGNlbnRlciwgdXJsKFwiLi4vaW1nL2NkLXJlcXVpcmVkLnN2Z1wiKSBuby1yZXBlYXQgdG9wIHJpZ2h0OyB9XG5cbi5jZC1mb3JtIC50ZWwge1xuICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybChcIi4uL2ltZy9jZC1pY29uLXBob25lLnN2Z1wiKSBuby1yZXBlYXQgMTZweCBjZW50ZXI7IH1cblxuLmNkLWZvcm0gW3JlcXVpcmVkXS50ZWwge1xuICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybChcIi4uL2ltZy9jZC1pY29uLXBob25lLnN2Z1wiKSBuby1yZXBlYXQgMTZweCBjZW50ZXIsIHVybChcIi4uL2ltZy9jZC1yZXF1aXJlZC5zdmdcIikgbm8tcmVwZWF0IHRvcCByaWdodDsgfVxuXG4uY2QtZm9ybSAuZW1haWwge1xuICBiYWNrZ3JvdW5kOiAjMGEwYTBhIHVybChcIi4uL2ltZy9jZC1pY29uLWVtYWlsLnN2Z1wiKSBuby1yZXBlYXQgMTZweCBjZW50ZXI7IH1cblxuLmNkLWZvcm0gW3JlcXVpcmVkXS5lbWFpbCB7XG4gIGJhY2tncm91bmQ6ICMwYTBhMGEgdXJsKFwiLi4vaW1nL2NkLWljb24tZW1haWwuc3ZnXCIpIG5vLXJlcGVhdCAxNnB4IGNlbnRlciwgdXJsKFwiLi4vaW1nL2NkLXJlcXVpcmVkLnN2Z1wiKSBuby1yZXBlYXQgdG9wIHJpZ2h0OyB9XG5cbi5jZC1mb3JtIC5tZXNzYWdlIHtcbiAgYmFja2dyb3VuZDogIzBhMGEwYSB1cmwoXCIuLi9pbWcvY2QtaWNvbi1tZXNzYWdlLnN2Z1wiKSBuby1yZXBlYXQgMTZweCAxNnB4OyB9XG5cbi5jZC1mb3JtIFtyZXF1aXJlZF0ubWVzc2FnZSB7XG4gIGJhY2tncm91bmQ6ICMwYTBhMGEgdXJsKFwiLi4vaW1nL2NkLWljb24tbWVzc2FnZS5zdmdcIikgbm8tcmVwZWF0IDE2cHggMTZweCwgdXJsKFwiLi4vaW1nL2NkLXJlcXVpcmVkLnN2Z1wiKSBuby1yZXBlYXQgdG9wIHJpZ2h0OyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuRkxvYXRpbmcgbGFiZWxzIFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2OHB4KSB7XG4gIC5mbG9hdGluZy1sYWJlbHMgbGVnZW5kICsgZGl2IHtcbiAgICAvKiByZWR1Y2UgbWFyZ2luLXRvcCBmb3IgZmlyc3QgZm9ybSBlbGVtZW50IGFmdGVyIHRoZSBsZWdlbmQgKi9cbiAgICBtYXJnaW4tdG9wOiAxNnB4OyB9XG4gIC5mbG9hdGluZy1sYWJlbHMgLmNkLWxhYmVsIHtcbiAgICB0b3A6IDIwcHg7IH0gfVxuXG4uZmxvYXRpbmctbGFiZWxzIFtjbGFzcyo9XCJmb3JtLVwiXSBkaXYge1xuICBtYXJnaW46IDI4cHggMDsgfVxuXG4uZmxvYXRpbmctbGFiZWxzIC5jZC1sYWJlbCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogdG9wIDAuMnMsIGxlZnQgMC4ycywgZm9udC1zaXplIDAuMnM7XG4gIC1tb3otdHJhbnNpdGlvbjogdG9wIDAuMnMsIGxlZnQgMC4ycywgZm9udC1zaXplIDAuMnM7XG4gIHRyYW5zaXRpb246IHRvcCAwLjJzLCBsZWZ0IDAuMnMsIGZvbnQtc2l6ZSAwLjJzO1xuICBjb2xvcjogcmdiYSgyNTQsIDI1NCwgMjU0LCAwLjUpO1xuICBmb250LXNpemU6IDEuMDYyNXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE4cHg7XG4gIGxlZnQ6IDE4cHg7XG4gIGN1cnNvcjogdGV4dDsgfVxuXG4uZmxvYXRpbmctbGFiZWxzIC5pY29uIC5jZC1sYWJlbCB7XG4gIGxlZnQ6IDU2cHg7IH1cblxuLmZsb2F0aW5nLWxhYmVscyAuaWNvbiAuZXJyb3Ige1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMThweDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogYXV0bztcbiAgbGVmdDogYXV0bztcbiAgY29sb3I6ICNDMDA7IH1cblxuLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtZXJyb3IgLmNkLWxhYmVsIHtcbiAgY29sb3I6ICNDMDA7IH1cblxuLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtZXJyb3IgaW5wdXRbdHlwZT1cInRleHRcIl0sIC5mbG9hdGluZy1sYWJlbHMgLmljb24uaGFzLWVycm9yIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtZXJyb3IgaW5wdXRbdHlwZT1cInRlbFwiXSwgLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtZXJyb3IgdGV4dGFyZWEsIC5mbG9hdGluZy1sYWJlbHMgLmljb24uaGFzLWVycm9yIHNlbGVjdCB7XG4gIGNvbG9yOiAjQzAwO1xuICBib3JkZXItY29sb3I6ICNDMDA7IH1cblxuLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtc3VjY2VzcyAuY2QtbGFiZWwge1xuICBjb2xvcjogIzAwNzcyNTsgfVxuXG4uZmxvYXRpbmctbGFiZWxzIC5pY29uLmhhcy1zdWNjZXNzIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCAuZmxvYXRpbmctbGFiZWxzIC5pY29uLmhhcy1zdWNjZXNzIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgLmZsb2F0aW5nLWxhYmVscyAuaWNvbi5oYXMtc3VjY2VzcyBpbnB1dFt0eXBlPVwidGVsXCJdLCAuZmxvYXRpbmctbGFiZWxzIC5pY29uLmhhcy1zdWNjZXNzIHRleHRhcmVhLCAuZmxvYXRpbmctbGFiZWxzIC5pY29uLmhhcy1zdWNjZXNzIHNlbGVjdCB7XG4gIGNvbG9yOiAjMDA3NzI1O1xuICBib3JkZXItY29sb3I6ICMwMDc3MjU7IH1cblxuLmZsb2F0aW5nLWxhYmVscyAuY2QtbGFiZWwuZmxvYXQge1xuICAvKiBtb3ZlIGxhYmVsIG91dCB0aGUgaW5wdXQgZmllbGQgKi9cbiAgZm9udC1zaXplOiAwLjY4NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRvcDogLTE4cHg7XG4gIGxlZnQ6IDAgIWltcG9ydGFudDsgfVxuXG5pbnB1dDotd2Via2l0LWF1dG9maWxsLCB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsLCBzZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbCB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMTAsIDEwLCAxMCwgMC4yKTtcbiAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfVxuXG5pbnB1dC5yZHIge1xuICBvdXRsaW5lOiAwO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiAyMHB4OyB9XG5cbi5jb250ZW50LWVudHJ5IC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCAuY29udGVudC1lbnRyeSAuY2QtZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIC5jb250ZW50LWVudHJ5IC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIC5jb250ZW50LWVudHJ5IC5jZC1mb3JtIHRleHRhcmVhLCAuY29udGVudC1lbnRyeSAuY2QtZm9ybSBzZWxlY3Qge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgxMCwgMTAsIDEwLCAwLjA4KTtcbiAgYm9yZGVyLWNvbG9yOiAjY2NjYmNiOyB9XG4gIC5jb250ZW50LWVudHJ5IC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOmZvY3VzLCAuY29udGVudC1lbnRyeSAuY2QtZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl06Zm9jdXMsIC5jb250ZW50LWVudHJ5IC5jZC1mb3JtIGlucHV0W3R5cGU9XCJ0ZWxcIl06Zm9jdXMsIC5jb250ZW50LWVudHJ5IC5jZC1mb3JtIHRleHRhcmVhOmZvY3VzLCAuY29udGVudC1lbnRyeSAuY2QtZm9ybSBzZWxlY3Q6Zm9jdXMge1xuICAgIGNvbG9yOiAjNzA3MDcwO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZSAwLjk1O1xuICAgIGJveC1zaGFkb3c6IDAgMCA1cHggcmdiYSgxMCwgMTAsIDEwLCAwLjIpO1xuICAgIGJvcmRlci1jb2xvcjogd2hpdGU7IH1cblxuLmNvbnRlbnQtZW50cnkgLmZsb2F0aW5nLWxhYmVscyAuY2QtbGFiZWwge1xuICBjb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjUpOyB9XG5cbi8qIVxuICogSGFtYnVyZ2Vyc1xuICogQGRlc2NyaXB0aW9uIFRhc3R5IENTUy1hbmltYXRlZCBoYW1idXJnZXJzXG4gKiBAYXV0aG9yIEpvbmF0aGFuIFN1aCBAam9uc3VoXG4gKiBAc2l0ZSBodHRwczovL2pvbnN1aC5jb20vaGFtYnVyZ2Vyc1xuICogQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2pvbnN1aC9oYW1idXJnZXJzXG4gKi9cbi5oYW1idXJnZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udDogaW5oZXJpdDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIG91dGxpbmU6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMTVweCAxNXB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMTVzO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5LCBmaWx0ZXI7IH1cbiAgLmhhbWJ1cmdlcjpob3ZlciB7XG4gICAgb3BhY2l0eTogMC43OyB9XG5cbi5oYW1idXJnZXItYm94IHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogMjRweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmhhbWJ1cmdlci1pbm5lciB7XG4gIG1hcmdpbi10b3A6IC0ycHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0b3A6IDUwJTsgfVxuICAuaGFtYnVyZ2VyLWlubmVyLCAuaGFtYnVyZ2VyLWlubmVyOjpiZWZvcmUsIC5oYW1idXJnZXItaW5uZXI6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogLjE1cztcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07IH1cbiAgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlLCAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuaGFtYnVyZ2VyLWlubmVyOjpiZWZvcmUge1xuICAgIHRvcDogLTEwcHg7IH1cbiAgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xuICAgIGJvdHRvbTogLTEwcHg7IH1cblxuLypcbiAgICogQXJyb3cgQWx0XG4gICAqL1xuLmhhbWJ1cmdlci0tYXJyb3dhbHQgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlIHtcbiAgdHJhbnNpdGlvbjogdG9wIDAuMXMgMC4xNXMgZWFzZSwgdHJhbnNmb3JtIDAuMTVzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7IH1cblxuLmhhbWJ1cmdlci0tYXJyb3dhbHQgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xuICB0cmFuc2l0aW9uOiBib3R0b20gMC4xcyAwLjE1cyBlYXNlLCB0cmFuc2Zvcm0gMC4xNXMgY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKTsgfVxuXG4uaGFtYnVyZ2VyLS1hcnJvd2FsdC5pcy1hY3RpdmUgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlIHtcbiAgdG9wOiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC04cHgsIC0xMHB4LCAwKSByb3RhdGUoLTQ1ZGVnKSBzY2FsZSgwLjcsIDEpO1xuICB0cmFuc2l0aW9uOiB0b3AgMC4xcyBlYXNlLCB0cmFuc2Zvcm0gMC4xNXMgMC4xcyBjdWJpYy1iZXppZXIoMC44OTUsIDAuMDMsIDAuNjg1LCAwLjIyKTsgfVxuXG4uaGFtYnVyZ2VyLS1hcnJvd2FsdC5pcy1hY3RpdmUgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xuICBib3R0b206IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLThweCwgMTBweCwgMCkgcm90YXRlKDQ1ZGVnKSBzY2FsZSgwLjcsIDEpO1xuICB0cmFuc2l0aW9uOiBib3R0b20gMC4xcyBlYXNlLCB0cmFuc2Zvcm0gMC4xNXMgMC4xcyBjdWJpYy1iZXppZXIoMC44OTUsIDAuMDMsIDAuNjg1LCAwLjIyKTsgfVxuIiwiLy8gIEZvdW5kYXRpb24gZm9yIFNpdGVzIFNldHRpbmdzXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vXG4vLyAgVGFibGUgb2YgQ29udGVudHM6XG4vL1xuLy8gICAxLiBHbG9iYWxcbi8vICAgMi4gQnJlYWtwb2ludHNcbi8vICAgMy4gVGhlIEdyaWRcbi8vICAgNC4gQmFzZSBUeXBvZ3JhcGh5XG4vLyAgIDUuIFR5cG9ncmFwaHkgSGVscGVyc1xuLy8gICA2LiBBYmlkZVxuLy8gICA3LiBBY2NvcmRpb25cbi8vICAgOC4gQWNjb3JkaW9uIE1lbnVcbi8vICAgOS4gQmFkZ2Vcbi8vICAxMC4gQnJlYWRjcnVtYnNcbi8vICAxMS4gQnV0dG9uXG4vLyAgMTIuIEJ1dHRvbiBHcm91cFxuLy8gIDEzLiBDYWxsb3V0XG4vLyAgMTQuIENsb3NlIEJ1dHRvblxuLy8gIDE1LiBEcmlsbGRvd25cbi8vICAxNi4gRHJvcGRvd25cbi8vICAxNy4gRHJvcGRvd24gTWVudVxuLy8gIDE4LiBGbGV4IFZpZGVvXG4vLyAgMTkuIEZvcm1zXG4vLyAgMjAuIExhYmVsXG4vLyAgMjEuIE1lZGlhIE9iamVjdFxuLy8gIDIyLiBNZW51XG4vLyAgMjMuIE9mZi1jYW52YXNcbi8vICAyNC4gT3JiaXRcbi8vICAyNS4gUGFnaW5hdGlvblxuLy8gIDI2LiBQcm9ncmVzcyBCYXJcbi8vICAyNy4gUmV2ZWFsXG4vLyAgMjguIFNsaWRlclxuLy8gIDI5LiBTd2l0Y2hcbi8vICAzMC4gVGFibGVcbi8vICAzMS4gVGFic1xuLy8gIDMyLiBUaHVtYm5haWxcbi8vICAzMy4gVGl0bGUgQmFyXG4vLyAgMzQuIFRvb2x0aXBcbi8vICAzNS4gVG9wIEJhclxuXG5AaW1wb3J0ICd1dGlsL3V0aWwnO1xuXG4vLyAxLiBHbG9iYWxcbi8vIC0tLS0tLS0tLVxuXG4kZ2xvYmFsLWZvbnQtc2l6ZTogMTAwJTtcbiRnbG9iYWwtd2lkdGg6IHJlbS1jYWxjKDEyMDApO1xuJGdsb2JhbC1saW5laGVpZ2h0OiAxLjU7XG4kcHJpbWFyeS1jb2xvcjogIzIxOTllODtcbiRzZWNvbmRhcnktY29sb3I6ICM3Nzc7XG4kc3VjY2Vzcy1jb2xvcjogIzNhZGI3NjtcbiR3YXJuaW5nLWNvbG9yOiAjZmZhZTAwO1xuJGFsZXJ0LWNvbG9yOiAjZWM1ODQwO1xuJGxpZ2h0LWdyYXk6ICNlNmU2ZTY7XG4kbWVkaXVtLWdyYXk6ICNjYWNhY2E7XG4kZGFyay1ncmF5OiAjOGE4YThhO1xuJGJsYWNrOiAjMGEwYTBhO1xuJHdoaXRlOiAjZmVmZWZlO1xuJGJvZHktYmFja2dyb3VuZDogJHdoaXRlO1xuJGJvZHktZm9udC1jb2xvcjogJGJsYWNrO1xuJGJvZHktZm9udC1mYW1pbHk6ICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgUm9ib3RvLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiRib2R5LWFudGlhbGlhc2VkOiB0cnVlO1xuJGdsb2JhbC1tYXJnaW46IDFyZW07XG4kZ2xvYmFsLXBhZGRpbmc6IDFyZW07XG4kZ2xvYmFsLXdlaWdodC1ub3JtYWw6IG5vcm1hbDtcbiRnbG9iYWwtd2VpZ2h0LWJvbGQ6IGJvbGQ7XG4kZ2xvYmFsLXJhZGl1czogMDtcbiRnbG9iYWwtdGV4dC1kaXJlY3Rpb246IGx0cjtcblxuLy8gMi4gQnJlYWtwb2ludHNcbi8vIC0tLS0tLS0tLS0tLS0tXG5cbiRicmVha3BvaW50czogKFxuICBzbWFsbDogMCxcbiAgbWVkaXVtOiA2NDBweCxcbiAgbGFyZ2U6IDEwMjRweCxcbiAgeGxhcmdlOiAxMjAwcHgsXG4gIHh4bGFyZ2U6IDE0NDBweCxcbik7XG4kYnJlYWtwb2ludC1jbGFzc2VzOiAoc21hbGwgbWVkaXVtIGxhcmdlKTtcblxuLy8gMy4gVGhlIEdyaWRcbi8vIC0tLS0tLS0tLS0tXG5cbiRncmlkLXJvdy13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRncmlkLWNvbHVtbi1jb3VudDogMTI7XG4kZ3JpZC1jb2x1bW4tcmVzcG9uc2l2ZS1ndXR0ZXI6IChcbiAgc21hbGw6IDIwcHgsXG4gIG1lZGl1bTogMzBweCxcbik7XG4kZ3JpZC1jb2x1bW4tYWxpZ24tZWRnZTogdHJ1ZTtcbiRibG9jay1ncmlkLW1heDogODtcblxuLy8gNC4gQmFzZSBUeXBvZ3JhcGh5XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS1cblxuJGhlYWRlci1mb250LWZhbWlseTogJGJvZHktZm9udC1mYW1pbHk7XG4kaGVhZGVyLWZvbnQtd2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ub3JtYWw7XG4kaGVhZGVyLWZvbnQtc3R5bGU6IG5vcm1hbDtcbiRmb250LWZhbWlseS1tb25vc3BhY2U6IENvbnNvbGFzLCAnTGliZXJhdGlvbiBNb25vJywgQ291cmllciwgbW9ub3NwYWNlO1xuJGhlYWRlci1zaXplczogKFxuICBzbWFsbDogKFxuICAgICdoMSc6IDI0LFxuICAgICdoMic6IDIwLFxuICAgICdoMyc6IDE5LFxuICAgICdoNCc6IDE4LFxuICAgICdoNSc6IDE3LFxuICAgICdoNic6IDE2LFxuICApLFxuICBtZWRpdW06IChcbiAgICAnaDEnOiA0OCxcbiAgICAnaDInOiA0MCxcbiAgICAnaDMnOiAzMSxcbiAgICAnaDQnOiAyNSxcbiAgICAnaDUnOiAyMCxcbiAgICAnaDYnOiAxNixcbiAgKSxcbik7XG4kaGVhZGVyLWNvbG9yOiBpbmhlcml0O1xuJGhlYWRlci1saW5laGVpZ2h0OiAxLjQ7XG4kaGVhZGVyLW1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiRoZWFkZXItdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiRzbWFsbC1mb250LXNpemU6IDgwJTtcbiRoZWFkZXItc21hbGwtZm9udC1jb2xvcjogJG1lZGl1bS1ncmF5O1xuJHBhcmFncmFwaC1saW5laGVpZ2h0OiAxLjY7XG4kcGFyYWdyYXBoLW1hcmdpbi1ib3R0b206IDFyZW07XG4kcGFyYWdyYXBoLXRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4kY29kZS1jb2xvcjogJGJsYWNrO1xuJGNvZGUtZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS1tb25vc3BhY2U7XG4kY29kZS1mb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtbm9ybWFsO1xuJGNvZGUtYmFja2dyb3VuZDogJGxpZ2h0LWdyYXk7XG4kY29kZS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kY29kZS1wYWRkaW5nOiByZW0tY2FsYygyIDUgMSk7XG4kYW5jaG9yLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiRhbmNob3ItY29sb3ItaG92ZXI6IHNjYWxlLWNvbG9yKCRhbmNob3ItY29sb3IsICRsaWdodG5lc3M6IC0xNCUpO1xuJGFuY2hvci10ZXh0LWRlY29yYXRpb246IG5vbmU7XG4kYW5jaG9yLXRleHQtZGVjb3JhdGlvbi1ob3Zlcjogbm9uZTtcbiRoci13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRoci1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kaHItbWFyZ2luOiByZW0tY2FsYygyMCkgYXV0bztcbiRsaXN0LWxpbmVoZWlnaHQ6ICRwYXJhZ3JhcGgtbGluZWhlaWdodDtcbiRsaXN0LW1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTtcbiRsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4kbGlzdC1zdHlsZS1wb3NpdGlvbjogb3V0c2lkZTtcbiRsaXN0LXNpZGUtbWFyZ2luOiAxLjI1cmVtO1xuJGxpc3QtbmVzdGVkLXNpZGUtbWFyZ2luOiAxLjI1cmVtO1xuJGRlZm5saXN0LW1hcmdpbi1ib3R0b206IDFyZW07XG4kZGVmbmxpc3QtdGVybS13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LWJvbGQ7XG4kZGVmbmxpc3QtdGVybS1tYXJnaW4tYm90dG9tOiAwLjNyZW07XG4kYmxvY2txdW90ZS1jb2xvcjogJGRhcmstZ3JheTtcbiRibG9ja3F1b3RlLXBhZGRpbmc6IHJlbS1jYWxjKDkgMjAgMCAxOSk7XG4kYmxvY2txdW90ZS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kY2l0ZS1mb250LXNpemU6IHJlbS1jYWxjKDEzKTtcbiRjaXRlLWNvbG9yOiAkZGFyay1ncmF5O1xuJGtleXN0cm9rZS1mb250OiAkZm9udC1mYW1pbHktbW9ub3NwYWNlO1xuJGtleXN0cm9rZS1jb2xvcjogJGJsYWNrO1xuJGtleXN0cm9rZS1iYWNrZ3JvdW5kOiAkbGlnaHQtZ3JheTtcbiRrZXlzdHJva2UtcGFkZGluZzogcmVtLWNhbGMoMiA0IDApO1xuJGtleXN0cm9rZS1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGFiYnItdW5kZXJsaW5lOiAxcHggZG90dGVkICRibGFjaztcblxuLy8gNS4gVHlwb2dyYXBoeSBIZWxwZXJzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGxlYWQtZm9udC1zaXplOiAkZ2xvYmFsLWZvbnQtc2l6ZSAqIDEuMjU7XG4kbGVhZC1saW5laGVpZ2h0OiAxLjY7XG4kc3ViaGVhZGVyLWxpbmVoZWlnaHQ6IDEuNDtcbiRzdWJoZWFkZXItY29sb3I6ICRkYXJrLWdyYXk7XG4kc3ViaGVhZGVyLWZvbnQtd2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ub3JtYWw7XG4kc3ViaGVhZGVyLW1hcmdpbi10b3A6IDAuMnJlbTtcbiRzdWJoZWFkZXItbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuJHN0YXQtZm9udC1zaXplOiAyLjVyZW07XG5cbi8vIDYuIEFiaWRlXG4vLyAtLS0tLS0tLVxuXG4kYWJpZGUtaW5wdXRzOiB0cnVlO1xuJGFiaWRlLWxhYmVsczogdHJ1ZTtcbiRpbnB1dC1iYWNrZ3JvdW5kLWludmFsaWQ6ICRhbGVydC1jb2xvcjtcbiRmb3JtLWxhYmVsLWNvbG9yLWludmFsaWQ6ICRhbGVydC1jb2xvcjtcbiRpbnB1dC1lcnJvci1jb2xvcjogJGFsZXJ0LWNvbG9yO1xuJGlucHV0LWVycm9yLWZvbnQtc2l6ZTogcmVtLWNhbGMoMTIpO1xuJGlucHV0LWVycm9yLWZvbnQtd2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ib2xkO1xuXG4vLyA3LiBBY2NvcmRpb25cbi8vIC0tLS0tLS0tLS0tLVxuXG4kYWNjb3JkaW9uLWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRhY2NvcmRpb24tcGx1c21pbnVzOiB0cnVlO1xuJGFjY29yZGlvbi1pdGVtLWNvbG9yOiBmb3JlZ3JvdW5kKCRhY2NvcmRpb24tYmFja2dyb3VuZCwgJHByaW1hcnktY29sb3IpO1xuJGFjY29yZGlvbi1pdGVtLWJhY2tncm91bmQtaG92ZXI6ICRsaWdodC1ncmF5O1xuJGFjY29yZGlvbi1pdGVtLXBhZGRpbmc6IDEuMjVyZW0gMXJlbTtcbiRhY2NvcmRpb24tY29udGVudC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kYWNjb3JkaW9uLWNvbnRlbnQtYm9yZGVyOiAxcHggc29saWQgJGxpZ2h0LWdyYXk7XG4kYWNjb3JkaW9uLWNvbnRlbnQtY29sb3I6IGZvcmVncm91bmQoJGFjY29yZGlvbi1iYWNrZ3JvdW5kLCAkcHJpbWFyeS1jb2xvcik7XG4kYWNjb3JkaW9uLWNvbnRlbnQtcGFkZGluZzogMXJlbTtcblxuLy8gOC4gQWNjb3JkaW9uIE1lbnVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tXG5cbiRhY2NvcmRpb25tZW51LWFycm93czogdHJ1ZTtcbiRhY2NvcmRpb25tZW51LWFycm93LWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcblxuLy8gOS4gQmFkZ2Vcbi8vIC0tLS0tLS0tXG5cbiRiYWRnZS1iYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvcjtcbiRiYWRnZS1jb2xvcjogZm9yZWdyb3VuZCgkYmFkZ2UtYmFja2dyb3VuZCk7XG4kYmFkZ2UtcGFkZGluZzogMC4zZW07XG4kYmFkZ2UtbWlud2lkdGg6IDIuMWVtO1xuJGJhZGdlLWZvbnQtc2l6ZTogMC42cmVtO1xuXG4vLyAxMC4gQnJlYWRjcnVtYnNcbi8vIC0tLS0tLS0tLS0tLS0tLVxuXG4kYnJlYWRjcnVtYnMtbWFyZ2luOiAwIDAgJGdsb2JhbC1tYXJnaW4gMDtcbiRicmVhZGNydW1icy1pdGVtLWZvbnQtc2l6ZTogcmVtLWNhbGMoMTEpO1xuJGJyZWFkY3J1bWJzLWl0ZW0tY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuJGJyZWFkY3J1bWJzLWl0ZW0tY29sb3ItY3VycmVudDogJGJsYWNrO1xuJGJyZWFkY3J1bWJzLWl0ZW0tY29sb3ItZGlzYWJsZWQ6ICRtZWRpdW0tZ3JheTtcbiRicmVhZGNydW1icy1pdGVtLW1hcmdpbjogMC43NXJlbTtcbiRicmVhZGNydW1icy1pdGVtLXVwcGVyY2FzZTogdHJ1ZTtcbiRicmVhZGNydW1icy1pdGVtLXNsYXNoOiB0cnVlO1xuXG4vLyAxMS4gQnV0dG9uXG4vLyAtLS0tLS0tLS0tXG5cbiRidXR0b24tcGFkZGluZzogMC44NWVtIDFlbTtcbiRidXR0b24tbWFyZ2luOiAwIDAgJGdsb2JhbC1tYXJnaW4gMDtcbiRidXR0b24tZmlsbDogc29saWQ7XG4kYnV0dG9uLWJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuJGJ1dHRvbi1iYWNrZ3JvdW5kLWhvdmVyOiBzY2FsZS1jb2xvcigkYnV0dG9uLWJhY2tncm91bmQsICRsaWdodG5lc3M6IC0xNSUpO1xuJGJ1dHRvbi1jb2xvcjogI2ZmZjtcbiRidXR0b24tY29sb3ItYWx0OiAjMDAwO1xuJGJ1dHRvbi1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGJ1dHRvbi1zaXplczogKFxuICB0aW55OiAwLjZyZW0sXG4gIHNtYWxsOiAwLjc1cmVtLFxuICBkZWZhdWx0OiAwLjlyZW0sXG4gIGxhcmdlOiAxLjI1cmVtLFxuKTtcbiRidXR0b24tb3BhY2l0eS1kaXNhYmxlZDogMC4yNTtcblxuLy8gMTIuIEJ1dHRvbiBHcm91cFxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuXG4kYnV0dG9uZ3JvdXAtbWFyZ2luOiAxcmVtO1xuJGJ1dHRvbmdyb3VwLXNwYWNpbmc6IDFweDtcbiRidXR0b25ncm91cC1jaGlsZC1zZWxlY3RvcjogJy5idXR0b24nO1xuJGJ1dHRvbmdyb3VwLWV4cGFuZC1tYXg6IDY7XG5cbi8vIDEzLiBDYWxsb3V0XG4vLyAtLS0tLS0tLS0tLVxuXG4kY2FsbG91dC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kY2FsbG91dC1iYWNrZ3JvdW5kLWZhZGU6IDg1JTtcbiRjYWxsb3V0LWJvcmRlcjogMXB4IHNvbGlkIHJnYmEoJGJsYWNrLCAwLjI1KTtcbiRjYWxsb3V0LW1hcmdpbjogMCAwIDFyZW0gMDtcbiRjYWxsb3V0LXBhZGRpbmc6IDFyZW07XG4kY2FsbG91dC1mb250LWNvbG9yOiAkYm9keS1mb250LWNvbG9yO1xuJGNhbGxvdXQtZm9udC1jb2xvci1hbHQ6ICRib2R5LWJhY2tncm91bmQ7XG4kY2FsbG91dC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGNhbGxvdXQtbGluay10aW50OiAzMCU7XG5cbi8vIDE0LiBDbG9zZSBCdXR0b25cbi8vIC0tLS0tLS0tLS0tLS0tLS1cblxuJGNsb3NlYnV0dG9uLXBvc2l0aW9uOiByaWdodCB0b3A7XG4kY2xvc2VidXR0b24tb2Zmc2V0LWhvcml6b250YWw6IDFyZW07XG4kY2xvc2VidXR0b24tb2Zmc2V0LXZlcnRpY2FsOiAwLjVyZW07XG4kY2xvc2VidXR0b24tc2l6ZTogMmVtO1xuJGNsb3NlYnV0dG9uLWxpbmVoZWlnaHQ6IDE7XG4kY2xvc2VidXR0b24tY29sb3I6ICRkYXJrLWdyYXk7XG4kY2xvc2VidXR0b24tY29sb3ItaG92ZXI6ICRibGFjaztcblxuLy8gMTUuIERyaWxsZG93blxuLy8gLS0tLS0tLS0tLS0tLVxuXG4kZHJpbGxkb3duLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjE1cyBsaW5lYXI7XG4kZHJpbGxkb3duLWFycm93czogdHJ1ZTtcbiRkcmlsbGRvd24tYXJyb3ctY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuJGRyaWxsZG93bi1iYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbi8vIDE2LiBEcm9wZG93blxuLy8gLS0tLS0tLS0tLS0tXG5cbiRkcm9wZG93bi1wYWRkaW5nOiAxcmVtO1xuJGRyb3Bkb3duLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRkcm9wZG93bi1mb250LXNpemU6IDE2cmVtO1xuJGRyb3Bkb3duLXdpZHRoOiAzMDBweDtcbiRkcm9wZG93bi1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGRyb3Bkb3duLXNpemVzOiAoXG4gIHRpbnk6IDEwMHB4LFxuICBzbWFsbDogMjAwcHgsXG4gIGxhcmdlOiA0MDBweCxcbik7XG5cbi8vIDE3LiBEcm9wZG93biBNZW51XG4vLyAtLS0tLS0tLS0tLS0tLS0tLVxuXG4kZHJvcGRvd25tZW51LWFycm93czogdHJ1ZTtcbiRkcm9wZG93bm1lbnUtYXJyb3ctY29sb3I6ICRhbmNob3ItY29sb3I7XG4kZHJvcGRvd25tZW51LW1pbi13aWR0aDogMjAwcHg7XG4kZHJvcGRvd25tZW51LWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRkcm9wZG93bm1lbnUtYm9yZGVyOiAxcHggc29saWQgJG1lZGl1bS1ncmF5O1xuXG4vLyAxOC4gRmxleCBWaWRlb1xuLy8gLS0tLS0tLS0tLS0tLS1cblxuJGZsZXh2aWRlby1tYXJnaW4tYm90dG9tOiByZW0tY2FsYygxNik7XG4kZmxleHZpZGVvLXJhdGlvOiA0IGJ5IDM7XG4kZmxleHZpZGVvLXJhdGlvLXdpZGVzY3JlZW46IDE2IGJ5IDk7XG5cbi8vIDE5LiBGb3Jtc1xuLy8gLS0tLS0tLS0tXG5cbiRmaWVsZHNldC1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kZmllbGRzZXQtcGFkZGluZzogcmVtLWNhbGMoMjApO1xuJGZpZWxkc2V0LW1hcmdpbjogcmVtLWNhbGMoMTggMCk7XG4kbGVnZW5kLXBhZGRpbmc6IHJlbS1jYWxjKDAgMyk7XG4kZm9ybS1zcGFjaW5nOiByZW0tY2FsYygxNik7XG4kaGVscHRleHQtY29sb3I6ICMzMzM7XG4kaGVscHRleHQtZm9udC1zaXplOiByZW0tY2FsYygxMyk7XG4kaGVscHRleHQtZm9udC1zdHlsZTogaXRhbGljO1xuJGlucHV0LXByZWZpeC1jb2xvcjogJGJsYWNrO1xuJGlucHV0LXByZWZpeC1iYWNrZ3JvdW5kOiAkbGlnaHQtZ3JheTtcbiRpbnB1dC1wcmVmaXgtYm9yZGVyOiAxcHggc29saWQgJG1lZGl1bS1ncmF5O1xuJGlucHV0LXByZWZpeC1wYWRkaW5nOiAxcmVtO1xuJGZvcm0tbGFiZWwtY29sb3I6ICRibGFjaztcbiRmb3JtLWxhYmVsLWZvbnQtc2l6ZTogcmVtLWNhbGMoMTQpO1xuJGZvcm0tbGFiZWwtZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LW5vcm1hbDtcbiRmb3JtLWxhYmVsLWxpbmUtaGVpZ2h0OiAxLjg7XG4kc2VsZWN0LWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRzZWxlY3QtdHJpYW5nbGUtY29sb3I6ICMzMzM7XG4kc2VsZWN0LXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kaW5wdXQtY29sb3I6ICRibGFjaztcbiRpbnB1dC1mb250LWZhbWlseTogaW5oZXJpdDtcbiRpbnB1dC1mb250LXNpemU6IHJlbS1jYWxjKDE2KTtcbiRpbnB1dC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kaW5wdXQtYmFja2dyb3VuZC1mb2N1czogJHdoaXRlO1xuJGlucHV0LWJhY2tncm91bmQtZGlzYWJsZWQ6ICRsaWdodC1ncmF5O1xuJGlucHV0LWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRpbnB1dC1ib3JkZXItZm9jdXM6IDFweCBzb2xpZCAkZGFyay1ncmF5O1xuJGlucHV0LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAwLjEpO1xuJGlucHV0LXNoYWRvdy1mb2N1czogMCAwIDVweCAkbWVkaXVtLWdyYXk7XG4kaW5wdXQtY3Vyc29yLWRpc2FibGVkOiBkZWZhdWx0O1xuJGlucHV0LXRyYW5zaXRpb246IGJveC1zaGFkb3cgMC41cywgYm9yZGVyLWNvbG9yIDAuMjVzIGVhc2UtaW4tb3V0O1xuJGlucHV0LW51bWJlci1zcGlubmVyczogdHJ1ZTtcbiRpbnB1dC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAyMC4gTGFiZWxcbi8vIC0tLS0tLS0tLVxuXG4kbGFiZWwtYmFja2dyb3VuZDogJHByaW1hcnktY29sb3I7XG4kbGFiZWwtY29sb3I6IGZvcmVncm91bmQoJGxhYmVsLWJhY2tncm91bmQpO1xuJGxhYmVsLWZvbnQtc2l6ZTogMC44cmVtO1xuJGxhYmVsLXBhZGRpbmc6IDAuMzMzMzNyZW0gMC41cmVtO1xuJGxhYmVsLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG5cbi8vIDIxLiBNZWRpYSBPYmplY3Rcbi8vIC0tLS0tLS0tLS0tLS0tLS1cblxuJG1lZGlhb2JqZWN0LW1hcmdpbi1ib3R0b206ICRnbG9iYWwtbWFyZ2luO1xuJG1lZGlhb2JqZWN0LXNlY3Rpb24tcGFkZGluZzogJGdsb2JhbC1wYWRkaW5nO1xuJG1lZGlhb2JqZWN0LWltYWdlLXdpZHRoLXN0YWNrZWQ6IDEwMCU7XG5cbi8vIDIyLiBNZW51XG4vLyAtLS0tLS0tLVxuXG4kbWVudS1tYXJnaW46IDA7XG4kbWVudS1tYXJnaW4tbmVzdGVkOiAxcmVtO1xuJG1lbnUtaXRlbS1wYWRkaW5nOiAwLjdyZW0gMXJlbTtcbiRtZW51LWljb24tc3BhY2luZzogMC4yNXJlbTtcbiRtZW51LWV4cGFuZC1tYXg6IDY7XG5cbi8vIDIzLiBPZmYtY2FudmFzXG4vLyAtLS0tLS0tLS0tLS0tLVxuXG4kb2ZmY2FudmFzLXNpemU6IDI1MHB4O1xuJG9mZmNhbnZhcy1iYWNrZ3JvdW5kOiAkbGlnaHQtZ3JheTtcbiRvZmZjYW52YXMtemluZGV4OiAtMTtcbiRvZmZjYW52YXMtdHJhbnNpdGlvbi1sZW5ndGg6IDAuNXM7XG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tdGltaW5nOiBlYXNlO1xuJG9mZmNhbnZhcy1maXhlZC1yZXZlYWw6IHRydWU7XG4kb2ZmY2FudmFzLWV4aXQtYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIDAuMjUpO1xuJG1haW5jb250ZW50LWNsYXNzOiAnb2ZmLWNhbnZhcy1jb250ZW50JztcbiRtYWluY29udGVudC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoJGJsYWNrLCAwLjUpO1xuXG4vLyAyNC4gT3JiaXRcbi8vIC0tLS0tLS0tLVxuXG4kb3JiaXQtYnVsbGV0LWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRvcmJpdC1idWxsZXQtYmFja2dyb3VuZC1hY3RpdmU6ICRkYXJrLWdyYXk7XG4kb3JiaXQtYnVsbGV0LWRpYW1ldGVyOiAxLjJyZW07XG4kb3JiaXQtYnVsbGV0LW1hcmdpbjogMC4xcmVtO1xuJG9yYml0LWJ1bGxldC1tYXJnaW4tdG9wOiAwLjhyZW07XG4kb3JiaXQtYnVsbGV0LW1hcmdpbi1ib3R0b206IDAuOHJlbTtcbiRvcmJpdC1jYXB0aW9uLWJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAwLjUpO1xuJG9yYml0LWNhcHRpb24tcGFkZGluZzogMXJlbTtcbiRvcmJpdC1jb250cm9sLWJhY2tncm91bmQtaG92ZXI6IHJnYmEoJGJsYWNrLCAwLjUpO1xuJG9yYml0LWNvbnRyb2wtcGFkZGluZzogMXJlbTtcbiRvcmJpdC1jb250cm9sLXppbmRleDogMTA7XG5cbi8vIDI1LiBQYWdpbmF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLVxuXG4kcGFnaW5hdGlvbi1mb250LXNpemU6IHJlbS1jYWxjKDE0KTtcbiRwYWdpbmF0aW9uLW1hcmdpbi1ib3R0b206ICRnbG9iYWwtbWFyZ2luO1xuJHBhZ2luYXRpb24taXRlbS1jb2xvcjogJGJsYWNrO1xuJHBhZ2luYXRpb24taXRlbS1wYWRkaW5nOiByZW0tY2FsYygzIDEwKTtcbiRwYWdpbmF0aW9uLWl0ZW0tc3BhY2luZzogcmVtLWNhbGMoMSk7XG4kcGFnaW5hdGlvbi1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJHBhZ2luYXRpb24taXRlbS1iYWNrZ3JvdW5kLWhvdmVyOiAkbGlnaHQtZ3JheTtcbiRwYWdpbmF0aW9uLWl0ZW0tYmFja2dyb3VuZC1jdXJyZW50OiAkcHJpbWFyeS1jb2xvcjtcbiRwYWdpbmF0aW9uLWl0ZW0tY29sb3ItY3VycmVudDogZm9yZWdyb3VuZCgkcGFnaW5hdGlvbi1pdGVtLWJhY2tncm91bmQtY3VycmVudCk7XG4kcGFnaW5hdGlvbi1pdGVtLWNvbG9yLWRpc2FibGVkOiAkbWVkaXVtLWdyYXk7XG4kcGFnaW5hdGlvbi1lbGxpcHNpcy1jb2xvcjogJGJsYWNrO1xuJHBhZ2luYXRpb24tbW9iaWxlLWl0ZW1zOiBmYWxzZTtcbiRwYWdpbmF0aW9uLWFycm93czogdHJ1ZTtcblxuLy8gMjYuIFByb2dyZXNzIEJhclxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAxcmVtO1xuJHByb2dyZXNzLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRwcm9ncmVzcy1tYXJnaW4tYm90dG9tOiAkZ2xvYmFsLW1hcmdpbjtcbiRwcm9ncmVzcy1tZXRlci1iYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvcjtcbiRwcm9ncmVzcy1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAyNy4gUmV2ZWFsXG4vLyAtLS0tLS0tLS0tXG5cbiRyZXZlYWwtYmFja2dyb3VuZDogJHdoaXRlO1xuJHJldmVhbC13aWR0aDogNjAwcHg7XG4kcmV2ZWFsLW1heC13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRyZXZlYWwtb2Zmc2V0OiByZW0tY2FsYygxMDApO1xuJHJldmVhbC1wYWRkaW5nOiAkZ2xvYmFsLXBhZGRpbmc7XG4kcmV2ZWFsLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRyZXZlYWwtcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcbiRyZXZlYWwtemluZGV4OiAxMDA1O1xuJHJldmVhbC1vdmVybGF5LWJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAwLjQ1KTtcblxuLy8gMjguIFNsaWRlclxuLy8gLS0tLS0tLS0tLVxuXG4kc2xpZGVyLWhlaWdodDogMC41cmVtO1xuJHNsaWRlci13aWR0aC12ZXJ0aWNhbDogJHNsaWRlci1oZWlnaHQ7XG4kc2xpZGVyLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xuJHNsaWRlci1maWxsLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRzbGlkZXItaGFuZGxlLWhlaWdodDogMS40cmVtO1xuJHNsaWRlci1oYW5kbGUtd2lkdGg6IDEuNHJlbTtcbiRzbGlkZXItaGFuZGxlLWJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuJHNsaWRlci1vcGFjaXR5LWRpc2FibGVkOiAwLjI1O1xuJHNsaWRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJHNsaWRlci10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcblxuLy8gMjkuIFN3aXRjaFxuLy8gLS0tLS0tLS0tLVxuXG4kc3dpdGNoLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRzd2l0Y2gtYmFja2dyb3VuZC1hY3RpdmU6ICRwcmltYXJ5LWNvbG9yO1xuJHN3aXRjaC1oZWlnaHQ6IDJyZW07XG4kc3dpdGNoLWhlaWdodC10aW55OiAxLjVyZW07XG4kc3dpdGNoLWhlaWdodC1zbWFsbDogMS43NXJlbTtcbiRzd2l0Y2gtaGVpZ2h0LWxhcmdlOiAyLjVyZW07XG4kc3dpdGNoLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kc3dpdGNoLW1hcmdpbjogJGdsb2JhbC1tYXJnaW47XG4kc3dpdGNoLXBhZGRsZS1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kc3dpdGNoLXBhZGRsZS1vZmZzZXQ6IDAuMjVyZW07XG4kc3dpdGNoLXBhZGRsZS1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJHN3aXRjaC1wYWRkbGUtdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2Utb3V0O1xuXG4vLyAzMC4gVGFibGVcbi8vIC0tLS0tLS0tLVxuXG4kdGFibGUtYmFja2dyb3VuZDogJHdoaXRlO1xuJHRhYmxlLWNvbG9yLXNjYWxlOiA1JTtcbiR0YWJsZS1ib3JkZXI6IDFweCBzb2xpZCBzbWFydC1zY2FsZSgkdGFibGUtYmFja2dyb3VuZCwgJHRhYmxlLWNvbG9yLXNjYWxlKTtcbiR0YWJsZS1wYWRkaW5nOiByZW0tY2FsYyg4IDEwIDEwKTtcbiR0YWJsZS1ob3Zlci1zY2FsZTogMiU7XG4kdGFibGUtcm93LWhvdmVyOiBkYXJrZW4oJHRhYmxlLWJhY2tncm91bmQsICR0YWJsZS1ob3Zlci1zY2FsZSk7XG4kdGFibGUtcm93LXN0cmlwZS1ob3ZlcjogZGFya2VuKCR0YWJsZS1iYWNrZ3JvdW5kLCAkdGFibGUtY29sb3Itc2NhbGUgKyAkdGFibGUtaG92ZXItc2NhbGUpO1xuJHRhYmxlLXN0cmlwZWQtYmFja2dyb3VuZDogc21hcnQtc2NhbGUoJHRhYmxlLWJhY2tncm91bmQsICR0YWJsZS1jb2xvci1zY2FsZSk7XG4kdGFibGUtc3RyaXBlOiBldmVuO1xuJHRhYmxlLWhlYWQtYmFja2dyb3VuZDogc21hcnQtc2NhbGUoJHRhYmxlLWJhY2tncm91bmQsICR0YWJsZS1jb2xvci1zY2FsZSAvIDIpO1xuJHRhYmxlLWZvb3QtYmFja2dyb3VuZDogc21hcnQtc2NhbGUoJHRhYmxlLWJhY2tncm91bmQsICR0YWJsZS1jb2xvci1zY2FsZSk7XG4kdGFibGUtaGVhZC1mb250LWNvbG9yOiAkYm9keS1mb250LWNvbG9yO1xuJHNob3ctaGVhZGVyLWZvci1zdGFja2VkOiBmYWxzZTtcblxuLy8gMzEuIFRhYnNcbi8vIC0tLS0tLS0tXG5cbiR0YWItbWFyZ2luOiAwO1xuJHRhYi1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kdGFiLWJhY2tncm91bmQtYWN0aXZlOiAkbGlnaHQtZ3JheTtcbiR0YWItYm9yZGVyOiAkbGlnaHQtZ3JheTtcbiR0YWItaXRlbS1jb2xvcjogZm9yZWdyb3VuZCgkdGFiLWJhY2tncm91bmQsICRwcmltYXJ5LWNvbG9yKTtcbiR0YWItaXRlbS1iYWNrZ3JvdW5kLWhvdmVyOiAkd2hpdGU7XG4kdGFiLWl0ZW0tcGFkZGluZzogMS4yNXJlbSAxLjVyZW07XG4kdGFiLWV4cGFuZC1tYXg6IDY7XG4kdGFiLWNvbnRlbnQtYmFja2dyb3VuZDogJHdoaXRlO1xuJHRhYi1jb250ZW50LWJvcmRlcjogJGxpZ2h0LWdyYXk7XG4kdGFiLWNvbnRlbnQtY29sb3I6IGZvcmVncm91bmQoJHRhYi1iYWNrZ3JvdW5kLCAkcHJpbWFyeS1jb2xvcik7XG4kdGFiLWNvbnRlbnQtcGFkZGluZzogMXJlbTtcblxuLy8gMzIuIFRodW1ibmFpbFxuLy8gLS0tLS0tLS0tLS0tLVxuXG4kdGh1bWJuYWlsLWJvcmRlcjogc29saWQgNHB4ICR3aGl0ZTtcbiR0aHVtYm5haWwtbWFyZ2luLWJvdHRvbTogJGdsb2JhbC1tYXJnaW47XG4kdGh1bWJuYWlsLXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoJGJsYWNrLCAwLjIpO1xuJHRodW1ibmFpbC1zaGFkb3ctaG92ZXI6IDAgMCA2cHggMXB4IHJnYmEoJHByaW1hcnktY29sb3IsIDAuNSk7XG4kdGh1bWJuYWlsLXRyYW5zaXRpb246IGJveC1zaGFkb3cgMjAwbXMgZWFzZS1vdXQ7XG4kdGh1bWJuYWlsLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG5cbi8vIDMzLiBUaXRsZSBCYXJcbi8vIC0tLS0tLS0tLS0tLS1cblxuJHRpdGxlYmFyLWJhY2tncm91bmQ6ICRibGFjaztcbiR0aXRsZWJhci1jb2xvcjogJHdoaXRlO1xuJHRpdGxlYmFyLXBhZGRpbmc6IDAuNXJlbTtcbiR0aXRsZWJhci10ZXh0LWZvbnQtd2VpZ2h0OiBib2xkO1xuJHRpdGxlYmFyLWljb24tY29sb3I6ICR3aGl0ZTtcbiR0aXRsZWJhci1pY29uLWNvbG9yLWhvdmVyOiAkbWVkaXVtLWdyYXk7XG4kdGl0bGViYXItaWNvbi1zcGFjaW5nOiAwLjI1cmVtO1xuXG4vLyAzNC4gVG9vbHRpcFxuLy8gLS0tLS0tLS0tLS1cblxuJHRvb2x0aXAtYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuJHRvb2x0aXAtY29sb3I6ICR3aGl0ZTtcbiR0b29sdGlwLXBhZGRpbmc6IDAuNzVyZW07XG4kdG9vbHRpcC1mb250LXNpemU6ICRzbWFsbC1mb250LXNpemU7XG4kdG9vbHRpcC1waXAtd2lkdGg6IDAuNzVyZW07XG4kdG9vbHRpcC1waXAtaGVpZ2h0OiAkdG9vbHRpcC1waXAtd2lkdGggKiAwLjg2NjtcbiR0b29sdGlwLXBpcC1vZmZzZXQ6IDEuMjVyZW07XG4kdG9vbHRpcC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAzNS4gVG9wIEJhclxuLy8gLS0tLS0tLS0tLS1cblxuJHRvcGJhci1wYWRkaW5nOiAwLjVyZW07XG4kdG9wYmFyLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xuJHRvcGJhci1saW5rLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiR0b3BiYXItaW5wdXQtd2lkdGg6IDIwMHB4O1xuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZnVuY3Rpb25zXG4vLy8vXG5cbi8vLyBDcmVhdGVzIGEgQ1NTIHRyaWFuZ2xlLCB3aGljaCBjYW4gYmUgdXNlZCBmb3IgZHJvcGRvd24gYXJyb3dzLCBkcm9wZG93biBwaXBzLCBhbmQgbW9yZS4gVXNlIHRoaXMgbWl4aW4gaW5zaWRlIGEgYCY6OmJlZm9yZWAgb3IgYCY6OmFmdGVyYCBzZWxlY3RvciwgdG8gYXR0YWNoIHRoZSB0cmlhbmdsZSB0byBhbiBleGlzdGluZyBlbGVtZW50LlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR0cmlhbmdsZS1zaXplIC0gV2lkdGggb2YgdGhlIHRyaWFuZ2xlLlxuLy8vIEBwYXJhbSB7Q29sb3J9ICR0cmlhbmdsZS1jb2xvciAtIENvbG9yIG9mIHRoZSB0cmlhbmdsZS5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICR0cmlhbmdsZS1kaXJlY3Rpb24gLSBEaXJlY3Rpb24gdGhlIHRyaWFuZ2xlIHBvaW50cy4gQ2FuIGJlIGB1cGAsIGByaWdodGAsIGBkb3duYCwgb3IgYGxlZnRgLlxuQG1peGluIGNzcy10cmlhbmdsZShcbiAgJHRyaWFuZ2xlLXNpemUsXG4gICR0cmlhbmdsZS1jb2xvcixcbiAgJHRyaWFuZ2xlLWRpcmVjdGlvblxuKSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgYm9yZGVyOiBpbnNldCAkdHJpYW5nbGUtc2l6ZTtcblxuICBAaWYgKCR0cmlhbmdsZS1kaXJlY3Rpb24gPT0gZG93bikge1xuICAgIGJvcmRlci1jb2xvcjogJHRyaWFuZ2xlLWNvbG9yIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG4gIH1cbiAgQGlmICgkdHJpYW5nbGUtZGlyZWN0aW9uID09IHVwKSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkdHJpYW5nbGUtY29sb3I7XG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXRvcC13aWR0aDogMDtcbiAgfVxuICBAaWYgKCR0cmlhbmdsZS1kaXJlY3Rpb24gPT0gcmlnaHQpIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR0cmlhbmdsZS1jb2xvcjtcbiAgICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwO1xuICB9XG4gIEBpZiAoJHRyaWFuZ2xlLWRpcmVjdGlvbiA9PSBsZWZ0KSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAkdHJpYW5nbGUtY29sb3IgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItbGVmdC13aWR0aDogMDtcbiAgfVxufVxuXG4vLy8gQ3JlYXRlcyBhIG1lbnUgaWNvbiB3aXRoIGEgc2V0IHdpZHRoLCBoZWlnaHQsIG51bWJlciBvZiBiYXJzLCBhbmQgY29sb3JzLiBUaGUgbWl4aW4gdXNlcyB0aGUgaGVpZ2h0IG9mIHRoZSBpY29uIGFuZCB0aGUgd2VpZ2h0IG9mIHRoZSBiYXJzIHRvIGRldGVybWluZSBzcGFjaW5nLiA8ZGl2IGNsYXNzPVwiZG9jcy1leGFtcGxlLWJ1cmdlclwiPjwvZGl2PlxuLy8vXG4vLy8gQHBhcmFtIHtDb2xvcn0gJGNvbG9yIFskYmxhY2tdIC0gQ29sb3IgdG8gdXNlIGZvciB0aGUgaWNvbi5cbi8vLyBAcGFyYW0ge0NvbG9yfSAkY29sb3ItaG92ZXIgWyRkYXJrLWdyYXldIC0gQ29sb3IgdG8gdXNlIHdoZW4gdGhlIGljb24gaXMgaG92ZXJlZCBvdmVyLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggWzIwcHhdIC0gV2lkdGggb2YgdGhlIGljb24uXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRoZWlnaHQgWzE2cHhdIC0gSGVpZ2h0IG9mIHRoZSBpY29uLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2VpZ2h0IFsycHhdIC0gSGVpZ2h0IG9mIGluZGl2aWR1YWwgYmFycyBpbiB0aGUgaWNvbi5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGJhcnMgWzNdIC0gTnVtYmVyIG9mIGJhcnMgaW4gdGhlIGljb24uXG5AbWl4aW4gaGFtYnVyZ2VyKFxuICAkY29sb3I6ICRibGFjayxcbiAgJGNvbG9yLWhvdmVyOiAkZGFyay1ncmF5LFxuICAkd2lkdGg6IDIwcHgsXG4gICRoZWlnaHQ6IDE2cHgsXG4gICR3ZWlnaHQ6IDJweCxcbiAgJGJhcnM6IDNcbikge1xuICAvLyBib3gtc2hhZG93IENTUyBvdXRwdXRcbiAgJHNoYWRvdzogKCk7XG4gICRob3Zlci1zaGFkb3c6ICgpO1xuXG4gIC8vIFNwYWNpbmcgYmV0d2VlbiBiYXJzIGlzIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlIHRvdGFsIGhlaWdodCBvZiB0aGUgaWNvbiBhbmQgdGhlIHdlaWdodCBvZiBlYWNoIGJhclxuICAkc3BhY2luZzogKCRoZWlnaHQgLSAoJHdlaWdodCAqICRiYXJzKSkgLyAoJGJhcnMgLSAxKTtcblxuICBAaWYgdW5pdCgkc3BhY2luZykgPT0gJ3B4JyB7XG4gICAgJHNwYWNpbmc6IGZsb29yKCRzcGFjaW5nKTtcbiAgfVxuXG4gIC8vIEljb24gY29udGFpbmVyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiAkd2lkdGg7XG4gIGhlaWdodDogJGhlaWdodDtcblxuICAvLyBJY29uIGJhcnNcbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6ICR3ZWlnaHQ7XG4gICAgYmFja2dyb3VuZDogJGNvbG9yO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuXG4gICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkYmFycyB7XG4gICAgICAkb2Zmc2V0OiAoJHdlaWdodCArICRzcGFjaW5nKSAqICgkaSAtIDEpO1xuICAgICAgJHNoYWRvdzogYXBwZW5kKCRzaGFkb3csIDAgJG9mZnNldCAwICRjb2xvciwgY29tbWEpO1xuICAgIH1cblxuICAgIGJveC1zaGFkb3c6ICRzaGFkb3c7XG4gIH1cblxuICAvLyBIb3ZlciBzdGF0ZVxuICBAaWYgJGNvbG9yLWhvdmVyIHtcbiAgICAvLyBHZW5lcmF0ZSBDU1NcbiAgICBAZm9yICRpIGZyb20gMiB0aHJvdWdoICRiYXJzIHtcbiAgICAgICRvZmZzZXQ6ICgkd2VpZ2h0ICsgJHNwYWNpbmcpICogKCRpIC0gMSk7XG4gICAgICAkaG92ZXItc2hhZG93OiBhcHBlbmQoJGhvdmVyLXNoYWRvdywgMCAkb2Zmc2V0IDAgJGNvbG9yLWhvdmVyLCBjb21tYSk7XG4gICAgfVxuXG4gICAgJjpob3Zlcjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJGNvbG9yLWhvdmVyO1xuICAgICAgYm94LXNoYWRvdzogJGhvdmVyLXNoYWRvdztcbiAgICB9XG4gIH1cbn1cblxuLy8vIEFkZHMgYSBkb3dud2FyZC1mYWNpbmcgdHJpYW5nbGUgYXMgYSBiYWNrZ3JvdW5kIGltYWdlIHRvIGFuIGVsZW1lbnQuIFRoZSBpbWFnZSBpcyBmb3JtYXR0ZWQgYXMgYW4gU1ZHLCBtYWtpbmcgaXQgZWFzeSB0byBjaGFuZ2UgdGhlIGNvbG9yLiBCZWNhdXNlIEludGVybmV0IEV4cGxvcmVyIGRvZXNuJ3Qgc3VwcG9ydCBlbmNvZGVkIFNWR3MgYXMgYmFja2dyb3VuZCBpbWFnZXMsIGEgUE5HIGZhbGxiYWNrIGlzIGFsc28gaW5jbHVkZWQuXG4vLy8gVGhlcmUgYXJlIHR3byBQTkcgZmFsbGJhY2tzOiBhIGJsYWNrIHRyaWFuZ2xlIGFuZCBhIHdoaXRlIHRyaWFuZ2xlLiBUaGUgb25lIHVzZWQgZGVwZW5kcyBvbiB0aGUgbGlnaHRuZXNzIG9mIHRoZSBpbnB1dCBjb2xvci5cbi8vL1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvciBbJGJsYWNrXSAtIENvbG9yIHRvIHVzZSBmb3IgdGhlIHRyaWFuZ2xlLlxuQG1peGluIGJhY2tncm91bmQtdHJpYW5nbGUoJGNvbG9yOiAkYmxhY2spIHtcbiAgJHJnYjogJ3JnYiUyOCN7cm91bmQocmVkKCRjb2xvcikpfSwgI3tyb3VuZChncmVlbigkY29sb3IpKX0sICN7cm91bmQoYmx1ZSgkY29sb3IpKX0lMjknO1xuXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2ZXJzaW9uPScxLjEnIHdpZHRoPSczMicgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDMyIDI0Jz48cG9seWdvbiBwb2ludHM9JzAsMCAzMiwwIDE2LDI0JyBzdHlsZT0nZmlsbDogI3skcmdifSc+PC9wb2x5Z29uPjwvc3ZnPlwiKTtcblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjBcXDApIHtcbiAgICBAaWYgbGlnaHRuZXNzKCRjb2xvcikgPCA2MCUge1xuICAgICAgLy8gV2hpdGUgdHJpYW5nbGVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFZQ0FZQUFBQ2JVLzgwQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFJcEpSRUZVZU5yRWtja05nREFNQkJmUmtFdDBPYlJCQmRzR1hVRGdtUWZLNFhoSDJtOGN6UUFBeTI3UjN0c3c0UWZlMng4dU9PNm9ZTGI2R2xPb3IzR0Yrc3dVUkFPbVVKK1J3dEVKczlXdlRHRVl4QlhxSTFNUUFaaENmVVFLUnpETVZqK1R3ckFJVjZqdlNVRWtZQXIxTFNrY3lUQmIvVitLWWZYN3hBZXVzcTNzTER0R0gza0VHQUNQV0lmbE5aZmhSUUFBQUFCSlJVNUVya0pnZ2c9PScpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAvLyBCbGFjayB0cmlhbmdsZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQVlDQVlBQUFDYlUvODBBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQU1CSlJFRlVlTnJFbGxzT2hDQU1SVnN6QzlJbHpVN0tDbVZIVEpzb01XWU1VdHB5djlCZ2J1WFFCNVpTZGdCWVlZNHljZ0Jpdms4S1lGc1FNZk1pVFRCUDRvM25VekNLek9hYkxKYkx5Mi9nMzFldkdrQWdpblI0L1plZ0tINXFYM2JKQ3NjQTN0MHgza2dPNXRRRnloaEZmNTB4UnFGTGJ5TVVOSlF6Z3lqR1Mvd2dDcHZLcWtSQnB1V3JFNFY5ZCsxRTRkUFVYcUlnMTA3U1FPRS8yRFJReE13VER5Z0lJblZERVQ5VDNsQ29qLzZqL1ZDbUdqWk9sMmxLcFo4QUF3RFFQN3pJaW1ER0ZRQUFBQUJKUlU1RXJrSmdnZz09Jyk7XG4gICAgfVxuICB9XG59XG5cbi8vLyBBcHBsaWVzIHRoZSBtaWNybyBjbGVhcmZpeCBoYWNrIHBvcHVsYXJpemVkIGJ5IE5pY29sYXMgR2FsbGFnaGVyLiBJbmNsdWRlIHRoaXMgbWl4aW4gb24gYSBjb250YWluZXIgaWYgaXRzIGNoaWxkcmVuIGFyZSBhbGwgZmxvYXRlZCwgdG8gZ2l2ZSB0aGUgY29udGFpbmVyIGEgcHJvcGVyIGhlaWdodC5cbi8vLyBUaGUgY2xlYXJmaXggaXMgYXVnbWVudGVkIHdpdGggc3BlY2lmaWMgc3R5bGVzIHRvIHByZXZlbnQgYm9yZGVycyBpbiBmbGV4Ym94IGVudmlyb25tZW50c1xuLy8vIEBsaW5rIGh0dHA6Ly9uaWNvbGFzZ2FsbGFnaGVyLmNvbS9taWNyby1jbGVhcmZpeC1oYWNrLyBNaWNybyBDbGVhcmZpeCBIYWNrXG4vLy8gQGxpbmsgaHR0cDovL2RhbmlzYWRlc2lnbmVyLmNvbS9ibG9nL2ZsZXhib3gtY2xlYXItZml4LXBzZXVkby1lbGVtZW50cy8gRmxleGJveCBmaXhcbkBtaXhpbiBjbGVhcmZpeCB7XG4gICY6OmJlZm9yZSxcbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcgJztcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgIGZsZXgtYmFzaXM6IDA7XG4gICAgICBvcmRlcjogMTtcbiAgICB9XG4gIH1cblxuICAmOjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuLy8vIEFkZHMgQ1NTIGZvciBhIFwicXVhbnRpdHkgcXVlcnlcIiBzZWxlY3RvciB0aGF0IGF1dG9tYXRpY2FsbHkgc2l6ZXMgZWxlbWVudHMgYmFzZWQgb24gaG93IG1hbnkgdGhlcmUgYXJlIGluc2lkZSBhIGNvbnRhaW5lci5cbi8vLyBAbGluayBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9xdWFudGl0eS1xdWVyaWVzLWZvci1jc3MgUXVhbnRpdHkgUXVlcmllcyBmb3IgQ1NTXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJG1heCAtIE1heGltdW0gbnVtYmVyIG9mIGl0ZW1zIHRvIGRldGVjdC4gVGhlIGhpZ2hlciB0aGlzIG51bWJlciBpcywgdGhlIG1vcmUgQ1NTIHRoYXQncyByZXF1aXJlZCB0byBjb3ZlciBlYWNoIG51bWJlciBvZiBpdGVtcy5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRlbGVtIFtsaV0gLSBUYWcgdG8gdXNlIGZvciBzaWJsaW5nIHNlbGVjdG9ycy5cbkBtaXhpbiBhdXRvLXdpZHRoKCRtYXgsICRlbGVtOiBsaSkge1xuICBAZm9yICRpIGZyb20gMiB0aHJvdWdoICRtYXgge1xuICAgICY6bnRoLWxhc3QtY2hpbGQoI3skaX0pOmZpcnN0LWNoaWxkLFxuICAgICY6bnRoLWxhc3QtY2hpbGQoI3skaX0pOmZpcnN0LWNoaWxkIH4gI3skZWxlbX0ge1xuICAgICAgd2lkdGg6IHBlcmNlbnRhZ2UoMSAvICRpKTtcbiAgICB9XG4gIH1cbn1cblxuLy8vIFJlbW92ZXMgdGhlIGZvY3VzIHJpbmcgYXJvdW5kIGFuIGVsZW1lbnQgd2hlbiBhIG1vdXNlIGlucHV0IGlzIGRldGVjdGVkLlxuQG1peGluIGRpc2FibGUtbW91c2Utb3V0bGluZSB7XG4gIFtkYXRhLXdoYXRpbnB1dD0nbW91c2UnXSAmIHtcbiAgICBvdXRsaW5lOiAwO1xuICB9XG59XG5cbi8vLyBNYWtlcyBhbiBlbGVtZW50IHZpc3VhbGx5IGhpZGRlbiwgYnV0IHN0aWxsIGFjY2Vzc2libGUgdG8ga2V5Ym9hcmRzIGFuZCBhc3Npc3RpdmUgZGV2aWNlcy5cbi8vLyBAbGluayBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5IEhpZGluZyBDb250ZW50IGZvciBBY2Nlc3NpYmlsaXR5XG5AbWl4aW4gZWxlbWVudC1pbnZpc2libGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG59XG5cbi8vLyBSZXZlcnNlcyB0aGUgQ1NTIG91dHB1dCBjcmVhdGVkIGJ5IHRoZSBgZWxlbWVudC1pbnZpc2libGUoKWAgbWl4aW4uXG5AbWl4aW4gZWxlbWVudC1pbnZpc2libGUtb2ZmIHtcbiAgcG9zaXRpb246IHN0YXRpYyAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiBhdXRvO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgY2xpcDogYXV0bztcbn1cblxuLy8vIFZlcnRpY2FsbHkgY2VudGVycyB0aGUgZWxlbWVudCBpbnNpZGUgb2YgaXRzIGZpcnN0IG5vbi1zdGF0aWMgcGFyZW50LFxuLy8vIEBsaW5rIGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS9jZW50ZXJpbmctd2l0aC1zYXNzLyBDZW50ZXJpbmcgV2l0aCBTYXNzXG5AbWl4aW4gdmVydGljYWwtY2VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4vLy8gSG9yaXpvbnRhbGx5IGNlbnRlcnMgdGhlIGVsZW1lbnQgaW5zaWRlIG9mIGl0cyBmaXJzdCBub24tc3RhdGljIHBhcmVudCxcbi8vLyBAbGluayBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vY2VudGVyaW5nLXdpdGgtc2Fzcy8gQ2VudGVyaW5nIFdpdGggU2Fzc1xuQG1peGluIGhvcml6b250YWwtY2VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuLy8vIEFic29sdXRlbHkgY2VudGVycyB0aGUgZWxlbWVudCBpbnNpZGUgb2YgaXRzIGZpcnN0IG5vbi1zdGF0aWMgcGFyZW50LFxuLy8vIEBsaW5rIGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS9jZW50ZXJpbmctd2l0aC1zYXNzLyBDZW50ZXJpbmcgV2l0aCBTYXNzXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLy8vIEl0ZXJhdGVzIHRocm91Z2ggYnJlYWtwb2ludHMgZGVmaW5lZCBpbiBgJGJyZWFrcG9pbnQtY2xhc3Nlc2AgYW5kIHByaW50cyB0aGUgQ1NTIGluc2lkZSB0aGUgbWl4aW4gYXQgZWFjaCBicmVha3BvaW50J3MgbWVkaWEgcXVlcnkuIFVzZSB0aGlzIHdpdGggdGhlIGdyaWQsIG9yIGFueSBvdGhlciBjb21wb25lbnQgdGhhdCBoYXMgcmVzcG9uc2l2ZSBjbGFzc2VzLlxuLy8vXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkc21hbGwgW3RydWVdIC0gSWYgYGZhbHNlYCwgdGhlIG1peGluIHdpbGwgc2tpcCB0aGUgYHNtYWxsYCBicmVha3BvaW50LiBVc2UgdGhpcyB3aXRoIGNvbXBvbmVudHMgdGhhdCBkb24ndCBwcmVmaXggY2xhc3NlcyB3aXRoIGBzbWFsbC1gLCBvbmx5IGBtZWRpdW0tYCBhbmQgdXAuXG5AbWl4aW4gLXpmLWVhY2gtYnJlYWtwb2ludCgkc21hbGw6IHRydWUpIHtcbiAgJG1hcDogJGJyZWFrcG9pbnQtY2xhc3NlcztcblxuICBAaWYgbm90ICRzbWFsbCB7XG4gICAgJG1hcDogbWFwLXJlbW92ZSgkbWFwLCAkLXpmLXplcm8tYnJlYWtwb2ludCk7XG4gIH1cblxuICBAZWFjaCAkc2l6ZSBpbiAkbWFwIHtcbiAgICAkLXpmLXNpemU6ICRzaXplICFnbG9iYWw7XG5cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRzaXplKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgXG4gIFVzZWZ1bCBNaXhpbnNcbiovXG5cbkBpbXBvcnQgJzAxLXRleHQnO1xuQGltcG9ydCAnMDItY29udGVudCc7XG5AaW1wb3J0ICcwMy1sYXlvdXQnO1xuQGltcG9ydCAnMDQtZnVuY3Rpb25zJztcbkBpbXBvcnQgJzA1LW1pc2MnO1xuXG5cblxuIiwiIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuIFx0VXNhZ2VcbiAgIFx0QGluY2x1ZGUgZm9udC1mYWNlKCdVYnVudHUnLCAnLi4vZm9udHMnKTtcbiAgIFx0XG4gXHRPdXRwdXQgQ1NTXG4gICBcdEBmb250LWZhY2Uge1xuICAgIFx0Zm9udC1mYW1pbHk6ICdVYnVudHUnO1xuICAgICBcdHNyYzogdXJsKCcuLi9mb250cy5lb3QnKTtcbiAgICAgXHRzcmM6IHVybCgnLi4vZm9udHMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgXHR1cmwoJy4uL2ZvbnRzLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgIFx0dXJsKCcuLi9mb250cy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICAgXHR1cmwoJy4uL2ZvbnRzLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgICBcdHVybCgnLi4vZm9udHMuc3ZnI1VidW50dSkgZm9ybWF0KCdzdmcnKTtcbiAgICAgXHRmb250LXdlaWdodDogNDAwO1xuICAgICBcdGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgIFx0fVxuXG4gICBcdEBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDApIHtcbiAgICBcdEBmb250LWZhY2Uge1xuICAgICAgIFx0XHRmb250LWZhbWlseTogJ1VidW50dSc7XG4gICAgICAgXHRcdHNyYzogdXJsKCcuLi9mb250cy5zdmcjVWJ1bnR1JykgZm9ybWF0KCdzdmcnKTtcbiAgICAgXHR9XG4gICBcdH1cbiovXG5AbWl4aW4gZm9udC1mYWNlKCRmb250LWZhbWlseSwgJGZpbGUtcGF0aCwgJGZvbnQtd2VpZ2h0OiA0MDAsICRmb250LXN0eWxlOiBub3JtYWwpIHtcbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbiAgICBzcmM6IHVybCgnI3skZmlsZS1wYXRofS8jeyRmb250LWZhbWlseX0uZW90Jyk7XG4gICAgc3JjOiB1cmwoJyN7JGZpbGUtcGF0aH0vI3skZm9udC1mYW1pbHl9LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJyN7JGZpbGUtcGF0aH0vI3skZm9udC1mYW1pbHl9LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKCcjeyRmaWxlLXBhdGh9LyN7JGZvbnQtZmFtaWx5fS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJyN7JGZpbGUtcGF0aH0vI3skZm9udC1mYW1pbHl9LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnI3skZmlsZS1wYXRofS8jeyRmb250LWZhbWlseX0uc3ZnIyN7JGZvbnQtZmFtaWx5fScpIGZvcm1hdCgnc3ZnJyk7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodDtcbiAgICBmb250LXN0eWxlOiAkZm9udC1zdHlsZTtcbiAgfVxuICAvLyBDaHJvbWUgZm9yIFdpbmRvd3MgcmVuZGVyaW5nIGZpeDogaHR0cDovL3d3dy5hZHRyYWsuY28udWsvYmxvZy9mb250LWZhY2UtY2hyb21lLXJlbmRlcmluZy9cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMCkge1xuICAgIEBmb250LWZhY2Uge1xuICAgICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbiAgICAgIHNyYzogdXJsKCcjeyRmaWxlLXBhdGh9LyN7JGZvbnQtZmFtaWx5fS5zdmcjI3skZm9udC1mYW1pbHl9JykgZm9ybWF0KCdzdmcnKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0QW50aWFsaWFzZWRcbiovXG5AbWl4aW4gYW50aWFsaWFzIHtcbiAgICAgICAgICAgIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblx0Rm9udCBTaXplIHdpdGggcmVtXG5cdFxuXHRVc2FnZVxuXHRwIHtcblx0ICBAaW5jbHVkZSBmb250LXNpemUoMTRweClcblx0fVxuXG5cdE91dHB1dFxuXHRwIHtcblx0ICBmb250LXNpemU6IDE0cHg7IC8vV2lsbCBiZSBvdmVycmlkZGVuIGlmIGJyb3dzZXIgc3VwcG9ydHMgcmVtXG5cdCAgZm9udC1zaXplOiAwLjhyZW07XG5cdH1cbiovXG5AbWl4aW4gZm9udC1zaXplLWV4dCgkc2l6ZVZhbHVlOiAxNiApe1xuICAgIGZvbnQtc2l6ZTogJHNpemVWYWx1ZSArIHB4OyAvL2ZhbGxiYWNrIGZvciBvbGQgYnJvd3NlcnNcbiAgICBmb250LXNpemU6ICguMDcgKiAkc2l6ZVZhbHVlKSArIHJlbTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdExpbmUtaGVpZ2h0IHZhbHVlcyBpbiBib3RoIHBpeGVscyBhbmQgcmVtc1xuXG5cdFVzYWdlXG4gIFx0LmZvbyB7XG4gICAgXHRAaW5jbHVkZSBsaW5lLWhlaWdodCgxNik7XG4gIFx0fVxuXG5cdE91dHB1dFxuICBcdC5mb28ge1xuXHQgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG5cdCAgICBsaW5lLWhlaWdodDogMXJlbTtcbiAgXHR9XG4qL1xuQG1peGluIGxpbmUtaGVpZ2h0KCRoZWlnaHQtdmFsdWU6IDEyKSB7XG4gICAgbGluZS1oZWlnaHQ6ICRoZWlnaHQtdmFsdWUgKiAxcHg7IC8vZmFsbGJhY2sgZm9yIG9sZCBicm93c2Vyc1xuICAgIGxpbmUtaGVpZ2h0OiAoMSAvICgkYmFzZS1mb250LXNpemUgLyAoJGJhc2UtZm9udC1zaXplICogMCArIDEpKSAqICRoZWlnaHQtdmFsdWUgKiAxcmVtKTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBIZWFkaW5nc1xuKi9cbkBtaXhpbiBoZWFkaW5ncygkZnJvbTogMSwgJHRvOiA2KXtcbiAgICBAZm9yICRpIGZyb20gJGZyb20gdGhyb3VnaCAkdG97XG4gICAgICBoI3skaX17XG4gICAgICAgIEBjb250ZW50XG4gICAgICB9XG4gICAgfVxufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFRleHQgSW5kZW50XG4qL1xuQG1peGluIGhpZGUtdGV4dCB7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTllbTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblx0VXNhZ2VcbiAgIC5mb28ge1xuICAgIFx0QGluY2x1ZGUgd29yZC13cmFwKCk7XG4gICBcdH1cblxuIFx0T3V0cHV0XG4gICAuZm9vIHtcbiAgICBcdGh5cGhlbnM6IGF1dG87XG4gICAgXHRvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICAgIFx0d29yZC13cmFwOiBicmVhay13b3JkO1xuICAgfVxuKi9cbkBtaXhpbiB3b3JkLXdyYXAge1xuICBoeXBoZW5zOiBhdXRvO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdENsZWFyZml4XG4qL1xuQG1peGluIGNsZWFyZml4KCkge1xuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICB9XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEhpZGUgdGV4dFxuXHRleGFtcGxlOlxuXHQuZWxlbWVudCB7XG5cdFx0QGluY2x1ZGUgaGlkZS10ZXh0O1xuXHR9XG4qL1xuXG5AbWl4aW4gaGlkZS10ZXh0KCRicmVhazogZmFsc2UsICRpbmRlbnQ6IDIwMCUsICRhbGlnbjogbGVmdCwgJG92ZXJmbG93OiBoaWRkZW4pIHtcblx0QGlmICRicmVhayB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogMDsgbGVmdDogMDtcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0fVxuXHR0ZXh0OiB7XG5cdFx0aW5kZW50OiAkaW5kZW50O1xuXHRcdGFsaWduOiAkYWxpZ247XG5cdH1cblx0Zm9udC1zaXplOiAwO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRAaWYgJG92ZXJmbG93IHtcblx0XHRvdmVyZmxvdzogJG92ZXJmbG93O1xuXHR9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0SGlkZSBmcm9tIGJvdGggc2NyZWVucmVhZGVycyBhbmQgYnJvd3NlcnNcbiovXG5cbkBtaXhpbiBoaWRkZW4ge1xuXHRkaXNwbGF5OiBub25lO1xuXHR2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbkBtaXhpbiB2aXNpYmxlKCRzdGF0ZTogJ2Jsb2NrJykge1xuXHRkaXNwbGF5OiB1bnF1b3RlKCRzdGF0ZSk7XG5cdHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRIaWRlIG9ubHkgdmlzdWFsbHksIGJ1dCBoYXZlIGl0IGF2YWlsYWJsZSBmb3Igc2NyZWVucmVhZGVyc1xuKi9cblxuQG1peGluIHZoKCRmb2N1c2FibGU6IGZhbHNlKSB7XG5cdGJvcmRlcjogMDtcblx0Y2xpcDogcmVjdCgwIDAgMCAwKTtcblx0aGVpZ2h0OiAxcHg7XG5cdG1hcmdpbjogLTFweDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0cGFkZGluZzogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR3aWR0aDogMXB4O1xuXG5cdEBpZiAkZm9jdXNhYmxlIHtcblx0XHRAaW5jbHVkZSB2aC1mb2N1c2FibGU7XG5cdH1cbn1cblxuQG1peGluIHZoLXJlc2V0IHtcblx0Y2xpcDogYXV0bztcblx0aGVpZ2h0OiBhdXRvO1xuXHRtYXJnaW46IDA7XG5cdG92ZXJmbG93OiB2aXNpYmxlO1xuXHRwb3NpdGlvbjogc3RhdGljO1xuXHR3aWR0aDogYXV0bztcbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEFsbG93IHRoZSBlbGVtZW50IHRvIGJlIGZvY3VzYWJsZSB3aGVuIG5hdmlnYXRlZCB0byB2aWEgdGhlIGtleWJvYXJkXG4qL1xuXG5AbWl4aW4gdmgtZm9jdXNhYmxlIHtcblxuXHQmOmFjdGl2ZSxcblx0Jjpmb2N1cyB7XG5cdFx0Y2xpcDogYXV0bztcblx0XHRoZWlnaHQ6IGF1dG87XG5cdFx0bWFyZ2luOiAwO1xuXHRcdG92ZXJmbG93OiB2aXNpYmxlO1xuXHRcdHBvc2l0aW9uOiBzdGF0aWM7XG5cdFx0d2lkdGg6IGF1dG87XG5cdH1cbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEhpZGUgdmlzdWFsbHkgYW5kIGZyb20gc2NyZWVucmVhZGVycywgYnV0IG1haW50YWluIGxheW91dFxuKi9cblxuQG1peGluIGludmlzaWJsZSB7XG5cdHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdEZvcm0gaW5wdXQgcGxhY2Vob2xkZXIgdGV4dFxuXHRleGFtcGxlOlxuXHRpbnB1dCxcblx0dGV4dGFyZWEge1xuXHRcdEBpbmNsdWRlIGlucHV0LXBsYWNlaG9sZGVyIHtcblx0XHRcdGNvbG9yOiAkZ3JleTtcblx0XHR9XG5cdH1cblxuKi9cblxuQG1peGluIGlucHV0LXBsYWNlaG9sZGVyIHtcblx0Ji5wbGFjZWhvbGRlciB7IEBjb250ZW50OyB9XG5cdCY6LW1vei1wbGFjZWhvbGRlciB7IEBjb250ZW50OyB9XG5cdCY6Oi1tb3otcGxhY2Vob2xkZXIgeyBAY29udGVudDsgfVxuXHQmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IEBjb250ZW50OyB9XG5cdCY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBAY29udGVudDsgfVxufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEZsdWlkIFByb3BlcnR5XG5cdGh0dHA6Ly93d3cuYWRyZW5hbGlubWVkaWEuY29tLmF1L3RoZS1hZ2VuY3kvaW5zaWdodHMvdGhpcy1jaGFuZ2VzLWV2ZXJ5dGhpbmctY3NzLWZsdWlkLXByb3BlcnRpZXMuYXNweFxuXHRIVE1MOlxuXHQ8aDEgY2xhc3M9XCJlbGVtZW50XCI+XG5cdFx0PHNwYW4+VGV4dCB0byByZXBsYWNlPC9zcGFuPlxuXHQ8L2gxPlxuXHRleGFtcGxlOlxuXHRoMSB7XG5cdFx0QGluY2x1ZGUgZnAoZm9udC1zaXplLCA1MCwgMTAwKTsgLy8gNTBweCBhdCAzMjAsIDEwMHB4IGF0IDE5MjA7XG5cdH1cblx0b3V0cHV0OlxuXHRoMSB7XG5cdFx0Zm9udC1zaXplOiBjYWxjKDMuMTI1dncgKyA0MHB4KTsgLy9UaGlzIGlzIHRoZSBtYWdpYyFcblx0fVxuXHRAbWVkaWEgKG1heC13aWR0aDozMjBweCl7IC8vQ2xpcHMgdGhlIHN0YXJ0IHRvIHRoZSBtaW4gdmFsdWVcblx0XHRmb250LXNpemU6NTBweDtcblx0fVxuXHRAbWVkaWEgKG1pbi13aWR0aDoxOTIwcHgpeyAvL0NsaXBzIHRoZSBlbmQgdG8gdGhlIG1heCB2YWx1ZVxuXHRcdGZvbnQtc2l6ZToxMDBweDtcblx0fVxuKi9cblxuQG1peGluIGZwKCRwcm9wZXJ0eSwgJG1pbiwgJG1heCwgJHN0YXJ0OiAzMjAsICRlbmQ6IGJyZWFrcG9pbnQoJ2Rlc2t0b3AnKSwgJGNsaXA6IHRydWUsICRjbGlwQXRTdGFydDogdHJ1ZSwgJGNsaXBBdEVuZDogdHJ1ZSkge1xuXHQkc3RhcnQ6ICRzdGFydCAvICgkc3RhcnQgKiAwICsgMSk7XG5cdCRlbmQ6ICRlbmQgLyAoJGVuZCAqIDAgKyAxKTtcblx0JG11bHRpcGxpZXI6ICgkbWF4IC0gJG1pbikgLyAoJGVuZCAtICRzdGFydCkgKiAxMDA7XG5cdCRhZGRlcjogKCRtaW4gKiAkZW5kIC0gJG1heCAqICRzdGFydCkgLyAoJGVuZCAtICRzdGFydCk7XG5cdCRmb3JtdWxhOiBjYWxjKCN7JG11bHRpcGxpZXIgKyAwdnd9ICsgI3skYWRkZXIgKyAwcHh9KTtcblx0QGlmICRjbGlwIGFuZCAkY2xpcEF0U3RhcnQge1xuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAjeyRzdGFydCArIDBweH0pIHtcblx0XHRcdCN7JHByb3BlcnR5fTogJG1pbiArIDBweDtcblx0XHR9XG5cdH1cblx0QGlmICRjbGlwIGFuZCAkY2xpcEF0RW5kIHtcblx0XHRAbWVkaWEgKG1pbi13aWR0aDogI3skZW5kICsgMHB4fSkge1xuXHRcdFx0I3skcHJvcGVydHl9OiAkbWF4ICsgMHB4O1xuXHRcdH1cblx0fVxuXHQjeyRwcm9wZXJ0eX06ICRmb3JtdWxhO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBCcmVha3BvaW50c1xuKi9cbkBtaXhpbiBicCgkbWVkaWEpIHtcbiAgICBAaWYgJG1lZGlhID09IHNtYWxsIHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cyxzbWFsbCkgKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkbWVkaWEgPT0gbWVkaXVtRG93biB7XG4gICAgICAgIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLG1lZGl1bSkpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIEBlbHNlIGlmICRtZWRpYSA9PSBtZWRpdW0ge1xuICAgICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAobWFwLWdldCgkYnJlYWtwb2ludHMsc21hbGwpKzEpKSBhbmQgKG1heC13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsbGFyZ2UpKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkbWVkaWEgPT0gbWVkaXVtVXAge1xuICAgICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAobWFwLWdldCgkYnJlYWtwb2ludHMsc21hbGwpKzEpKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkbWVkaWEgPT0gbGFyZ2VEb3duIHtcbiAgICAgICAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsbGFyZ2UpKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkbWVkaWEgPT0gbGFyZ2Uge1xuICAgICAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAobWFwLWdldCgkYnJlYWtwb2ludHMsbGFyZ2UpKzEpICkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIFplcm8gb3V0XG4qL1xuQG1peGluIHplcm8tb3V0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcblx0UHNldWRvXG5cblx0VXNhZ2Vcblx0ZGl2OjphZnRlciB7XG5cdCAgICBAaW5jbHVkZSBwc2V1ZG87XG5cdCAgICB0b3A6IC0xcmVtOyBsZWZ0OiAtMXJlbTtcblx0ICAgIHdpZHRoOiAxcmVtOyBoZWlnaHQ6IDFyZW07XG5cdH1cbiovXG5AbWl4aW4gcHNldWRvKCRkaXNwbGF5OiBibG9jaywgJHBvczogYWJzb2x1dGUsICRjb250ZW50OiBcIlwiKSB7XG4gICAgY29udGVudDogJGNvbnRlbnQ7XG4gICAgZGlzcGxheTogJGRpc3BsYXk7XG4gICAgcG9zaXRpb246ICRwb3M7XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIFVzYWdlXG4gICAuZm9vIHtcbiAgICAgICAgQGluY2x1ZGUgd2lkdGgoMTUwMHB4LCAzMDBweCk7XG4gICAgfVxuXG4gICAgT3V0cHV0XG4gICAuZm9vIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxNTAwcHg7XG4gICAgICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgfVxuKi9cbkBtaXhpbiB3aWR0aCgkbWluOiBudWxsLCAkbWF4OiBudWxsLCAkd2lkdGg6IDEwMCUpIHtcbiAgQGlmICRtYXggIT0gbnVsbCB7XG4gICAgbWF4LXdpZHRoOiAkbWF4O1xuICB9XG4gIEBpZiAkbWluICE9IG51bGwge1xuICAgIG1pbi13aWR0aDogJG1pbjtcbiAgfVxuICB3aWR0aDogJHdpZHRoO1xufVxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0VmVydGljYWwgQWxpZ25cbiovXG5AbWl4aW4gdmVydGljYWwtYWxpZ24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDUwJTtcblxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpICFpbXBvcnRhbnQ7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSAhaW1wb3J0YW50O1xufVxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Q2VudGVyIEJsb2NrXG4qL1xuQG1peGluIGNlbnRlci1ibG9jayB7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEFic29sdXRlIFBvc2l0aW9uaW5nXG4qL1xuQG1peGluIGFicy1wb3MgKCR0OiBhdXRvLCAkcjogYXV0bywgJGI6IGF1dG8sICRsOiBhdXRvKSB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6ICR0O1xuICAgIHJpZ2h0OiAkcjtcbiAgICBib3R0b206ICRiO1xuICAgIGxlZnQ6ICRsO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIENlbnRlciBBbGlnblxuKi9cbkBtaXhpbiBjZW50ZXItYWxpZ24oJHZlcjogdHJ1ZSwgJGhvcjogZmFsc2UsICRwb3M6IHJlbGF0aXZlKSB7XG4gICAgQGlmICRwb3Mge1xuICAgICAgICBwb3NpdGlvbjogJHBvcztcbiAgICB9XG4gICAgQGlmICR2ZXIge1xuICAgICAgICB0b3A6IDUwJTtcbiAgICB9XG4gICAgQGlmICRob3Ige1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgfVxuXG4gICAgQGlmICR2ZXIgYW5kICRob3Ige1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB9IEBlbHNlIGlmICR2ZXIge1xuXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB9IEBlbHNlIHtcblxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgfVxufVxuXG5AbWl4aW4gY2VudGVyKCR4eTp4eSkge1xuICAgIEBpZiAkeHkgPT0geHkge1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpKTtcbiAgICB9XG4gICAgQGVsc2UgaWYgJHh5ID09IHgge1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtNTAlKSk7XG4gICAgfVxuICAgICBAZWxzZSBpZiAkeHkgPT0geSB7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKC01MCUpKTtcbiAgICB9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBNZW51IGxpc3RcbiovXG5AbWl4aW4gZmxhdC1saXN0IHtcbiAgICBAaW5jbHVkZSB6ZXJvX291dCgpO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBsaSB7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxufVxuXG5AbWl4aW4gbWVudS1saXN0KCRmbG9hdDogbGVmdCwgJG1hcmdpbjogMCwgJHBhZGRpbmc6IDAsICRsaS1mbG9hdDogbGVmdCwgJGxpLW1hcmdpbjogMCwgJGxpLXBhZGRpbmc6IDApIHtcbiAgICBAaW5jbHVkZSB6ZXJvLW91dDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgbWFyZ2luOiAkbWFyZ2luO1xuICAgIHBhZGRpbmc6ICRwYWRkaW5nO1xuICAgIGZsb2F0OiAkZmxvYXQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxpIHtcbiAgICAgICAgbWFyZ2luOiAkbGktbWFyZ2luO1xuICAgICAgICBwYWRkaW5nOiAkbGktcGFkZGluZztcbiAgICAgICAgZmxvYXQ6ICRsaS1mbG9hdDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IFxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgQ2VudGVyIGxpc3RcbiovXG5AbWl4aW4gY2VudGVyZWQtbGlzdCB7XG4gICAgbGVmdDogNTAlO1xuICAgIGxpIHtcbiAgICAgICAgcmlnaHQ6IDUwJTtcbiAgICB9XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdEIvVyBPcGFjaXR5XG4qL1xuQGZ1bmN0aW9uIGJsYWNrKCRvcGFjaXR5KSB7XG4gXHRAcmV0dXJuIHJnYmEoYmxhY2ssICRvcGFjaXR5KVxufVxuXG5AZnVuY3Rpb24gd2hpdGUoJG9wYWNpdHkpIHtcbiBcdEByZXR1cm4gcmdiYSh3aGl0ZSwgJG9wYWNpdHkpXG59XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRQcmVmaXhlcnMgKHRvIGJlIHVzZWQgd2l0aCBCb3VyYm9uKVxuKi9cbkBtaXhpbiBiZy1zaXplKCR0eXBlKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVyKGJhY2tncm91bmQtc2l6ZSwgJHR5cGUsIHdlYmtpdCBtb3ogc3BlYyk7XG59IiwiXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRDaXJjbGVcblxuXy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBjaXJjbGUoJHdpZHRoLCAkY29sb3IpIHtcbiAgd2lkdGg6ICR3aWR0aDtcbiAgaGVpZ2h0OiAkd2lkdGg7XG4gIGJhY2tncm91bmQ6ICRjb2xvcjtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkd2lkdGgvMjtcbiAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAkd2lkdGgvMjtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAkd2lkdGgvMjtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdEFuaW1hdGlvbnNcblxuXHRVc2FnZTpcblx0QGluY2x1ZGUga2V5ZnJhbWVzKG1vdmUtdGhlLW9iamVjdCkge1xuXHQgIDAlICAgeyBsZWZ0OiAxMDBweDsgfVxuXHQgIDEwMCUgeyBsZWZ0OiAyMDBweDsgfVxuXHR9XG5cblx0Lm9iamVjdC10by1hbmltYXRlIHtcblx0ICBAaW5jbHVkZSBhbmltYXRpb24oJ21vdmUtdGhlLW9iamVjdCAuNXMgMScsICdtb3ZlLXRoZS1vYmplY3QtYWdhaW4gLjVzIDEgLjVzJyk7XG5cdH0gXG5cdFxuXy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBhbmltYXRpb24oJGFuaW1hdGUuLi4pIHtcbiAgICAkbWF4OiBsZW5ndGgoJGFuaW1hdGUpO1xuICAgICRhbmltYXRpb25zOiAnJztcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG1heCB7XG4gICAgICAgICRhbmltYXRpb25zOiAjeyRhbmltYXRpb25zICsgbnRoKCRhbmltYXRlLCAkaSl9O1xuXG4gICAgICAgIEBpZiAkaSA8ICRtYXgge1xuICAgICAgICAgICAgJGFuaW1hdGlvbnM6ICN7JGFuaW1hdGlvbnMgKyBcIiwgXCJ9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiAkYW5pbWF0aW9ucztcbiAgICAtbW96LWFuaW1hdGlvbjogICAgJGFuaW1hdGlvbnM7XG4gICAgLW8tYW5pbWF0aW9uOiAgICAgICRhbmltYXRpb25zO1xuICAgIGFuaW1hdGlvbjogICAgICAgICAkYW5pbWF0aW9ucztcbn1cblxuQG1peGluIGtleWZyYW1lcygkYW5pbWF0aW9uTmFtZSkge1xuICAgIEAtd2Via2l0LWtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBALW1vei1rZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gICAgQC1vLWtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBAa2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufSIsIiRicmVha3BvaW50czogKFxuICAgIHNtYWxsOiA2NjdweCxcbiAgICBtZWRpdW06IDc2OHB4LFxuICAgIGxhcmdlOiAxMDI0cHhcbik7XG4kdHlwaTogKFxuICAgIG51bGw6IDE2cHgsXG4gICAgc21hbGw6IDE4cHgsXG4gICAgbGFyZ2U6IDE4cHhcbik7XG4kaGVyby1tYXA6IChcbiAgICBudWxsOiAoNDhweCwgMS4xKSxcbiAgICBtZWRpdW06ICg1MnB4LCAyKSxcbiAgICBsYXJnZTogKDc4cHgsIDEuNSlcbik7XG4kaGVyby1zdWItbWFwOiAoXG4gICAgbnVsbDogMTZweCxcbiAgICBtZWRpdW06IDIwcHgsXG4gICAgbGFyZ2U6IDMycHhcbik7XG4kaDItbWFwOiAoXG4gICAgbnVsbDogMjhweCxcbiAgICBtZWRpdW06IDM4cHgsXG4gICAgbGFyZ2U6IDQ2cHhcbik7XG4kaDMtbWFwOiAoXG4gICAgbnVsbDogMThweCxcbiAgICBtZWRpdW06IDI0cHgsXG4gICAgbGFyZ2U6IDI4cHhcbik7XG5cblxuXG5ib2R5IHtcbiAgICBAaW5jbHVkZSBhbnRpYWxpYXM7XG4gICAgZm9udC1mYW1pbHk6ICRyb2JvdG87XG4gICAgKiB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxufVxuXG5AaW5jbHVkZSBoZWFkaW5ncygpIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiAkcm9ib3RvO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IGJsYWNrKC4yKTtcbiAgICBzdXAge1xuICAgICAgICBmb250LXNpemU6IHJlbSgxMyk7XG4gICAgICAgIHRvcDogLTIwcHg7XG4gICAgfVxufVxuXG5AaW5jbHVkZSBoZWFkaW5ncygxKSB7XG4gICAgbWFyZ2luOiAwIDAgMi41cmVtO1xufVxuXG5AaW5jbHVkZSBoZWFkaW5ncygyKSB7XG4gICAgQGluY2x1ZGUgdHlwaSgkaDItbWFwKTtcbiAgICBtYXJnaW46IDAgMCAuM3JlbTtcbiAgICAmLnN1Yi10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG59XG5cbkBpbmNsdWRlIGhlYWRpbmdzKDMpIHtcbiAgICBAaW5jbHVkZSB0eXBpKCRoMy1tYXApO1xuICAgIG1hcmdpbjogMCAwIC4zcmVtO1xufVxuXG5zdXAge1xuICAgIGZvbnQtc2l6ZTogcmVtKDEwKTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMTBweDtcbn1cblxuYSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgLjNzIGVhc2UtaW4tb3V0KTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxucCB7XG4gICAgQGluY2x1ZGUgdHlwaS1iYXNlKCk7XG4gICAgY29sb3I6IGRhcmtlbigkd2hpdGUsIDIwJSk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCAzcHggYmxhY2soLjMpO1xuICAgIG1hcmdpbi10b3A6IDA7XG59XG5cbmhyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMCwgMCwgMCwgMCksIHJnYmEoMTI4LDEyOCwxMjgsIC4zNSksIHJnYmEoMCwgMCwgMCwgMCkpO1xuICAgIGJvcmRlcjogMDtcbiAgICBtYXJnaW46IDIuNWVtIDA7IFxuICAgIGhlaWdodDogMXB4O1xufVxuXG4uY2QtbWFpbi1uYXYge1xuICAgIGEge1xuICAgICAgICBmb250LXNpemU6IHJlbSgxNHB4KTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG59XG5cbi5jdGEsIC5jdGEtYWx0IHtcbiAgICB3aWR0aDogMjAwcHg7IFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IFxufVxuXG4uY3RhIHtcbiAgICBAaW5jbHVkZSBjdGFTbGlkZTtcbn1cblxuLmN0YS1hbHQge1xuICAgIEBpbmNsdWRlIGN0YVNsaWRlKCRiZzogJGJ1dHRvbi1jb2xvciwgJGh2OiAkc2l0ZS1zZWNvbmRhcnktY29sb3IsICR0eXBlOiBtYWlsKTtcbiAgICBjb2xvcjogJHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbn1cblxuLnNpdGUtbmF2LCAuY2Qtc2xpZGUtbmF2LCAucGFnZS1uYXYge1xuICAgIGxpIHtcbiAgICAgICAgYSwgYiB7XG4gICAgICAgICAgICBjb2xvcjogcmdiYSgkd2hpdGUsIC40NSk7XG4gICAgICAgICAgICBmb250LXNpemU6IHJlbSgxMyk7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmhvdmVyIGIsICYuYWN0aXZlIGIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRIZXJvIGFuZCBTZWN0aW9uc1xuICAgIFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuI2NkLWludHJvIHtcbiAgICAudGl0bGUge1xuICAgICAgICBoMSB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0eXBpKCRoZXJvLW1hcCk7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMCAwIC4zZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudGFnIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0eXBpKCRoZXJvLXN1Yi1tYXApO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJwKG1lZGl1bVVwKSB7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNlbnRlci1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vcm1hbDtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5lbmQtdGFnIHtcbiAgICAgICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmLmlzLWxvYWRlZCB7XG4gICAgICAgIC50YWcge1xuICAgICAgICAgICAgJjpudGgtY2hpbGQoMSkge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZhZGVJbkRvd24oJGR1cmF0aW9uOiAuOHMsICRkZWxheTogLjVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW5Eb3duKCRkdXJhdGlvbjogLjhzLCAkZGVsYXk6IDFzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuZW5kLXRhZyB7XG4gICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW4oJGR1cmF0aW9uOiAuOHMsICRkZWxheTogMS41cyk7XG4gICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW4oJGR1cmF0aW9uOiAuOHMsICRkZWxheTogMnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuLmNkLXNlY3Rpb246bm90KC5oZXJvKSB7XG4gICAgLnRpdGxlIHtcbiAgICAgICAgQGluY2x1ZGUgdHlwaSgkaDItbWFwKTtcbiAgICB9XG4gICAgLnNtYWxsLXRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTYpO1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyLjVyZW07XG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIHAge1xuICAgICAgICBmb250LXNpemU6IHJlbSgyMHB4KTtcbiAgICB9XG4gICAgJi5zdW1tYXJ5IHtcbiAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHR5cGkoJGhlcm8tbWFwKTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIH1cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0eXBpKCRoZXJvLXN1Yi1tYXApO1xuICAgICAgICB9XG4gICAgICAgIGZvb3RlciB7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBjdGFTbGlkZSgkYmc6ICRidXR0b24tY29sb3IsICRodjogJHNpdGUtc2Vjb25kYXJ5LWNvbG9yLCAkdHlwZTogbWFpbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG4gICAgRGVmYXVsdCBQYWdlcyBcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLnBhZ2UtY29udGVudCB7XG4gICAgKjpub3Qoc3Bhbikge1xuICAgICAgICBjb2xvcjogbGlnaHRlbigkYmxhY2ssIDI1JSk7XG4gICAgICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIH1cbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cbiAgICBDYXNlIFN0dWRpZXMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4gICAgXG4uc2luZ2xlLWNhc2Uge1xuICAgIC50aXRsZSwgLmV2ZW50IHtcbiAgICAgICAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IGJsYWNrKC43KTtcbiAgICB9XG4gICAgLnRpdGxlIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICB9XG4gICAgLmV2ZW50IHtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTgpOyBcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDMyKTsgXG4gICAgICAgIH1cbiAgICB9XG4gICAgLmNvbnRlbnQtZW50cnkge1xuICAgICAgICBoNCB7XG4gICAgICAgICAgICBjb2xvcjogZGFya2VuKCRzaXRlLWdyYXksIDIwJSk7XG4gICAgICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7IFxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG4gICAgICAgIHVsIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogcmVtKDIwKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJwKG1lZGl1bVVwKSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oNDApOyBcbiAgICAgICAgICAgIH0gIFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHR5cGktYmFzZSgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEuMWVtOyAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvLyBDb252ZXJ0IHBpeGVscyB0byByZW1zXG4vLyBlZy4gZm9yIGEgcmVsYXRpb25hbCB2YWx1ZSBvZiAxMnB4IHdyaXRlIHJlbSgxMilcbi8vIEFzc3VtZXMgJGVtLWJhc2UgaXMgdGhlIGZvbnQtc2l6ZSBvZiA8aHRtbD5cblxuQGZ1bmN0aW9uIHJlbSgkcHh2YWwpIHtcbiAgQGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcbiAgICAkcHh2YWw6IHN0cmlwLXVuaXRzKCRweHZhbCk7XG4gIH1cblxuICAkYmFzZTogJGVtLWJhc2U7XG4gIEBpZiBub3QgdW5pdGxlc3MoJGJhc2UpIHtcbiAgICAkYmFzZTogc3RyaXAtdW5pdHMoJGJhc2UpO1xuICB9XG4gIEByZXR1cm4gKCRweHZhbCAvICRiYXNlKSAqIDFyZW07XG59XG4iLCJcbi8vIF90eS1icmVha3BvaW50XG4vLyA9PT09PT09PT09PT09PVxuLy8gQWxsb3dzIHVzZSBvZiBicmVha3BvaW50LXNhc3MgYW5kIG1hcHB5LWJwLlxuLy8gRmFsbHMgYmFjayB0byBkZWZhdWx0IG1ldGhvZCBvdGhlcndpc2UuXG5AbWl4aW4gX3R5LWJyZWFrcG9pbnQoXG4gICR0eXBpLW1hcFxuKSB7XG4gICRicmVha3BvaW50OiBtYXAtZ2V0KCR0eXBpLW1hcCwgYnJlYWtwb2ludCk7XG4gICRicmVha3BvaW50czogbWFwLWdldCgkdHlwaS1tYXAsIGJyZWFrcG9pbnRzKTtcbiAgJGJwLXZhbDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KTtcblxuICBAaWYgJHR5cGktYnJlYWtwb2ludCA9PSBicmVha3BvaW50IHtcbiAgICBAaWYgbWl4aW4tZXhpc3RzKGJyZWFrcG9pbnQpIHtcbiAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCd0byBlbXMnLCB0cnVlKTtcbiAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWFwLWdldCgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KSkge1xuICAgICAgICBAaW5jbHVkZSBfdHktd3JpdGUtcHJvcHMoJHR5cGktbWFwKTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgIEBlcnJvciAnQnJlYWtwb2ludC1zYXNzIExpYnJhcnkgbm90IGZvdW5kJ1xuICAgIH1cbiAgfVxuXG4gIEBlbHNlIGlmICR0eXBpLWJyZWFrcG9pbnQgPT0gbWFwcHktYnJlYWtwb2ludCBvciAkdHlwaS1icmVha3BvaW50ID09IG1hcHB5LWJyZWFrcG9pbnRzIHtcbiAgICBAaWYgbWl4aW4tZXhpc3RzKG1hcHB5LWJwKSB7XG4gICAgICBAaW5jbHVkZSBtYXBweS1icChtYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpKSB7XG4gICAgICAgIEBpbmNsdWRlIF90eS13cml0ZS1wcm9wcygkdHlwaS1tYXApO1xuICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yICdNYXBweSBCcmVha3BvaW50cyBMaWJyYXJ5IG5vdCBmb3VuZCdcbiAgICB9XG4gIH1cblxuICBAZWxzZSB7XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogI3ttYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpfSkge1xuICAgICAgQGluY2x1ZGUgX3R5LXdyaXRlLXByb3BzKCR0eXBpLW1hcCk7XG4gICAgfVxuICB9XG59XG5cbi8vIF90eS13cml0ZS1wcm9wc1xuLy8gPT09PT09PT09PT09PT09XG4vLyBXcml0ZXMgZm9udC1zaXplIChhbmQgbGluZSBoZWlnaHQpIHByb3BlcnRpZXNcbkBtaXhpbiBfdHktd3JpdGUtcHJvcHMgKFxuICAkdHlwaS1tYXBcbikge1xuICAkdGFyZ2V0OiBtYXAtZ2V0KCR0eXBpLW1hcCwgdGFyZ2V0KTtcbiAgJGJyZWFrcG9pbnQ6IG1hcC1nZXQoJHR5cGktbWFwLCBicmVha3BvaW50KTtcbiAgJHR5cGk6IG1hcC1nZXQoJHR5cGktbWFwLCB0eXBpKTtcbiAgJGJhc2U6IG1hcC1nZXQoJHR5cGktbWFwLCBiYXNlKTtcbiAgJHJlbTogbWFwLWdldCgkdHlwaS1tYXAsIHJlbSk7XG5cbiAgJGJwLXZhbDogbWFwLWdldCgkdGFyZ2V0LCAkYnJlYWtwb2ludCk7XG4gICRmb250LXNpemU6IG51bGw7XG4gICRsaW5lLWhlaWdodDogbnVsbDtcblxuICBAaWYgdHlwZS1vZigkYnAtdmFsKSA9PSAnbnVsbCcge1xuICAgICRsYXN0LXZhbGlkLWJyZWFrcG9pbnQ6IG1hcC1nZXQoJHR5cGktbWFwLCBsYXN0LXZhbGlkLWJyZWFrcG9pbnQpO1xuICAgICRicC12YWw6IG1hcC1nZXQoJHRhcmdldCwgJGxhc3QtdmFsaWQtYnJlYWtwb2ludCk7XG4gIH1cblxuICBAaWYgdHlwZS1vZigkYnAtdmFsKSA9PSBcImxpc3RcIiBhbmQgbGVuZ3RoKCRicC12YWwpID4gMSB7XG4gICAgJGZvbnQtc2l6ZTogbnRoKCRicC12YWwsIDEpO1xuICAgICRsaW5lLWhlaWdodDogbnRoKCRicC12YWwsIDIpO1xuICAgIGZvbnQtc2l6ZTogX3R5LWZvbnQtc2l6ZSgkZm9udC1zaXplLCAkYnJlYWtwb2ludCwgJHR5cGksICRyZW0sICRiYXNlLCAkdHlwaS1tYXApO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG4gIH1cbiAgQGVsc2UgIHtcbiAgICAkZm9udC1zaXplOiAkYnAtdmFsO1xuICAgIGZvbnQtc2l6ZTogX3R5LWZvbnQtc2l6ZSgkZm9udC1zaXplLCAkYnJlYWtwb2ludCwgJHR5cGksICRyZW0sICRiYXNlLCAkdHlwaS1tYXApO1xuICB9XG59IiwiLy8gX3R5LWZvbnQtc2l6ZVxuLy8gPT09PT09PT09PT09PVxuLy8gQ2FsbHMgX3R5LWNhbGMtZm9udC1zaXplIG9yIF90eS1iYXNlLXNpemVcbkBmdW5jdGlvbiBfdHktZm9udC1zaXplKFxuICAkZm9udC1zaXplLFxuICAkYnJlYWtwb2ludCxcbiAgJHR5cGksXG4gICRyZW0sXG4gICRiYXNlOiBmYWxzZSxcbiAgJHR5cGktbWFwOiBmYWxzZVxuKSB7XG4gIEBpZiAkYmFzZSA9PSB0cnVlIHtcbiAgICBAcmV0dXJuIF90eS1iYXNlLXNpemUoJGZvbnQtc2l6ZSk7XG4gIH0gQGVsc2Uge1xuICAgIEByZXR1cm4gX3R5LWNhbGMtZm9udC1zaXplKCRmb250LXNpemUsICRicmVha3BvaW50LCAkdHlwaSwgJHJlbSwgJHR5cGktbWFwKTtcbiAgfVxufVxuXG4vLyBfdHktY2FsYy1mb250LXNpemVcbi8vID09PT09PT1cbi8vIHJldHVybnMgY29ycmVjdCByZW0gdmFsdWUgZGVwZW5kaW5nIG9uXG4vLyBicmVha3BvaW50XG5AZnVuY3Rpb24gX3R5LWNhbGMtZm9udC1zaXplKFxuICAkZm9udC1zaXplLFxuICAkYnJlYWtwb2ludCxcbiAgJHR5cGksXG4gICRyZW0sXG4gICR0eXBpLW1hcDogZmFsc2Vcbikge1xuICBAaWYgdW5pdGxlc3MoJGZvbnQtc2l6ZSkge1xuICAgIEBpZiBmdW5jdGlvbi1leGlzdHMobXMpIHtcbiAgICAgICR0eXBpLW1zOiBtYXAtZ2V0KCR0eXBpLW1hcCwgbXMpO1xuICAgICAgQGlmICRyZW0ge1xuICAgICAgICBAcmV0dXJuIF90eS1zdHJpcC11bml0KF90eS1tcygkZm9udC1zaXplLCAkYnJlYWtwb2ludCwgJHR5cGktbXMsICR0eXBpLW1hcCkpICogMXJlbTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICBAcmV0dXJuIF90eS1tcygkZm9udC1zaXplLCAkYnJlYWtwb2ludCwgJHR5cGktbXMsICR0eXBpLW1hcCk7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICBAZXJyb3IgXCJNb2R1bGFyIFNjYWxlIExpYnJhcnkgcmVxdWlyZWRcIjtcbiAgICB9XG4gIH1cblxuICAvLyBDb252ZXJ0IHB4IGFuZCBlbSBpbnRvIHJlbVxuICBAZWxzZSBpZiAkcmVtIHtcbiAgICBAaWYgdW5pdCgkZm9udC1zaXplKSA9PSAnZW0nIHtcbiAgICAgIEByZXR1cm4gX3R5LXN0cmlwLXVuaXQoJGZvbnQtc2l6ZSkgKiAxcmVtO1xuICAgIH1cblxuICAgIEBlbHNlIGlmIHVuaXQoJGZvbnQtc2l6ZSkgPT0gJ3B4JyB7XG4gICAgICAkYmFzZW1hcDogbWFwLWdldCgkdHlwaSwgJGJyZWFrcG9pbnQpO1xuICAgICAgJGJhc2Vmb250OiBpZih0eXBlLW9mKCRiYXNlbWFwKSA9PSAnbGlzdCcsIG50aCgkYmFzZW1hcCwgMSksICRiYXNlbWFwKTtcblxuICAgICAgQGlmICRiYXNlZm9udCA9PSBudWxsIHtcbiAgICAgICAgJGJhc2Vmb250OiBudGgobWFwLWdldCgkdHlwaSwgbnVsbCksIDEpO1xuICAgICAgfVxuXG4gICAgICBAcmV0dXJuICRmb250LXNpemUgLyAkYmFzZWZvbnQgKiAxcmVtO1xuICAgIH1cblxuICAgIEBlbHNlIHtcbiAgICAgIEByZXR1cm4gJGZvbnQtc2l6ZTtcbiAgICB9XG4gIH1cblxuICAvLyBDb252ZXJ0cyByZW0gYW5kIHB4IGludG8gZW1cbiAgQGVsc2Uge1xuICAgIEBpZiB1bml0KCRmb250LXNpemUpID09ICdyZW0nIHtcbiAgICAgIEByZXR1cm4gX3R5LXN0cmlwLXVuaXQoJGZvbnQtc2l6ZSkgKiAxZW07XG4gICAgfVxuXG4gICAgQGVsc2UgaWYgdW5pdCgkZm9udC1zaXplKSA9PSAncHgnIHtcbiAgICAgICRiYXNlbWFwOiBtYXAtZ2V0KCR0eXBpLCAkYnJlYWtwb2ludCk7XG4gICAgICAkYmFzZWZvbnQ6IGlmKHR5cGUtb2YoJGJhc2VtYXApID09ICdsaXN0JywgbnRoKCRiYXNlbWFwLCAxKSwgJGJhc2VtYXApO1xuXG4gICAgICBAaWYgJGJhc2Vmb250ID09IG51bGwge1xuICAgICAgICAkYmFzZWZvbnQ6IG50aChtYXAtZ2V0KCR0eXBpLCBudWxsKSwgMSk7XG4gICAgICB9XG5cbiAgICAgIEByZXR1cm4gX3R5LWVtKCRmb250LXNpemUsICRiYXNlZm9udCk7XG4gICAgfVxuXG4gICAgQGVsc2Uge1xuICAgICAgQHJldHVybiAkZm9udC1zaXplO1xuICAgIH1cbiAgfVxufVxuXG4vLyBfdHktYmFzZS1zaXplXG4vLyA9PT09PT09PT09PT09XG4vLyBDb252ZXJ0cyBUeXBpIHNpemVzIGludG8gcGVyY2VudGFnZXNcbkBmdW5jdGlvbiBfdHktYmFzZS1zaXplKFxuICAkZm9udC1zaXplXG4pIHtcbiAgQGlmIHVuaXQoJGZvbnQtc2l6ZSkgPT0gJ3B4JyB7XG4gICAgQHJldHVybiAkZm9udC1zaXplIC8gMTZweCAqIDEwMCU7XG4gIH1cblxuICBAZWxzZSB7XG4gICAgQGVycm9yICdUeXBpIGZvbnQgc2l6ZXMgbXVzdCBiZSB3cml0dGVuIGluIHBpeGVscyc7XG4gIH1cbn1cblxuXG4vLyBfdHktc3RyaXAtdW5pdFxuLy8gPT09PT09PT09PT09PT1cbkBmdW5jdGlvbiBfdHktc3RyaXAtdW5pdCgkbnVtKSB7XG4gIEByZXR1cm4gJG51bSAvICgkbnVtICogMCArIDEpO1xufVxuXG4vLyBfdHktZW1cbi8vID09PT09PT09XG5AZnVuY3Rpb24gX3R5LWVtKCRmb250LXNpemUsICRyZWYtc2l6ZTogZmFsc2UpIHtcbiAgQGlmICgkcmVmLXNpemUpIHtcbiAgICBAcmV0dXJuICRmb250LXNpemUgLyAkcmVmLXNpemUgKiAxZW07XG4gIH1cbn1cblxuLy8gX3R5LXJlbVxuLy8gPT09PT09PT09XG5AZnVuY3Rpb24gX3R5LXJlbSgkZm9udC1zaXplKSB7XG4gIEBpZiB1bml0KCRmb250LXNpemUpID09ICdweCcge1xuICAgIEByZXR1cm4gc3RyaXAtdW5pdCgkZm9udC1zaXplKSAvIDE2ICogMXJlbTtcbiAgfVxuICBAZWxzZSBpZiB1bml0KCRmb250LXNpemUpID09ICdlbScge1xuICAgIEByZXR1cm4gc3RyaXAtdW5pdCgkZm9udC1zaXplKSAqIDFyZW07XG4gIH1cbn1cblxuLy8gX3R5LW1zXG4vLyA9PT09PT1cbkBmdW5jdGlvbiBfdHktbXMoXG4gICRtdWx0aXBsaWVyLFxuICAkYnJlYWtwb2ludDogbnVsbCxcbiAgJHR5cGktbXM6ICR0eXBpLW1zLFxuICAkdHlwaS1tYXA6IGZhbHNlXG4pIHtcbiAgJG1zLXNldHRpbmc6IG51bGw7XG4gIEBpZiBtYXAtaGFzLWtleSgkdHlwaS1tcywgJGJyZWFrcG9pbnQpIHtcbiAgICAkbXMtc2V0dGluZzogbWFwLWdldCgkdHlwaS1tcywgJGJyZWFrcG9pbnQpO1xuICB9IEBlbHNlIHtcbiAgICAkbGFzdC12YWxpZC1tczogbWFwLWdldCgkdHlwaS1tYXAsIGxhc3QtdmFsaWQtbXMpO1xuICAgICRtcy1zZXR0aW5nOiBtYXAtZ2V0KCR0eXBpLW1zLCAkbGFzdC12YWxpZC1tcyk7XG4gIH1cblxuICAkdHktbXMtYmFzZTogbnVsbDtcbiAgJHR5LW1zLXJhdGlvOiBudWxsO1xuXG4gIEBmb3IgJGkgZnJvbSAxIHRvIGxlbmd0aCgkbXMtc2V0dGluZykgKyAxIHtcbiAgICAkdmFsOiBudGgoJG1zLXNldHRpbmcsICRpKTtcblxuXG4gICAgLy8gRm9yIGNvbWJpbmF0aW9ucyBvZiBtdWx0aXBsZSBiYXNlcyArIG11bHRpcGxlIHJhdGlvc1xuICAgIEBpZiB0eXBlLW9mKCR2YWwpID09ICdsaXN0JyB7XG4gICAgICBAaWYgbm90IHVuaXRsZXNzKG50aCgkdmFsLCAxKSkge1xuICAgICAgICAkdHktbXMtYmFzZTogJHZhbDtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICAkdHktbXMtcmF0aW86ICR2YWw7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIEZvciBjb21iaW5hdGlvbnMgb2YgMSBiYXNlICsgbXVsdGlwbGUgcmF0aW9zXG4gICAgQGVsc2Uge1xuICAgICAgQGlmIHVuaXRsZXNzKCR2YWwpIHtcbiAgICAgICAgQGlmICR0eS1tcy1yYXRpbyA9PSBudWxsIHtcbiAgICAgICAgICAkdHktbXMtcmF0aW86ICR2YWw7XG4gICAgICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdHktbXMtcmF0aW8pID09IFwibnVtYmVyXCIge1xuICAgICAgICAgICR0eS1tcy1yYXRpbzogJHR5LW1zLXJhdGlvICR2YWw7XG4gICAgICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdHktbXMtcmF0aW8pID09IFwibGlzdFwiIHtcbiAgICAgICAgICAkdHktbXMtcmF0aW86IGFwcGVuZCgkdHktbXMtcmF0aW8sICR2YWwpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGlmICR0eS1tcy1iYXNlID09IG51bGwge1xuICAgICAgICAgICR0eS1tcy1iYXNlOiAkdmFsO1xuICAgICAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJHR5LW1zLWJhc2UpID09ICdudW1iZXInIHtcbiAgICAgICAgICAkdHktbXMtYmFzZTogKCR0eS1tcy1iYXNlICR2YWwpXG4gICAgICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdHktbXMtYmFzZSkgPT0gJ2xpc3QnIHtcbiAgICAgICAgICAkdHktbXMtYmFzZTogYXBwZW5kKCR0eS1tcy1iYXNlLCAkdmFsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAkdHktbXMtYmFzZSA9PSBudWxsIHtcbiAgICAkdHktbXMtYmFzZTogMWVtO1xuICB9XG5cbiAgQHJldHVybiBtcygkbXVsdGlwbGllciwgJHR5LW1zLWJhc2UsICR0eS1tcy1yYXRpbyk7XG59XG5cbi8vIF90eS1nZXQtYnJlYWtwb2ludHNcbi8vID09PT09PT09PT09PT09PT09PT1cbkBmdW5jdGlvbiBfdHktZ2V0LWJyZWFrcG9pbnRzKCRicmVha3BvaW50cywgJHR5cGktbXMsICR0YXJnZXQpIHtcbiAgJF9yZXR1cm46IG51bGw7XG5cbiAgQGVhY2ggJGJyZWFrcG9pbnQsICR2YWwgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICBAaWYgdHlwZS1vZigkdHlwaS1tcykgPT0gJ21hcCcgYW5kIG1hcC1oYXMta2V5KCR0eXBpLW1zLCAkYnJlYWtwb2ludCkge1xuICAgICAgQGlmIG5vdCBpbmRleCgkX3JldHVybiwgJGJyZWFrcG9pbnQpIHtcbiAgICAgICAgJF9yZXR1cm46IGFwcGVuZCgkX3JldHVybiwgJGJyZWFrcG9pbnQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpZiBtYXAtaGFzLWtleSgkdGFyZ2V0LCAkYnJlYWtwb2ludCkge1xuICAgICAgQGlmIG5vdCBpbmRleCgkX3JldHVybiwgJGJyZWFrcG9pbnQpIHtcbiAgICAgICAgJF9yZXR1cm46IGFwcGVuZCgkX3JldHVybiwgJGJyZWFrcG9pbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBAcmV0dXJuICRfcmV0dXJuO1xufVxuXG4vLyBfdHktZ2V0LWJhc2UtZm9udFxuQGZ1bmN0aW9uIF90eS1nZXQtYmFzZS1mb250KCR0eXBpKSB7XG4gICRiYXNlLW1hcDogbWFwLWdldCgkdHlwaSwgbnVsbCk7XG4gIEByZXR1cm4gbnRoKCRiYXNlLW1hcCwgMSk7XG59XG5cbi8vIF90eS1nZXQtYmFzZS1saW5lLWhlaWdodFxuQGZ1bmN0aW9uIF90eS1nZXQtYmFzZS1saW5lLWhlaWdodCgkdHlwaSkge1xuICAkYmFzZS1tYXA6IG1hcC1nZXQoJHR5cGksIG51bGwpO1xuICAkYmFzZS1saW5lLWhlaWdodDogbnVsbDtcblxuICBAaWYgbGVuZ3RoKCRiYXNlLW1hcCkgPiAxIHtcbiAgICAkYmFzZS1saW5lLWhlaWdodDogbnRoKCRiYXNlLW1hcCwgMik7XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciBcIiR0eXBpIG1hcCBzaG91bGQgY29udGFpbiBhIHNlY29uZCBhcmd1bWVudCAobGluZS1oZWlnaHQpIGluIHRoZSBgbnVsbGAga2V5XCI7XG4gIH1cblxuICBAaWYgbm90IHVuaXQoJGJhc2UtbGluZS1oZWlnaHQpID09IFwiXCIge1xuICAgIEBlcnJvciBcImxpbmUtaGVpZ2h0IG11bHRpcGxlIG9uIHRoZSBgbnVsbGAga2V5IHNob3VsZCBiZSB1bml0bGVzc1wiO1xuICB9XG5cbiAgQHJldHVybiAkYmFzZS1saW5lLWhlaWdodDtcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIEEgbWl4aW4gZm9yIGdlbmVyYXRpbmcgdmVuZG9yIHByZWZpeGVzIG9uIG5vbi1zdGFuZGFyZGl6ZWQgcHJvcGVydGllcy5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkcHJvcGVydHlcbi8vLyAgIFByb3BlcnR5IHRvIHByZWZpeFxuLy8vXG4vLy8gQHBhcmFtIHsqfSAkdmFsdWVcbi8vLyAgIFZhbHVlIHRvIHVzZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkcHJlZml4ZXNcbi8vLyAgIFByZWZpeGVzIHRvIGRlZmluZVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIEBpbmNsdWRlIHByZWZpeGVyKGJvcmRlci1yYWRpdXMsIDEwcHgsIHdlYmtpdCBtcyBzcGVjKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICB9XG4vLy9cbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXdlYmtpdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbW96aWxsYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbWljcm9zb2Z0XG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci1vcGVyYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itc3BlY1xuXG5AbWl4aW4gcHJlZml4ZXIoJHByb3BlcnR5LCAkdmFsdWUsICRwcmVmaXhlcykge1xuICBAZWFjaCAkcHJlZml4IGluICRwcmVmaXhlcyB7XG4gICAgQGlmICRwcmVmaXggPT0gd2Via2l0IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci13ZWJraXQge1xuICAgICAgICAtd2Via2l0LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtb3oge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1vemlsbGEge1xuICAgICAgICAtbW96LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtcyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3ItbWljcm9zb2Z0IHtcbiAgICAgICAgLW1zLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBvIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1vcGVyYSB7XG4gICAgICAgIC1vLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBzcGVjIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1zcGVjIHtcbiAgICAgICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgICB9XG4gICAgfSBAZWxzZSAge1xuICAgICAgQHdhcm4gXCJVbnJlY29nbml6ZWQgcHJlZml4OiAjeyRwcmVmaXh9XCI7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBkaXNhYmxlLXByZWZpeC1mb3ItYWxsKCkge1xuICAkcHJlZml4LWZvci13ZWJraXQ6ICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1vemlsbGE6ICAgZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3ItbWljcm9zb2Z0OiBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1vcGVyYTogICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLXNwZWM6ICAgICAgZmFsc2UgIWdsb2JhbDtcbn1cbiIsImh0bWwsIGJvZHkge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xufVxuXG5maWd1cmUge1xuICAgIEBpbmNsdWRlIHplcm8tb3V0O1xufVxuXG4ub3Yge1xuICAgIEBpbmNsdWRlIGFicy1wb3MoJHQ6IDAsICRyOjAsICRiOjAsICRsOjApO1xufVxuXG4ubWFpbi1zY2VuZSB7XG4gICAgLy8gQGluY2x1ZGUgbXVpLWFuaW1hdGlvbihmYWRlKTtcbiAgICBAaW5jbHVkZSB6ZXJvLW91dDtcbiAgICBoZWlnaHQ6IDEwMCU7IFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluO1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMS4ycztcblxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG59XG5cbi5iY2cge1xuICAgIEBpbmNsdWRlIGFicy1wb3MoJHQ6IDAsICRsOiAwKTtcbiAgICBAaW5jbHVkZSBiZy1zaXplKGNvdmVyKTtcbiAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEyMCU7XG4gICAgfVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDc1JSA1MCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IGF1dG87XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG5IZXJvIGNvbXBvbmVudHMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uaGVhZGVyLWNvbnRhaW5lciB7XG4gICAgLmJjZyB7XG4gICAgICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBiZy1zaXplKDEyMCUpO1xuICAgICAgICB9XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgjeyRpbWdQYXRofS9pbWctYmNrLWhlcm8uanBnKTtcblxuICAgIH1cbiAgICAub3Yge1xuICAgICAgICBAaW5jbHVkZSBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCBibGFjaywgcmdiYSgwLDAsMCwwKSwgYmxhY2spO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaygwKTtcblxuICAgICAgICBvcGFjaXR5OiAuODU7XG4gICAgfVxufVxuXG4jY2QtY29tbXVuaXR5IHtcbiAgICAuYmNnIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltZ1BhdGh9L2ltZy1iY2stY29tbXVuaXR5LmpwZyk7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDQ4JSAtMTAlO1xuXG5cbiAgICB9XG59XG5cbiNjZC1jb25uZWN0aW9uIHtcbiAgICAuYmNnIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltZ1BhdGh9L2ltZy1iY2stY29ubmVjdGlvbi5qcGcpO1xuXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgICB9XG59XG5cbiNjZC1leHBlcmllbmNlIHtcbiAgICAuYmNnIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltZ1BhdGh9L2ltZy1iY2stZXhwZXJpZW5jZS5qcGcpO1xuXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgICB9XG59XG5cbiNjZC1lbmdhZ2Uge1xuICAgIC5iY2cge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skaW1nUGF0aH0vaW1nLWJjay1lbmdhZ2UuanBnKTtcblxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCUgMDtcbiAgICB9XG59XG5cbiNjZC1zdW1tYXJ5IHtcbiAgICAuYmNnIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltZ1BhdGh9L2ltZy1iY2stc3VtbWFyeS5qcGcpO1xuXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSAwO1xuICAgIH1cbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cbiAgICBNYWluIGNvbXBvbmVudHMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi5jZC1zZWN0aW9uIHtcbiAgICBAaW5jbHVkZSBmYWRlSW4oKTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xufVxuXG4uY2Qtc2VjdGlvbjpub3QoLmhlcm8pIHtcbiAgICBAaW5jbHVkZSBicChtZWRpdW1VcCkge1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICBtaW4taGVpZ2h0OiA4MDBweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4gICAgQGluY2x1ZGUgYnAobWVkaXVtKSB7XG4gICAgICAgIHBhZGRpbmctdG9wOiByZW0oMjAwKTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDEyJTtcbiAgICB9XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY3Rpb24tYmNrO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZSguNCk7XG4gICAgcGFkZGluZy10b3A6IDMwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDgwMHB4O1xuICAgIC5vdiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrKC43KTtcbiAgICAgICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrKC40KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuYmNnIHtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAxLjFzIGxpbmVhcjtcbiAgICAgICAgb3BhY2l0eTogLjI7XG4gICAgICAgICYuYmNnLXZpc2libGUge1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuZW50cnkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLXJvdztcbiAgICAgICAgcGFkZGluZzogMCAxZW0gMWVtO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGNlbnRlci1ibG9jaztcbiAgICAgICAgICAgIEBpbmNsdWRlIGJwKG1lZGl1bVVwKSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogMCwgJGw6LjkzNzVyZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OiAwLCAkbDoyLjdyZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgICAgICAuY29udGVudCB7XG4gICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbDtcbiAgICAgICAgICAgIEBpbmNsdWRlIGdyaWQtY29sdW1uLWVuZDtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJwKG1lZGl1bVVwKSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jb2w7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jb2woNyk7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICAuc2VjdGlvbi10aXRsZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5jb250ZW50LXZpc2libGUge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW4oJGR1cmF0aW9uOiAuNXMsICRkZWxheTogMXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuc21hbGwtdGl0bGUge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW5VcCgkZHVyYXRpb246IC41cywgJGRlbGF5OiAuM3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmYWRlSW5VcCgkZHVyYXRpb246IC41cywgJGRlbGF5OiAuNXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZmFkZUluVXAoJGR1cmF0aW9uOiAuNXMsICRkZWxheTogLjhzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnNlY3Rpb24tZm9vdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZmFkZUluVXAoJGR1cmF0aW9uOiAuNXMsICRkZWxheTogMXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmLnN1bW1hcnkge1xuICAgICAgICAuZW50cnkge1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDYwcmVtOyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5jb250ZW50IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbCgpO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmLmluZm8tZ3JhcGhpYyB7XG4gICAgICAgIC5lbnRyeSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBicChtZWRpdW0pIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSk7XG4gICAgICAgICAgICAgICAgdG9wOiBhdXRvO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5jb250ZW50IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbCg2KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmZlYXR1cmVkIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBicChtZWRpdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jb2w7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OiAwLCAkcjogMTIlKTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHJlbSgzODBweCk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuIERlZmF1bHQgUGFnZXMgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4gXG4ucGFnZS1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgcGFkZGluZy1ib3R0b206IHJlbSgxMDApOyBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLmNvbnRlbnQge1xuICAgICAgICAudGl0bGUtY29udGFpbmVyIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRibGFjayB1cmwoI3skaW1nUGF0aH0vaW1nLXBhZ2UtaGVhZGVyLmpwZykgbm8tcmVwZWF0IDUwJSA1MCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07IFxuICAgICAgICAgICAgcGFkZGluZzogcmVtKDE1MCkgMnJlbSByZW0oMzApO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgLm92IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjayguNCk7IFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCBibGFjayguMyk7IFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBcbiAgICAgICAgXG4gICAgfVxuICAgIC5jb250ZW50LWVudHJ5IHtcbiAgICAgICAgQGluY2x1ZGUgY2VudGVyLWJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiA3MCU7IFxuICAgIH1cbiAgICAucGFnZS1mZWF0dXJlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMi41ZW07IFxuICAgIH1cbn1cblxuLmVuZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIiwiQG1peGluIGxpbmVhci1ncmFkaWVudCgkcG9zLCAkZzEsICRnMjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJGczOiBudWxsLCAkZzQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICRnNTogbnVsbCwgJGc2OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAkZzc6IG51bGwsICRnODogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgJGc5OiBudWxsLCAkZzEwOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAkZmFsbGJhY2s6IG51bGwpIHtcbiAgLy8gRGV0ZWN0IHdoYXQgdHlwZSBvZiB2YWx1ZSBleGlzdHMgaW4gJHBvc1xuICAkcG9zLXR5cGU6IHR5cGUtb2YobnRoKCRwb3MsIDEpKTtcbiAgJHBvcy1zcGVjOiBudWxsO1xuICAkcG9zLWRlZ3JlZTogbnVsbDtcblxuICAvLyBJZiAkcG9zIGlzIG1pc3NpbmcgZnJvbSBtaXhpbiwgcmVhc3NpZ24gdmFycyBhbmQgYWRkIGRlZmF1bHQgcG9zaXRpb25cbiAgQGlmICgkcG9zLXR5cGUgPT0gY29sb3IpIG9yIChudGgoJHBvcywgMSkgPT0gXCJ0cmFuc3BhcmVudFwiKSAge1xuICAgICRnMTA6ICRnOTsgJGc5OiAkZzg7ICRnODogJGc3OyAkZzc6ICRnNjsgJGc2OiAkZzU7XG4gICAgJGc1OiAkZzQ7ICRnNDogJGczOyAkZzM6ICRnMjsgJGcyOiAkZzE7ICRnMTogJHBvcztcbiAgICAkcG9zOiBudWxsO1xuICB9XG5cbiAgQGlmICRwb3Mge1xuICAgICRwb3NpdGlvbnM6IF9saW5lYXItcG9zaXRpb25zLXBhcnNlcigkcG9zKTtcbiAgICAkcG9zLWRlZ3JlZTogbnRoKCRwb3NpdGlvbnMsIDEpO1xuICAgICRwb3Mtc3BlYzogICBudGgoJHBvc2l0aW9ucywgMik7XG4gIH1cblxuICAkZnVsbDogJGcxLCAkZzIsICRnMywgJGc0LCAkZzUsICRnNiwgJGc3LCAkZzgsICRnOSwgJGcxMDtcblxuICAvLyBTZXQgJGcxIGFzIHRoZSBkZWZhdWx0IGZhbGxiYWNrIGNvbG9yXG4gICRmYWxsYmFjay1jb2xvcjogbnRoKCRnMSwgMSk7XG5cbiAgLy8gSWYgJGZhbGxiYWNrIGlzIGEgY29sb3IgdXNlIHRoYXQgY29sb3IgYXMgdGhlIGZhbGxiYWNrIGNvbG9yXG4gIEBpZiAodHlwZS1vZigkZmFsbGJhY2spID09IGNvbG9yKSBvciAoJGZhbGxiYWNrID09IFwidHJhbnNwYXJlbnRcIikge1xuICAgICRmYWxsYmFjay1jb2xvcjogJGZhbGxiYWNrO1xuICB9XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGZhbGxiYWNrLWNvbG9yO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgkcG9zLWRlZ3JlZSAkZnVsbCk7IC8vIFNhZmFyaSA1LjErLCBDaHJvbWVcbiAgYmFja2dyb3VuZC1pbWFnZTogdW5xdW90ZShcImxpbmVhci1ncmFkaWVudCgjeyRwb3Mtc3BlY30jeyRmdWxsfSlcIik7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBDaGFuZ2UgdGhlIGJlaGF2aW9yIG9mIGNvbHVtbnMgZGVmaW5lZCBpbnNpZGUgdGhpcyBtaXhpbiB0byB1c2UgYSBkaWZmZXJlbnQgY29sdW1uIGNvdW50LlxuLy8vIEBjb250ZW50XG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJGNvbHVtbnMgLSBOdW1iZXIgb2YgY29sdW1ucyB0byB1c2UuXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkcm9vdCBbZmFsc2VdXG4vLy8gICBJZiBgZmFsc2VgLCBzZWxlY3RvcnMgaW5zaWRlIHRoaXMgbWl4aW4gd2lsbCBuZXN0IGluc2lkZSB0aGUgcGFyZW50IHNlbGVjdG9yLlxuLy8vICAgSWYgYHRydWVgLCBzZWxlY3RvcnMgd2lsbCBub3QgbmVzdC5cbkBtaXhpbiBncmlkLWNvbnRleHQoXG4gICRjb2x1bW5zLFxuICAkcm9vdDogZmFsc2Vcbikge1xuICAvLyBTdG9yZSB0aGUgY3VycmVudCBjb2x1bW4gY291bnQgc28gaXQgY2FuIGJlIHJlLXNldCBsYXRlclxuICAkb2xkLWdyaWQtY29sdW1uLWNvdW50OiAkZ3JpZC1jb2x1bW4tY291bnQ7XG4gICRncmlkLWNvbHVtbi1jb3VudDogJGNvbHVtbnMgIWdsb2JhbDtcblxuICBAaWYgJHJvb3Qge1xuICAgIEBhdC1yb290IHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICAvLyBSZXN0b3JlIHRoZSBvbGQgY29sdW1uIGNvdW50XG4gICRncmlkLWNvbHVtbi1jb3VudDogJG9sZC1ncmlkLWNvbHVtbi1jb3VudCAhZ2xvYmFsO1xufVxuXG4vLy8gQ3JlYXRlcyBhIGdyaWQgcm93LlxuLy8vIEBjb250ZW50XG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJGNvbHVtbnMgW251bGxdIC0gQ29sdW1uIGNvdW50IGZvciB0aGlzIHJvdy4gYG51bGxgIHdpbGwgdXNlIHRoZSBkZWZhdWx0IGNvbHVtbiBjb3VudC5cbi8vLyBAcGFyYW0ge0tleXdvcmRzfSAkYmVoYXZpb3IgW251bGxdXG4vLy8gICBNb2RpZmljYXRpb25zIHRvIHRoZSBkZWZhdWx0IGdyaWQgc3R5bGVzLiBgbmVzdGAgaW5kaWNhdGVzIHRoZSByb3cgd2lsbCBiZSBwbGFjZWQgaW5zaWRlIGFub3RoZXIgcm93LiBgY29sbGFwc2VgIGluZGljYXRlcyB0aGF0IHRoZSBjb2x1bW5zIGluc2lkZSB0aGlzIHJvdyB3aWxsIG5vdCBoYXZlIHBhZGRpbmcuIGBuZXN0IGNvbGxhcHNlYCBjb21iaW5lcyBib3RoIGJlaGF2aW9ycy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIFskZ3JpZC1yb3ctd2lkdGhdIC0gTWF4aW11bSB3aWR0aCBvZiB0aGUgcm93LlxuLy8vIEBwYXJhbSB7Qm9vbGVhbn0gJGNmIFt0cnVlXSAtIFdoZXRoZXIgb3Igbm90IHRvIGluY2x1ZGUgYSBjbGVhcmZpeC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGd1dHRlciBbJGdyaWQtY29sdW1uLWd1dHRlcl0gLSBHdXR0ZXIgdG8gdXNlIHdoZW4gaW52ZXJ0aW5nIG1hcmdpbnMsIGluIGNhc2UgdGhlIHJvdyBpcyBuZXN0ZWQuXG5AbWl4aW4gZ3JpZC1yb3coXG4gICRjb2x1bW5zOiBudWxsLFxuICAkYmVoYXZpb3I6IG51bGwsXG4gICR3aWR0aDogJGdyaWQtcm93LXdpZHRoLFxuICAkY2Y6IHRydWUsXG4gICRndXR0ZXI6ICRncmlkLWNvbHVtbi1ndXR0ZXJcbikge1xuICAkbWFyZ2luOiBhdXRvO1xuXG4gIEBpZiBpbmRleCgkYmVoYXZpb3IsIG5lc3QpICE9IG51bGwge1xuICAgIEBpbmNsdWRlIGdyaWQtcm93LW5lc3QoJGd1dHRlcik7XG5cbiAgICBAaWYgaW5kZXgoJGJlaGF2aW9yLCBjb2xsYXBzZSkgIT0gbnVsbCB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gIH1cbiAgQGVsc2Uge1xuICAgIG1heC13aWR0aDogJHdpZHRoO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxuXG4gIEBpZiAkY2Yge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICB9XG5cbiAgQGlmICRjb2x1bW5zICE9IG51bGwge1xuICAgIEBpbmNsdWRlIGdyaWQtY29udGV4dCgkY29sdW1ucykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vLyBJbnZlcnRzIHRoZSBtYXJnaW5zIG9mIGEgcm93IHRvIG5lc3QgaXQgaW5zaWRlIG9mIGEgY29sdW1uLlxuLy8vXG4vLy8gQHBhcmFtIHtNYXB8bnVsbH0gJGd1dHRlciBbbnVsbF0gLSBHdXR0ZXIgdmFsdWUgdG8gdXNlIHdoZW4gaW52ZXJ0aW5nIHRoZSBtYXJnaW5zLiBTZXQgdG8gYG51bGxgIHRvIHJlZmVyIHRvIHRoZSByZXNwb25zaXZlIGd1dHRlciBzZXR0aW5ncy5cbkBtaXhpbiBncmlkLXJvdy1uZXN0KCRndXR0ZXI6ICRncmlkLWNvbHVtbi1ndXR0ZXIpIHtcbiAgQGlmIHR5cGUtb2YoJGd1dHRlcikgPT0gJ251bWJlcicge1xuICAgICRndXR0ZXI6ICgkLXpmLXplcm8tYnJlYWtwb2ludDogJGd1dHRlcik7XG4gIH1cblxuICBAZWFjaCAkYnJlYWtwb2ludCwgJHZhbHVlIGluICRndXR0ZXIge1xuICAgICRtYXJnaW46IHJlbS1jYWxjKCR2YWx1ZSkgLyAyICogLTE7XG5cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicmVha3BvaW50KSB7XG4gICAgICBtYXJnaW4tbGVmdDogJG1hcmdpbjtcbiAgICAgIG1hcmdpbi1yaWdodDogJG1hcmdpbjtcbiAgICB9XG4gIH1cbn1cbiIsIi8vIEZvdW5kYXRpb24gZm9yIFNpdGVzIGJ5IFpVUkJcbi8vIGZvdW5kYXRpb24uenVyYi5jb21cbi8vIExpY2Vuc2VkIHVuZGVyIE1JVCBPcGVuIFNvdXJjZVxuXG4vLy8vXG4vLy8gQGdyb3VwIGZ1bmN0aW9uc1xuLy8vL1xuXG4kZ2xvYmFsLWZvbnQtc2l6ZTogMTAwJSAhZGVmYXVsdDtcblxuLy8gc2Nzcy1saW50OmRpc2FibGUgWmVyb1VuaXRcblxuLy8vIFJlbW92ZXMgdGhlIHVuaXQgKGUuZy4gcHgsIGVtLCByZW0pIGZyb20gYSB2YWx1ZSwgcmV0dXJuaW5nIHRoZSBudW1iZXIgb25seS5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbnVtIC0gTnVtYmVyIHRvIHN0cmlwIHVuaXQgZnJvbS5cbi8vL1xuLy8vIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBzYW1lIG51bWJlciwgc2FucyB1bml0LlxuQGZ1bmN0aW9uIHN0cmlwLXVuaXQoJG51bSkge1xuICBAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcbn1cblxuLy8vIENvbnZlcnRzIG9uZSBvciBtb3JlIHBpeGVsIHZhbHVlcyBpbnRvIG1hdGNoaW5nIHJlbSB2YWx1ZXMuXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcnxMaXN0fSAkdmFsdWVzIC0gT25lIG9yIG1vcmUgdmFsdWVzIHRvIGNvbnZlcnQuIEJlIHN1cmUgdG8gc2VwYXJhdGUgdGhlbSB3aXRoIHNwYWNlcyBhbmQgbm90IGNvbW1hcy4gSWYgeW91IG5lZWQgdG8gY29udmVydCBhIGNvbW1hLXNlcGFyYXRlZCBsaXN0LCB3cmFwIHRoZSBsaXN0IGluIHBhcmVudGhlc2VzLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkYmFzZSBbbnVsbF0gLSBUaGUgYmFzZSB2YWx1ZSB0byB1c2Ugd2hlbiBjYWxjdWxhdGluZyB0aGUgYHJlbWAuIElmIHlvdSdyZSB1c2luZyBGb3VuZGF0aW9uIG91dCBvZiB0aGUgYm94LCB0aGlzIGlzIDE2cHguIElmIHRoaXMgcGFyYW1ldGVyIGlzIGBudWxsYCwgdGhlIGZ1bmN0aW9uIHdpbGwgcmVmZXJlbmNlIHRoZSBgJGJhc2UtZm9udC1zaXplYCB2YXJpYWJsZSBhcyB0aGUgYmFzZS5cbi8vL1xuLy8vIEByZXR1cm5zIHtMaXN0fSBBIGxpc3Qgb2YgY29udmVydGVkIHZhbHVlcy5cbkBmdW5jdGlvbiByZW0tY2FsYygkdmFsdWVzLCAkYmFzZTogbnVsbCkge1xuICAkcmVtLXZhbHVlczogKCk7XG4gICRjb3VudDogbGVuZ3RoKCR2YWx1ZXMpO1xuXG4gIC8vIElmIG5vIGJhc2UgaXMgZGVmaW5lZCwgZGVmZXIgdG8gdGhlIGdsb2JhbCBmb250IHNpemVcbiAgQGlmICRiYXNlID09IG51bGwge1xuICAgICRiYXNlOiAkZ2xvYmFsLWZvbnQtc2l6ZTtcbiAgfVxuXG4gIC8vIElmIHRoZSBiYXNlIGZvbnQgc2l6ZSBpcyBhICUsIHRoZW4gbXVsdGlwbHkgaXQgYnkgMTZweFxuICAvLyBUaGlzIGlzIGJlY2F1c2UgMTAwJSBmb250IHNpemUgPSAxNnB4IGluIG1vc3QgYWxsIGJyb3dzZXJzXG4gIEBpZiB1bml0KCRiYXNlKSA9PSAnJScge1xuICAgICRiYXNlOiAoJGJhc2UgLyAxMDAlKSAqIDE2cHg7XG4gIH1cbiAgXG4gIC8vIFVzaW5nIHJlbSBhcyBiYXNlIGFsbG93cyBjb3JyZWN0IHNjYWxpbmdcbiAgQGlmIHVuaXQoJGJhc2UpID09ICdyZW0nIHtcbiAgICAkYmFzZTogc3RyaXAtdW5pdCgkYmFzZSkgKiAxNnB4O1xuICB9XG5cbiAgQGlmICRjb3VudCA9PSAxIHtcbiAgICBAcmV0dXJuIC16Zi10by1yZW0oJHZhbHVlcywgJGJhc2UpO1xuICB9XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY291bnQge1xuICAgICRyZW0tdmFsdWVzOiBhcHBlbmQoJHJlbS12YWx1ZXMsIC16Zi10by1yZW0obnRoKCR2YWx1ZXMsICRpKSwgJGJhc2UpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlbS12YWx1ZXM7XG59XG5cbi8vIENvbnZlcnRzIGEgdW5pdGxlc3MsIHBpeGVsLCBvciByZW0gdmFsdWUgdG8gZW0sIGZvciB1c2UgaW4gYnJlYWtwb2ludHMuXG5AZnVuY3Rpb24gLXpmLWJwLXRvLWVtKCR2YWx1ZSkge1xuICAvLyBQaXhlbCBhbmQgdW5pdGxlc3MgdmFsdWVzIGFyZSBjb252ZXJ0ZWQgdG8gcmVtc1xuICBAaWYgdW5pdCgkdmFsdWUpID09ICdweCcgb3IgdW5pdGxlc3MoJHZhbHVlKSB7XG4gICAgJHZhbHVlOiByZW0tY2FsYygkdmFsdWUsICRiYXNlOiAxNnB4KTtcbiAgfVxuXG4gIC8vIFRoZW4gdGhlIHZhbHVlIGlzIGNvbnZlcnRlZCB0byBlbXNcbiAgQHJldHVybiBzdHJpcC11bml0KCR2YWx1ZSkgKiAxZW07XG59XG5cbi8vLyBDb252ZXJ0cyBhIHBpeGVsIHZhbHVlIHRvIG1hdGNoaW5nIHJlbSB2YWx1ZS4gKkFueSogdmFsdWUgcGFzc2VkLCByZWdhcmRsZXNzIG9mIHVuaXQsIGlzIGFzc3VtZWQgdG8gYmUgYSBwaXhlbCB2YWx1ZS4gQnkgZGVmYXVsdCwgdGhlIGJhc2UgcGl4ZWwgdmFsdWUgdXNlZCB0byBjYWxjdWxhdGUgdGhlIHJlbSB2YWx1ZSBpcyB0YWtlbiBmcm9tIHRoZSBgJGdsb2JhbC1mb250LXNpemVgIHZhcmlhYmxlLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFBpeGVsIHZhbHVlIHRvIGNvbnZlcnQuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRiYXNlIFtudWxsXSAtIEJhc2UgZm9yIHBpeGVsIGNvbnZlcnNpb24uXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBBIG51bWJlciBpbiByZW1zLCBjYWxjdWxhdGVkIGJhc2VkIG9uIHRoZSBnaXZlbiB2YWx1ZSBhbmQgdGhlIGJhc2UgcGl4ZWwgdmFsdWUuIHJlbSB2YWx1ZXMgYXJlIHBhc3NlZCB0aHJvdWdoIGFzIGlzLlxuQGZ1bmN0aW9uIC16Zi10by1yZW0oJHZhbHVlLCAkYmFzZTogbnVsbCkge1xuICAvLyBDaGVjayBpZiB0aGUgdmFsdWUgaXMgYSBudW1iZXJcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSAhPSAnbnVtYmVyJyB7XG4gICAgQHdhcm4gaW5zcGVjdCgkdmFsdWUpICsgJyB3YXMgcGFzc2VkIHRvIHJlbS1jYWxjKCksIHdoaWNoIGlzIG5vdCBhIG51bWJlci4nO1xuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIHJlbSBpZiB1bml0cyBmb3IgJHZhbHVlIGlzIG5vdCByZW1cbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSAncmVtJyB7XG4gICAgJHZhbHVlOiBzdHJpcC11bml0KCR2YWx1ZSkgLyBzdHJpcC11bml0KCRiYXNlKSAqIDFyZW07XG4gIH1cblxuICAvLyBUdXJuIDByZW0gaW50byAwXG4gIEBpZiAkdmFsdWUgPT0gMHJlbSB7XG4gICAgJHZhbHVlOiAwO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBTZXQgdGhlIHdpZHRoIG9mIGEgZ3JpZCBjb2x1bW4uXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcnxMaXN0fSAkd2lkdGggWyRncmlkLWNvbHVtbi1jb3VudF0gLSBXaWR0aCB0byBtYWtlIHRoZSBjb2x1bW4uIFlvdSBjYW4gcGFzcyBpbiBhbnkgdmFsdWUgYWNjZXB0ZWQgYnkgdGhlIGBncmlkLWNvbHVtbigpYCBmdW5jdGlvbiwgc3VjaCBhcyBgNmAsIGA1MCVgLCBvciBgMSBvZiAyYC5cbkBtaXhpbiBncmlkLWNvbHVtbi1zaXplKFxuICAkY29sdW1uczogJGdyaWQtY29sdW1uLWNvdW50XG4pIHtcbiAgd2lkdGg6IGdyaWQtY29sdW1uKCRjb2x1bW5zKTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLXNpemUoKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uLXNpemVcbkBtaXhpbiBncmlkLWNvbC1zaXplKFxuICAkY29sdW1uczogJGdyaWQtY29sdW1uLWNvdW50XG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tc2l6ZSgkY29sdW1ucyk7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBDYWxjdWxhdGVzIHRoZSB3aWR0aCBvZiBhIGNvbHVtbiBiYXNlZCBvbiBhIG51bWJlciBvZiBmYWN0b3JzLlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ8TGlzdH0gJGNvbHVtbnNcbi8vLyAgIFdpZHRoIG9mIHRoZSBjb2x1bW4uIEFjY2VwdHMgbXVsdGlwbGUgdmFsdWVzOlxuLy8vICAgLSBBIHBlcmNlbnRhZ2UgdmFsdWUgd2lsbCBtYWtlIHRoZSBjb2x1bW4gdGhhdCBleGFjdCBzaXplLlxuLy8vICAgLSBBIHNpbmdsZSBkaWdpdCB3aWxsIG1ha2UgdGhlIGNvbHVtbiBzcGFuIHRoYXQgbnVtYmVyIG9mIGNvbHVtbnMgd2lkZSwgdGFraW5nIGludG8gYWNjb3VudCB0aGUgY29sdW1uIGNvdW50IG9mIHRoZSBwYXJlbnQgcm93LlxuLy8vICAgLSBBIHN0cmluZyBvZiB0aGUgZm9ybWF0IFwieCBvZiB5XCIgd2lsbCBtYWtlIGEgY29sdW1uIHRoYXQgaXMgKngqIGNvbHVtbnMgd2lkZSwgYXNzdW1pbmcgKnkqIHRvdGFsIGNvbHVtbnMgZm9yIHRoZSBwYXJlbnQuXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBBIGNhbGN1bGF0ZWQgcGVyY2VudGFnZSB2YWx1ZS5cbkBmdW5jdGlvbiBncmlkLWNvbHVtbigkY29sdW1ucykge1xuICAkd2lkdGg6IDAlO1xuXG4gIC8vIFBhcnNpbmcgcGVyY2VudHMsIGRlY2ltYWxzLCBhbmQgY29sdW1uIGNvdW50c1xuICBAaWYgdHlwZS1vZigkY29sdW1ucykgPT0gJ251bWJlcicge1xuICAgIEBpZiB1bml0KCRjb2x1bW5zKSA9PSAnJScge1xuICAgICAgJHdpZHRoOiAkY29sdW1ucztcbiAgICB9XG4gICAgQGVsc2UgaWYgJGNvbHVtbnMgPCAxIHtcbiAgICAgICR3aWR0aDogcGVyY2VudGFnZSgkY29sdW1ucyk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICR3aWR0aDogcGVyY2VudGFnZSgkY29sdW1ucyAvICRncmlkLWNvbHVtbi1jb3VudCk7XG4gICAgfVxuICB9XG5cbiAgLy8gUGFyc2luZyBcIm4gb2YgblwiIGV4cHJlc3Npb25zXG4gIEBlbHNlIGlmIHR5cGUtb2YoJGNvbHVtbnMpID09ICdsaXN0JyB7XG4gICAgQGlmIGxlbmd0aCgkY29sdW1ucykgIT0gMyB7XG4gICAgICBAZXJyb3IgJ1dyb25nIHN5bnRheCBmb3IgZ3JpZC1jb2x1bW4oKS4gVXNlIHRoZSBmb3JtYXQgXCJuIG9mIG5cIi4nO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UobnRoKCRjb2x1bW5zLCAxKSAvIG50aCgkY29sdW1ucywgMykpO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFueXRoaW5nIGVsc2UgaXMgaW5jb3JyZWN0XG4gIEBlbHNlIHtcbiAgICBAZXJyb3IgJ1dyb25nIHN5bnRheCBmb3IgZ3JpZC1jb2x1bW4oKS4gVXNlIGEgbnVtYmVyLCBkZWNpbWFsLCBwZXJjZW50YWdlLCBvciBcIm4gb2YgblwiLic7XG4gIH1cblxuICBAcmV0dXJuICR3aWR0aDtcbn1cblxuLy8vIENyZWF0ZXMgYSBncmlkIGNvbHVtbi5cbi8vL1xuLy8vIEBwYXJhbSB7TWl4ZWR9ICRjb2x1bW5zIFskZ3JpZC1jb2x1bW4tY291bnRdIC0gV2lkdGggb2YgdGhlIGNvbHVtbi4gUmVmZXIgdG8gdGhlIGBncmlkLWNvbHVtbigpYCBmdW5jdGlvbiB0byBzZWUgcG9zc2libGUgdmFsdWVzLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZ3V0dGVyIFskZ3JpZC1jb2x1bW4tZ3V0dGVyXSAtIFNwYWNpbmcgYmV0d2VlbiBjb2x1bW5zLlxuQG1peGluIGdyaWQtY29sdW1uKFxuICAkY29sdW1uczogJGdyaWQtY29sdW1uLWNvdW50LFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tc2l6ZSgkY29sdW1ucyk7XG4gIGZsb2F0OiAkZ2xvYmFsLWxlZnQ7XG5cbiAgLy8gR3V0dGVyc1xuICBAaWYgdHlwZS1vZigkZ3V0dGVyKSA9PSAnbWFwJyB7XG4gICAgQGVhY2ggJGJyZWFrcG9pbnQsICR2YWx1ZSBpbiAkZ3V0dGVyIHtcbiAgICAgICRwYWRkaW5nOiByZW0tY2FsYygkdmFsdWUpIC8gMjtcblxuICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkYnJlYWtwb2ludCkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRwYWRkaW5nO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkcGFkZGluZztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgQGVsc2UgaWYgdHlwZS1vZigkZ3V0dGVyKSA9PSAnbnVtYmVyJyBhbmQgc3RyaXAtdW5pdCgkZ3V0dGVyKSA+IDAge1xuICAgICRwYWRkaW5nOiByZW0tY2FsYygkZ3V0dGVyKSAvIDI7XG4gICAgcGFkZGluZy1sZWZ0OiAkcGFkZGluZztcbiAgICBwYWRkaW5nLXJpZ2h0OiAkcGFkZGluZztcbiAgfVxuXG4gIC8vIExhc3QgY29sdW1uIGFsaWdubWVudFxuICBAaWYgJGdyaWQtY29sdW1uLWFsaWduLWVkZ2Uge1xuICAgICY6bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICBmbG9hdDogJGdsb2JhbC1yaWdodDtcbiAgICB9XG4gIH1cbn1cblxuLy8vIENyZWF0ZXMgYSBncmlkIGNvbHVtbiByb3cuIFRoaXMgaXMgdGhlIGVxdWl2YWxlbnQgb2YgYWRkaW5nIGAucm93YCBhbmQgYC5jb2x1bW5gIHRvIHRoZSBzYW1lIGVsZW1lbnQuXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJGd1dHRlciBbJGdyaWQtY29sdW1uLWd1dHRlcl0gLSBXaWR0aCBvZiB0aGUgZ3V0dGVycyBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgY29sdW1uIHJvdy5cbkBtaXhpbiBncmlkLWNvbHVtbi1yb3coXG4gICRndXR0ZXI6ICRncmlkLWNvbHVtbi1ndXR0ZXJcbikge1xuICBAaW5jbHVkZSBncmlkLXJvdztcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4oJGd1dHRlcjogJGd1dHRlcik7XG5cbiAgJixcbiAgJjpsYXN0LWNoaWxkIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgfVxufVxuXG4vLy8gU2hvcnRoYW5kIGZvciBgZ3JpZC1jb2x1bW4oKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uXG5AZnVuY3Rpb24gZ3JpZC1jb2woXG4gICRjb2x1bW5zOiAkZ3JpZC1jb2x1bW4tY291bnRcbikge1xuICBAcmV0dXJuIGdyaWQtY29sdW1uKCRjb2x1bW5zKTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtblxuQG1peGluIGdyaWQtY29sKFxuICAkY29sdW1uczogJGdyaWQtY29sdW1uLWNvdW50LFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4oJGNvbHVtbnMsICRndXR0ZXIpO1xufVxuXG4vLy8gU2hvcnRoYW5kIGZvciBgZ3JpZC1jb2x1bW4tcm93KClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi1yb3dcbkBtaXhpbiBncmlkLWNvbC1yb3coXG4gICRndXR0ZXI6ICRncmlkLWNvbHVtbi1ndXR0ZXJcbikge1xuICBAaW5jbHVkZSBncmlkLWNvbHVtbi1yb3coJGd1dHRlcik7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBicmVha3BvaW50c1xuLy8vL1xuXG4vLyBzY3NzLWxpbnQ6ZGlzYWJsZSBaZXJvVW5pdFxuXG4vLy8gQSBsaXN0IG9mIG5hbWVkIGJyZWFrcG9pbnRzLiBZb3UgY2FuIHVzZSB0aGVzZSB3aXRoIHRoZSBgYnJlYWtwb2ludCgpYCBtaXhpbiB0byBxdWlja2x5IGNyZWF0ZSBtZWRpYSBxdWVyaWVzLlxuLy8vIEB0eXBlIE1hcFxuJGJyZWFrcG9pbnRzOiAoXG4gIHNtYWxsOiAwLFxuICBtZWRpdW06IDY0MHB4LFxuICBsYXJnZTogMTAyNHB4LFxuICB4bGFyZ2U6IDEyMDBweCxcbiAgeHhsYXJnZTogMTQ0MHB4LFxuKSAhZGVmYXVsdDtcblxuJC16Zi16ZXJvLWJyZWFrcG9pbnQ6IHNtYWxsICFkZWZhdWx0O1xuXG5AaWYgbnRoKG1hcC12YWx1ZXMoJGJyZWFrcG9pbnRzKSwgMSkgIT0gMCB7XG4gIEBlcnJvciAnWW91ciBzbWFsbGVzdCBicmVha3BvaW50IChkZWZpbmVkIGluICRicmVha3BvaW50cykgbXVzdCBiZSBzZXQgdG8gXCIwXCIuJztcbn1cbkBlbHNlIHtcbiAgJC16Zi16ZXJvLWJyZWFrcG9pbnQ6IG50aChtYXAta2V5cygkYnJlYWtwb2ludHMpLCAxKTtcbn1cblxuLy8vIEFsbCBvZiB0aGUgbmFtZXMgaW4gdGhpcyBsaXN0IHdpbGwgYmUgb3V0cHV0IGFzIGNsYXNzZXMgaW4geW91ciBDU1MsIGxpa2UgYC5zbWFsbC0xMmAsIGAubWVkaXVtLTZgLCBhbmQgc28gb24uIEVhY2ggdmFsdWUgaW4gdGhpcyBsaXN0IG11c3QgYWxzbyBiZSBpbiB0aGUgYCRicmVha3BvaW50c2AgbWFwLlxuLy8vIEB0eXBlIExpc3RcbiRicmVha3BvaW50LWNsYXNzZXM6IChzbWFsbCBtZWRpdW0gbGFyZ2UpICFkZWZhdWx0O1xuXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgc3RyaW5nIG1hdGNoaW5nIHRoZSBpbnB1dCB2YWx1ZS4gUmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgYnJlYWtwb2ludCgpYCBtaXhpbiB0byBzZWUgd2hhdCB0aGUgcG9zc2libGUgaW5wdXRzIGFyZS5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZHxOdW1iZXJ9ICR2YWwgW3NtYWxsXSAtIEJyZWFrcG9pbnQgbmFtZSwgb3IgcHgsIHJlbSwgb3IgZW0gdmFsdWUgdG8gcHJvY2Vzcy5cbkBmdW5jdGlvbiBicmVha3BvaW50KCR2YWw6ICQtemYtemVyby1icmVha3BvaW50KSB7XG4gIC8vIFNpemUgb3Iga2V5d29yZFxuICAkYnA6IG50aCgkdmFsLCAxKTtcbiAgLy8gVmFsdWUgZm9yIG1heC13aWR0aCBtZWRpYSBxdWVyaWVzXG4gICRicC1tYXg6IDA7XG4gIC8vIERpcmVjdGlvbiBvZiBtZWRpYSBxdWVyeSAodXAsIGRvd24sIG9yIG9ubHkpXG4gICRkaXI6IGlmKGxlbmd0aCgkdmFsKSA+IDEsIG50aCgkdmFsLCAyKSwgdXApO1xuICAvLyBFdmVudHVhbCBvdXRwdXRcbiAgJHN0cjogJyc7XG4gIC8vIElzIGl0IGEgbmFtZWQgbWVkaWEgcXVlcnk/XG4gICRuYW1lZDogZmFsc2U7XG5cbiAgLy8gT3JpZW50YXRpb24gbWVkaWEgcXVlcmllcyBoYXZlIGEgdW5pcXVlIHN5bnRheFxuICBAaWYgJGJwID09ICdsYW5kc2NhcGUnIG9yICRicCA9PSAncG9ydHJhaXQnIHtcbiAgICBAcmV0dXJuICcob3JpZW50YXRpb246ICN7JGJwfSknO1xuICB9XG4gIEBlbHNlIGlmICRicCA9PSAncmV0aW5hJyB7XG4gICAgQHJldHVybiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSc7XG4gIH1cblxuICAvLyBUcnkgdG8gcHVsbCBhIG5hbWVkIGJyZWFrcG9pbnQgb3V0IG9mIHRoZSAkYnJlYWtwb2ludHMgbWFwXG4gIEBpZiB0eXBlLW9mKCRicCkgPT0gJ3N0cmluZycge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicCkge1xuICAgICAgQGlmICRkaXIgPT0gJ29ubHknIG9yICRkaXIgPT0gJ2Rvd24nIHtcbiAgICAgICAgJGJwLW1heDogLXpmLW1hcC1uZXh0KCRicmVha3BvaW50cywgJGJwKTtcbiAgICAgIH1cblxuICAgICAgJGJwOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGJwKTtcbiAgICAgICRuYW1lZDogdHJ1ZTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgJGJwOiAwO1xuICAgICAgQHdhcm4gJ2JyZWFrcG9pbnQoKTogXCIjeyR2YWx9XCIgaXMgbm90IGRlZmluZWQgaW4geW91ciAkYnJlYWtwb2ludHMgc2V0dGluZy4nO1xuICAgIH1cbiAgfVxuXG4gIC8vIENvbnZlcnQgYW55IHBpeGVsLCByZW0sIG9yIHVuaXRsZXNzIHZhbHVlIHRvIGVtXG4gICRicDogLXpmLWJwLXRvLWVtKCRicCk7XG4gIEBpZiAkYnAtbWF4IHtcbiAgICAkYnAtbWF4OiAtemYtYnAtdG8tZW0oJGJwLW1heCkgLSAoMS8xNik7XG4gIH1cblxuICAvLyBDb25kaXRpb25zIHRvIHNraXAgbWVkaWEgcXVlcnkgY3JlYXRpb25cbiAgLy8gLSBJdCdzIGEgbmFtZWQgYnJlYWtwb2ludCB0aGF0IHJlc29sdmVkIHRvIFwiMCBkb3duXCIgb3IgXCIwIHVwXCJcbiAgLy8gLSBJdCdzIGEgbnVtZXJpYyBicmVha3BvaW50IHRoYXQgcmVzb2x2ZWQgdG8gXCIwIFwiICsgYW55dGhpbmdcbiAgQGlmICRicCA+IDBlbSBvciAkZGlyID09ICdvbmx5JyBvciAkZGlyID09ICdkb3duJyB7XG4gICAgLy8gYG9ubHlgIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1pbi13aWR0aDogbikgYW5kIChtYXgtd2lkdGg6IG4pYFxuICAgIEBpZiAkZGlyID09ICdvbmx5JyB7XG4gICAgICAvLyBPbmx5IG5hbWVkIG1lZGlhIHF1ZXJpZXMgY2FuIGhhdmUgYW4gXCJvbmx5XCIgcmFuZ2VcbiAgICAgIEBpZiAkbmFtZWQgPT0gdHJ1ZSB7XG4gICAgICAgIC8vIE9ubHkgdXNlIFwibWluLXdpZHRoXCIgaWYgdGhlIGZsb29yIGlzIGdyZWF0ZXIgdGhhbiAwXG4gICAgICAgIEBpZiAkYnAgPiAwZW0ge1xuICAgICAgICAgICRzdHI6ICRzdHIgKyAnKG1pbi13aWR0aDogI3skYnB9KSc7XG5cbiAgICAgICAgICAvLyBPbmx5IGFkZCBcImFuZFwiIHRvIHRoZSBtZWRpYSBxdWVyeSBpZiB0aGVyZSdzIGEgY2VpbGluZ1xuICAgICAgICAgIEBpZiAkYnAtbWF4ICE9IG51bGwge1xuICAgICAgICAgICAgJHN0cjogJHN0ciArICcgYW5kICc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gT25seSB1c2UgXCJtYXgtd2lkdGhcIiBpZiB0aGVyZSdzIGEgY2VpbGluZ1xuICAgICAgICBAaWYgJGJwLW1heCAhPSBudWxsIHtcbiAgICAgICAgICAkc3RyOiAkc3RyICsgJyhtYXgtd2lkdGg6ICN7JGJwLW1heH0pJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBAd2FybiAnYnJlYWtwb2ludCgpOiBPbmx5IG5hbWVkIG1lZGlhIHF1ZXJpZXMgY2FuIGhhdmUgYW4gYG9ubHlgIHJhbmdlLic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gYGRvd25gIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1heC13aWR0aDogbilgXG4gICAgQGVsc2UgaWYgJGRpciA9PSAnZG93bicge1xuICAgICAgJG1heDogaWYoJG5hbWVkLCAkYnAtbWF4LCAkYnApO1xuXG4gICAgICAvLyBTa2lwIG1lZGlhIHF1ZXJ5IGNyZWF0aW9uIGlmIGlucHV0IHZhbHVlIGlzIGV4YWN0bHkgXCIwIGRvd25cIixcbiAgICAgIC8vIHVubGVzcyB0aGUgZnVuY3Rpb24gd2FzIGNhbGxlZCBhcyBcInNtYWxsIGRvd25cIiwgaW4gd2hpY2ggY2FzZSBpdCdzIGp1c3QgXCJzbWFsbCBvbmx5XCJcbiAgICAgIEBpZiAkbmFtZWQgb3IgJGJwID4gMGVtIHtcbiAgICAgICAgQGlmICRtYXggIT0gbnVsbCB7XG4gICAgICAgICAgJHN0cjogJHN0ciArICcobWF4LXdpZHRoOiAjeyRtYXh9KSc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBgdXBgIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1pbi13aWR0aDogbilgXG4gICAgQGVsc2UgaWYgJGJwID4gMGVtIHtcbiAgICAgICRzdHI6ICRzdHIgKyAnKG1pbi13aWR0aDogI3skYnB9KSc7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkc3RyO1xufVxuXG4vLy8gV3JhcHMgYSBtZWRpYSBxdWVyeSBhcm91bmQgdGhlIGNvbnRlbnQgeW91IHB1dCBpbnNpZGUgdGhlIG1peGluLiBUaGlzIG1peGluIGFjY2VwdHMgYSBudW1iZXIgb2YgdmFsdWVzOlxuLy8vICAtIElmIGEgc3RyaW5nIGlzIHBhc3NlZCwgdGhlIG1peGluIHdpbGwgbG9vayBmb3IgaXQgaW4gdGhlIGAkYnJlYWtwb2ludHNgIG1hcCwgYW5kIHVzZSBhIG1lZGlhIHF1ZXJ5IHRoZXJlLlxuLy8vICAtIElmIGEgcGl4ZWwgdmFsdWUgaXMgcGFzc2VkLCBpdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBhbiBlbSB2YWx1ZSB1c2luZyBgJGdsb2JhbC1mb250LXNpemVgIGFzIHRoZSBiYXNlLlxuLy8vICAtIElmIGEgcmVtIHZhbHVlIGlzIHBhc3NlZCwgdGhlIHVuaXQgd2lsbCBiZSBjaGFuZ2VkIHRvIGVtLlxuLy8vICAtIElmIGFuIGVtIHZhbHVlIGlzIHBhc3NlZCwgdGhlIHZhbHVlIHdpbGwgYmUgdXNlZCBhcy1pcy5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZHxOdW1iZXJ9ICR2YWx1ZSAtIEJyZWFrcG9pbnQgbmFtZSwgb3IgcHgsIHJlbSwgb3IgZW0gdmFsdWUgdG8gcHJvY2Vzcy5cbi8vL1xuLy8vIEBvdXRwdXQgSWYgdGhlIGJyZWFrcG9pbnQgaXMgXCIwcHggYW5kIGxhcmdlclwiLCBvdXRwdXRzIHRoZSBjb250ZW50IGFzLWlzLiBPdGhlcndpc2UsIG91dHB1dHMgdGhlIGNvbnRlbnQgd3JhcHBlZCBpbiBhIG1lZGlhIHF1ZXJ5LlxuQG1peGluIGJyZWFrcG9pbnQoJHZhbHVlKSB7XG4gICRzdHI6IGJyZWFrcG9pbnQoJHZhbHVlKTtcblxuICAvLyBJZiAkc3RyIGlzIHN0aWxsIGFuIGVtcHR5IHN0cmluZywgbm8gbWVkaWEgcXVlcnkgaXMgbmVlZGVkXG4gIEBpZiAkc3RyID09ICcnIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gIC8vIE90aGVyd2lzZSwgd3JhcCB0aGUgY29udGVudCBpbiBhIG1lZGlhIHF1ZXJ5XG4gIEBlbHNlIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAjeyRzdHJ9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gQ29udmVycyB0aGUgYnJlYWtwb2ludHMgbWFwIHRvIGEgVVJMLWVuY29kZWQgc3RyaW5nLCBsaWtlIHRoaXM6IGBrZXkxPXZhbHVlMSZrZXkyPXZhbHVlMmAuIFRoZSB2YWx1ZSBpcyB0aGVuIGRyb3BwZWQgaW50byB0aGUgQ1NTIGZvciBhIHNwZWNpYWwgYDxtZXRhPmAgdGFnLCB3aGljaCBpcyByZWFkIGJ5IHRoZSBGb3VuZGF0aW9uIEphdmFTY3JpcHQuIFRoaXMgaXMgaG93IHdlIHRyYW5zZmVyIHZhbHVlcyBmcm9tIFNhc3MgdG8gSmF2YVNjcmlwdCwgc28gdGhleSBjYW4gYmUgZGVmaW5lZCBpbiBvbmUgcGxhY2UuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJG1hcCAtIE1hcCB0byBjb252ZXJ0LlxuLy8vXG4vLy8gQHJldHVybnMge1N0cmluZ30gQSBzdHJpbmcgY29udGFpbmluZyB0aGUgbWFwJ3MgY29udGVudHMuXG5AZnVuY3Rpb24gLXpmLWJwLXNlcmlhbGl6ZSgkbWFwKSB7XG4gICRzdHI6ICcnO1xuICBAZWFjaCAka2V5LCAkdmFsdWUgaW4gJG1hcCB7XG4gICAgJHN0cjogJHN0ciArICRrZXkgKyAnPScgKyAtemYtYnAtdG8tZW0oJHZhbHVlKSArICcmJztcbiAgfVxuICAkc3RyOiBzdHItc2xpY2UoJHN0ciwgMSwgLTIpO1xuXG4gIEByZXR1cm4gJHN0cjtcbn1cblxuLy8vIEZpbmQgdGhlIG5leHQga2V5IGluIGEgbWFwLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXAgLSBNYXAgdG8gdHJhdmVyc2UuXG4vLy8gQHBhcmFtIHtNaXhlZH0gJGtleSAtIEtleSB0byB1c2UgYXMgYSBzdGFydGluZyBwb2ludC5cbi8vL1xuLy8vIEByZXR1cm5zIHtNaXhlZH0gVGhlIHZhbHVlIGZvciB0aGUga2V5IGFmdGVyIGAka2V5YCwgaWYgYCRrZXlgIHdhcyBmb3VuZC4gSWYgYCRrZXlgIHdhcyBub3QgZm91bmQsIG9yIGAka2V5YCB3YXMgdGhlIGxhc3QgdmFsdWUgaW4gdGhlIG1hcCwgcmV0dXJucyBgbnVsbGAuXG5AZnVuY3Rpb24gLXpmLW1hcC1uZXh0KCRtYXAsICRrZXkpIHtcblxuICAvLyBTdG9yZSB0aGUga2V5cyBvZiB0aGUgbWFwIGFzIGEgbGlzdFxuICAkdmFsdWVzOiBtYXAta2V5cygkbWFwKTtcblxuICAkaTogMDtcblxuICAvLyBJZiB0aGUgS2V5IEV4aXN0cywgR2V0IHRoZSBpbmRleCBvZiB0aGUga2V5IHdpdGhpbiB0aGUgbWFwIGFuZCBhZGQgMSB0byBpdCBmb3IgdGhlIG5leHQgYnJlYWtwb2ludCBpbiB0aGUgbWFwXG4gIEBpZiAobWFwLWhhcy1rZXkoJG1hcCwgJGtleSkpIHtcbiAgICAkaTogaW5kZXgoJHZhbHVlcywgJGtleSkgKyAxO1xuICB9XG5cbiAgLy8gSWYgdGhlIGtleSBkb2Vzbid0IGV4aXN0LCBvciBpdCdzIHRoZSBsYXN0IGtleSBpbiB0aGUgbWFwLCByZXR1cm4gbnVsbFxuICBAaWYgKCRpID4gbGVuZ3RoKCRtYXApIG9yICRpID09IDApIHtcbiAgICBAcmV0dXJuIG51bGw7XG4gIH1cbiAgLy8gT3RoZXJ3aXNlLCByZXR1cm4gdGhlIHZhbHVlXG4gIEBlbHNlIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoJG1hcCwgbnRoKCR2YWx1ZXMsICRpKSk7XG4gIH1cblxufVxuXG4vLy8gR2V0IGEgdmFsdWUgZm9yIGEgYnJlYWtwb2ludCBmcm9tIGEgcmVzcG9uc2l2ZSBjb25maWcgbWFwLiBJZiB0aGUgY29uZmlnIG1hcCBoYXMgdGhlIGtleSBgJHZhbHVlYCwgdGhlIGV4YWN0IGJyZWFrcG9pbnQgdmFsdWUgaXMgcmV0dXJuZWQuIElmIHRoZSBjb25maWcgbWFwIGRvZXMgKm5vdCogaGF2ZSB0aGUgYnJlYWtwb2ludCwgdGhlIHZhbHVlIG1hdGNoaW5nIHRoZSBuZXh0IGxvd2VzdCBicmVha3BvaW50IGluIHRoZSBjb25maWcgbWFwIGlzIHJldHVybmVkLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXAgLSBJbnB1dCBjb25maWcgbWFwLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHZhbHVlIC0gQnJlYWtwb2ludCBuYW1lIHRvIHVzZS5cbi8vL1xuLy8vIEByZXR1cm4ge01peGVkfSBUaGUgY29ycmVzcG9uZGluZyBicmVha3BvaW50IHZhbHVlLlxuQGZ1bmN0aW9uIC16Zi1nZXQtYnAtdmFsKCRtYXAsICR2YWx1ZSkge1xuICAvLyBDaGVjayBpZiB0aGUgYnJlYWtwb2ludCBuYW1lIGV4aXN0cyBnbG9iYWxseVxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgQHJldHVybiBudWxsO1xuICB9XG4gIC8vIENoZWNrIGlmIHRoZSBicmVha3BvaW50IG5hbWUgZXhpc3RzIGluIHRoZSBsb2NhbCBjb25maWcgbWFwXG4gIEBlbHNlIGlmIG1hcC1oYXMta2V5KCRtYXAsICR2YWx1ZSkge1xuICAgIC8vIElmIGl0IGRvZXMsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICAgIEByZXR1cm4gbWFwLWdldCgkbWFwLCAkdmFsdWUpO1xuICB9XG4gIC8vIE90aGVyd2lzZSwgZmluZCB0aGUgbmV4dCBsb3dlc3QgYnJlYWtwb2ludCBhbmQgcmV0dXJuIHRoYXQgdmFsdWVcbiAgQGVsc2Uge1xuICAgICRhbmNob3I6IG51bGw7XG4gICAgJGZvdW5kOiBmYWxzZTtcblxuICAgIEBlYWNoICRrZXksICR2YWwgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICAgIEBpZiBub3QgJGZvdW5kIHtcbiAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsICRrZXkpIHtcbiAgICAgICAgICAkYW5jaG9yOiAka2V5O1xuICAgICAgICB9XG4gICAgICAgIEBpZiAka2V5ID09ICR2YWx1ZSB7XG4gICAgICAgICAgJGZvdW5kOiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgQHJldHVybiBtYXAtZ2V0KCRtYXAsICRhbmNob3IpO1xuICB9XG59XG5cbi8vIExlZ2FjeSBicmVha3BvaW50IHZhcmlhYmxlc1xuLy8gVGhlc2Ugd2lsbCBiZSByZW1vdmVkIGluIDYuM1xuJHNtYWxsLXVwOiBudWxsO1xuJHNtYWxsLW9ubHk6IG51bGw7XG4kbWVkaXVtLXVwOiBudWxsO1xuJG1lZGl1bS1vbmx5OiBudWxsO1xuJGxhcmdlLXVwOiBudWxsO1xuJGxhcmdlLW9ubHk6IG51bGw7XG4keGxhcmdlLXVwOiBudWxsO1xuJHhsYXJnZS1vbmx5OiBudWxsO1xuJHh4bGFyZ2UtdXA6IG51bGw7XG4keHhsYXJnZS1vbmx5OiBudWxsO1xuXG5AaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCBzbWFsbCkge1xuICAkc21hbGwtdXA6IHNjcmVlbjtcbiAgJHNtYWxsLW9ubHk6IHVucXVvdGUoJ3NjcmVlbiBhbmQgI3ticmVha3BvaW50KHNtYWxsIG9ubHkpfScpO1xufVxuXG5AaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCBtZWRpdW0pIHtcbiAgJG1lZGl1bS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobWVkaXVtKX0nKTtcbiAgJG1lZGl1bS1vbmx5OiB1bnF1b3RlKCdzY3JlZW4gYW5kICN7YnJlYWtwb2ludChtZWRpdW0gb25seSl9Jyk7XG59XG5cbkBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsIGxhcmdlKSB7XG4gICRsYXJnZS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobGFyZ2UpfScpO1xuICAkbGFyZ2Utb25seTogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobGFyZ2Ugb25seSl9Jyk7XG59XG5cbkBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsIHhsYXJnZSkge1xuICAkeGxhcmdlLXVwOiB1bnF1b3RlKCdzY3JlZW4gYW5kICN7YnJlYWtwb2ludCh4bGFyZ2UpfScpO1xuICAkeGxhcmdlLW9ubHk6IHVucXVvdGUoJ3NjcmVlbiBhbmQgI3ticmVha3BvaW50KHhsYXJnZSBvbmx5KX0nKTtcbn1cblxuQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgeHhsYXJnZSkge1xuICAkeHhsYXJnZS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQoeHhsYXJnZSl9Jyk7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBSZXBvc2l0aW9uIGEgY29sdW1uLlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ8S2V5d29yZH0gJHBvc2l0aW9uIC0gRGlyZWN0aW9uIGFuZCBhbW91bnQgdG8gbW92ZS4gVGhlIGNvbHVtbiB3aWxsIG1vdmUgZXF1YWwgdG8gdGhlIHdpZHRoIG9mIHRoZSBjb2x1bW4gY291bnQgc3BlY2lmaWVkLiBBIHBvc2l0aXZlIG51bWJlciB3aWxsIHB1c2ggdGhlIGNvbHVtbiB0byB0aGUgcmlnaHQsIHdoaWxlIGEgbmVnYXRpdmUgbnVtYmVyIHdpbGwgcHVsbCBpdCB0byB0aGUgbGVmdC4gU2V0IHRvIGNlbnRlciB0byBjZW50ZXIgdGhlIGNvbHVtbi5cbkBtaXhpbiBncmlkLWNvbHVtbi1wb3NpdGlvbigkcG9zaXRpb24pIHtcbiAgQGlmIHR5cGUtb2YoJHBvc2l0aW9uKSA9PSAnbnVtYmVyJyB7XG4gICAgJG9mZnNldDogcGVyY2VudGFnZSgkcG9zaXRpb24gLyAkZ3JpZC1jb2x1bW4tY291bnQpO1xuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICN7JGdsb2JhbC1sZWZ0fTogJG9mZnNldDtcbiAgfVxuICBAZWxzZSBpZiAkcG9zaXRpb24gPT0gY2VudGVyIHtcbiAgICAmLCAmOmxhc3QtY2hpbGQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgZmxvYXQ6IG5vbmU7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG4gIEBlbHNlIHtcbiAgICBAd2FybiAnV3Jvbmcgc3ludGF4IGZvciBncmlkLWNvbHVtbi1wb3NpdGlvbigpLiBFbnRlciBhIHBvc2l0aXZlIG9yIG5lZ2F0aXZlIG51bWJlciwgb3IgY2VudGVyLic7XG4gIH1cbn1cblxuLy8vIFJlc2V0IGEgcG9zaXRpb24gZGVmaW5pdGlvbi5cbkBtaXhpbiBncmlkLWNvbHVtbi11bnBvc2l0aW9uIHtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi8vLyBPZmZzZXRzIGEgY29sdW1uIHRvIHRoZSByaWdodCBieSBgJG5gIGNvbHVtbnMuXG4vLy8gQHBhcmFtIHtOdW1iZXJ8TGlzdH0gJG4gLSBXaWR0aCB0byBvZmZzZXQgYnkuIFlvdSBjYW4gcGFzcyBpbiBhbnkgdmFsdWUgYWNjZXB0ZWQgYnkgdGhlIGBncmlkLWNvbHVtbigpYCBtaXhpbiwgc3VjaCBhcyBgNmAsIGA1MCVgLCBvciBgMSBvZiAyYC5cbkBtaXhpbiBncmlkLWNvbHVtbi1vZmZzZXQoJG4pIHtcbiAgbWFyZ2luLSN7JGdsb2JhbC1sZWZ0fTogZ3JpZC1jb2x1bW4oJG4pO1xufVxuXG4vLy8gRGlzYWJsZSB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiB0aGUgbGFzdCBjb2x1bW4gaW4gYSByb3cgYWxpZ25pbmcgdG8gdGhlIG9wcG9zaXRlIGVkZ2UuXG5AbWl4aW4gZ3JpZC1jb2x1bW4tZW5kIHtcbiAgLy8gVGhpcyBleHRyYSBzcGVjaWZpY2l0eSBpcyByZXF1aXJlZCBmb3IgdGhlIHByb3BlcnR5IHRvIGJlIGFwcGxpZWRcbiAgJjpsYXN0LWNoaWxkOmxhc3QtY2hpbGQge1xuICAgIGZsb2F0OiAkZ2xvYmFsLWxlZnQ7XG4gIH1cbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLXBvc2l0aW9uKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi1wb3NpdGlvblxuQG1peGluIGdyaWQtY29sLXBvcygkcG9zaXRpb24pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tcG9zaXRpb24oJHBvc2l0aW9uKTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLXVucG9zaXRpb24oKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uLXVucG9zaXRpb25cbkBtaXhpbiBncmlkLWNvbC11bnBvcyB7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uLXVucG9zaXRpb247XG59XG5cbi8vLyBTaG9ydGhhbmQgZm9yIGBncmlkLWNvbHVtbi1vZmZzZXQoKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uLW9mZnNldFxuQG1peGluIGdyaWQtY29sLW9mZigkbikge1xuICBAaW5jbHVkZSBncmlkLWNvbHVtbi1vZmZzZXQoJG4pO1xufVxuXG4vLy8gU2hvcnRoYW5kIGZvciBgZ3JpZC1jb2x1bW4tZW5kKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi1lbmRcbkBtaXhpbiBncmlkLWNvbC1lbmQge1xuICBAaW5jbHVkZSBncmlkLWNvbHVtbi1lbmQ7XG59XG4iLCIvL251bWJlciBvZiBwcm9qZWN0c1xuXG4kaXRlbXM6IDM7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG5cdENhc2VzXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdFxuLm1haW4tc2NlbmUucHJvamVjdC1vcGVuIHtcblx0I2NkLXN1bW1hcnksIC5mb290ZXItY29udGFpbmVyIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG59XG5cbiNjYXNlLXN0dWR5LXBhZ2Uge1xuICAgIC5wYWdlLWNvbnRlbnQge1xuICAgICAgICBwYWRkaW5nOiByZW0oNzApIDAgMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgLmNkLW5hdi10cmlnZ2VyIHtcbiAgICAgICAgLy8gQGluY2x1ZGUgYWJzLXBvcygkdDogMjRweCwgJHI6NSUpO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGJhY2tncm91bmQgLjJzKTtcbiAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB0ZXh0LWluZGVudDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkYmxhY2ssIC42KTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGUoLjUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHdpZHRoOiA0NHB4O1xuICAgICAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiByZW0oMTIwKTtcbiAgICAgICAgcmlnaHQ6IDMuNSU7XG4gICAgICAgIHotaW5kZXg6IDU7XG5cbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgJi5wcm9qZWN0LW9wZW4ge1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgICAuY2QtaWNvbiwgLmNkLWljb246OmJlZm9yZSwgLmNkLWljb246OmFmdGVyIHtcbiAgICAgICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVaKDApKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJhY2tmYWNlLXZpc2liaWxpdHkoaGlkZGVuKTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5uby10b3VjaCAmOmhvdmVyIHtcbiAgICAgICAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6IGJsYWNrKC44KTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzaXRlLXByaW1hcnktY29sb3I7IFxuICAgICAgICB9XG5cbiAgICAgICAgLmNkLWljb24ge1xuICAgICAgICAgICAgQGluY2x1ZGUgY2VudGVyOyAvLyBtaXhpbiBpbnNpZGUgcGFydGlhbHMgPiBfbWl4aW5zLnNjc3NcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24odHJhbnNmb3JtIC4zcywgYmFja2dyb3VuZC1jb2xvciAuM3MpO1xuICAgICAgICAgICAgd2lkdGg6IDE4cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICAgIC8qIG1pZGRsZSBsaW5lIG9mIHRoZSBtZW51IGljb24gKi9cbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgICAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbih0cmFuc2Zvcm0gLjNzKTtcbiAgICAgICAgICAgICAgICAvKiB1cHBlciBhbmQgbG93ZXIgbGluZXMgb2YgdGhlIG1lbnUgaWNvbiAqL1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgtNnB4KSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSg2cHgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYucHJvamVjdC1vcGVuIC5jZC1pY29uIHtcbiAgICAgICAgICAgIC8qIHVzZXIgc2VsZWN0cyBhIHByb2plY3RzIC0gdHJhbnNmb3JtIHRoZSBpY29uIGludG8gYSAnWCcgKi9cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHdoaXRlLCAwKTtcblxuICAgICAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkd2hpdGUsIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDApIHJvdGF0ZSg0NWRlZykpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5uYXYtb3BlbiAuY2QtaWNvbiB7XG4gICAgICAgICAgICAvKiB1c2VyIG9wZW5zIHRoZSBuYXZpZ2F0aW9uIC0gdHJhbnNmb3JtIHRoZSBpY29uIGludG8gYW4gYXJyb3cgKi9cbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDkwZGVnKSk7XG5cbiAgICAgICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtNXB4KSB0cmFuc2xhdGVZKDNweCkgcm90YXRlKDQ1ZGVnKSBzY2FsZVgoLjUpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtNXB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSgtNDVkZWcpIHNjYWxlWCguNSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2QtY2FzZS1jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgID4gdWwge1xuICAgICAgICBAaW5jbHVkZSBmbGF0LWxpc3Q7XG4gICAgICAgIEBpbmNsdWRlIHplcm8tb3V0O1xuICAgIH1cblxuICAgIC5zaW5nbGUtY2FzZSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24odHJhbnNmb3JtIC40cyk7XG4gICAgICAgIC8qIEZvcmNlIGhhcmR3YXJlIGFjY2VsZXJhdGlvbiAqL1xuICAgICAgICBAaW5jbHVkZSBiYWNrZmFjZS12aXNpYmlsaXR5KGhpZGRlbik7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVaKDApKTtcbiAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogMCwgJGw6MCk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHotaW5kZXg6IDI7XG5cbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOm50aC1vZi10eXBlKDIpIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDEwMCUvJGl0ZW1zKSk7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1vZi10eXBlKDMpIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDEwMCUqMi8kaXRlbXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgICYuc2VsZWN0ZWQge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoMCkpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuXG4gICAgICAgICAgICBjdXJzb3I6IGF1dG87XG4gICAgICAgICAgICAuY2QtdGl0bGUge1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzAwJTtcblxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAuMztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuZXZlbnQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5zZWxlY3RlZCB+IGxpIHtcbiAgICAgICAgICAgIC8qIGhpZGUgc2libGluZ3MgcHJvamVjdHMgKi9cbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDEwMCUpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYubmF2LW9wZW4gLnNpbmdsZS1jYXNlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoOTElKSk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAzMHB4IHJnYmEoJGJsYWNrLCAuNSk7XG5cbiAgICAgICAgJjpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSg5NCUpKTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMykge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoOTclKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLm5hdi1vcGVuOmhvdmVyIC5zaW5nbGUtY2FzZSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDg4JSkpO1xuXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMikge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoOTIlKSk7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1vZi10eXBlKDMpIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDk2JSkpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2QtdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGUoLjgpO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMCUvJGl0ZW1zO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDM7XG5cbiAgICAmOjpiZWZvcmUge1xuICAgICAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OiAwLCAkbDowKTtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihoZWlnaHQgLjJzIGxpbmVhciAuMDgpO1xuICAgICAgICAvKiBiYWNrZ3JvdW5kIGltYWdlICovXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICAgICAgb3BhY2l0eTogLjM7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICAvKiBsaW5lIGJlbG93IHRpdGxlIC0gIHZpc2libGUgb24gaG92ZXIgKi9cbiAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogY2FsYyg1MCUgKyAzMHB4KSwgJGw6NTAlKTtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMCkpO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKHRyYW5zZm9ybSAuMnMpO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICB9XG5cbiAgICAuc2luZ2xlLWNhc2U6bnRoLW9mLXR5cGUoMSkgJiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltZ1BhdGh9L2ltZy1iY2stY2FzZS1yZWRidWxsLmpwZyk7XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgyKSAmIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skaW1nUGF0aH0vaW1nLWJjay1jYXNlLWJvb3N0LmpwZyk7XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5zaW5nbGUtY2FzZTpudGgtb2YtdHlwZSgzKSAmIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skaW1nUGF0aH0vaW1nLWJjay1jYXNlLWVsamltYWRvci5qcGcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDEpICY6OmJlZm9yZSwgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDIpICY6OmJlZm9yZSwgLnNpbmdsZS1jYXNlOm50aC1vZi10eXBlKDMpICY6OmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgfVxuXG4gICAgLnRpdGxlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbih0cmFuc2Zvcm0gLjRzKTtcbiAgICAgICAgLyogRm9yY2UgaGFyZHdhcmUgYWNjZWxlcmF0aW9uICovXG4gICAgICAgIEBpbmNsdWRlIGJhY2tmYWNlLXZpc2liaWxpdHkoaGlkZGVuKTtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVooMCkpO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICBwYWRkaW5nOiAwIDJlbTsgXG4gICAgICAgXHR3aWR0aDogMTAwJTtcbiAgICAgICBcdEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgXHRcdHdpZHRoOiA3MCU7XG4gICAgICAgXHR9IFxuICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgKiB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgaDIge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ldmVudCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLm5vLXRvdWNoICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMSkpO1xuICAgIH1cblxuICAgIC5uby10b3VjaCAuc2VsZWN0ZWQgJjpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKHRyYW5zZm9ybSAwcyk7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGVYKDApKTtcbiAgICB9XG5cbiAgICAuc2VsZWN0ZWQgJiAudGl0bGUge1xuICAgICAgICAvKiB2ZXJ0aWNhbGx5IGNlbnRlciBoMiBpbiB0aGUgZnVsbC1oZWlnaHQgaW1hZ2UqL1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSggLTEwMCUqKDEgLSAkaXRlbXMpLyRpdGVtcyApKTtcbiAgICB9XG59XG5cbi5jZC1jYXNlLWluZm8ge1xuICAgIEBpbmNsdWRlIGFicy1wb3MoJHQ6IDAsICRsOjApO1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24ob3BhY2l0eSAuNHMsIHZpc2liaWxpdHkgLjRzKTtcbiAgICBtYXJnaW46IDA7IFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgei1pbmRleDogMztcblxuICAgIG9wYWNpdHk6IDA7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgICAgLyogdXNlIHRvIHB1c2ggdGhlIC5jb250ZW50LXdyYXBwZXIgYmVsb3cgdGhlIGludHJvIHByb2plY3QgaW1hZ2UgKi9cbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuXG4gICAgLmNvbnRlbnQtd3JhcHBlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgbWFyZ2luOiAwOyBcbiAgICAgICAgcGFkZGluZzogNGVtIDA7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICB9XG5cbiAgICAuY29udGVudC1lbnRyeSB7XG4gICAgICAgIC5wYWdlLWZlYXR1cmVkIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTsgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc2VsZWN0ZWQgJiB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24ob3BhY2l0eSAwcywgdmlzaWJpbGl0eSAwcyk7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG5cbiAgICAgICAgb3BhY2l0eTogMTtcblxuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gICAgfVxuXG4gICAgJi5oYXMtYm94c2hhZG93IC5jb250ZW50LXdyYXBwZXIge1xuICAgICAgICAvKiBhZGQgYSBib3gtc2hhZG93IHdoaWxlIHNjcm9sbGluZyBvdmVyIHRoZSBiYWNrZ3JvdW5kIGltYWdlICovXG4gICAgICAgIC8vIGJveC1zaGFkb3c6IDAgLTVweCAzMHB4IHJnYmEoJGJsYWNrLCAuMik7XG4gICAgfVxufVxuXG4uY2Qtc2Nyb2xsIHtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKG9wYWNpdHkgLjRzLCB2aXNpYmlsaXR5IC40cywgY29sb3IgLjRzKTtcbiAgICBAaW5jbHVkZSBjZW50ZXIoeCk7XG4gICAgLyogc2Nyb2xsIGRvd24gYXJyb3cgKi9cbiAgICBjb2xvcjogd2hpdGUoLjQpO1xuICAgIGZvbnQtc2l6ZTogcmVtKDEyKTsgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LWluZGVudDogMDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoI3skaW1nUGF0aH0vY2QtY2FzZS1hcnJvdy5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgMTQwJTtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IHJlbSg2MCk7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IGNhbGMoMTAwJSAtIDI1MHB4KTtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgb3BhY2l0eTogMDtcbiAgICBcbiAgICAubm8tdG91Y2ggJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuXG4gICAgLnByb2plY3Qtb3BlbiAmIHtcbiAgICAgICAgQGluY2x1ZGUgYW5pbWF0aW9uKGNkLXRyYW5zbGF0ZSAxLjJzIC40cyk7XG4gICAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQoMik7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG5cbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAucHJvamVjdC1vcGVuIC5oYXMtYm94c2hhZG93ICYge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG59XG5cbkBpbmNsdWRlIGtleWZyYW1lcyhjZC10cmFuc2xhdGUpIHtcbiAgICAwJSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVYKC01MCUpKTtcbiAgICB9XG5cbiAgICA1MCUge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSB0cmFuc2xhdGVYKC01MCUpKTtcbiAgICB9XG5cbiAgICAxMDAlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTUwJSkpO1xuICAgIH1cbn1cblxuQGluY2x1ZGUga2V5ZnJhbWVzKGNkLXRyYW5zbGF0ZSkge1xuICAgIDAlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoLTUwJSkpO1xuICAgIH1cblxuICAgIDUwJSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybSh0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSkpO1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtNTAlKSk7XG4gICAgfVxufVxuIiwiLy8gU2hvcnRoYW5kIG1peGluLiBTdXBwb3J0cyBtdWx0aXBsZSBwYXJlbnRoZXNlcy1kZWxpbWluYXRlZCB2YWx1ZXMgZm9yIGVhY2ggdmFyaWFibGUuXG4vLyBFeGFtcGxlOiBAaW5jbHVkZSB0cmFuc2l0aW9uIChhbGwgMnMgZWFzZS1pbi1vdXQpO1xuLy8gICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiAob3BhY2l0eSAxcyBlYXNlLWluIDJzLCB3aWR0aCAycyBlYXNlLW91dCk7XG4vLyAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLXByb3BlcnR5ICh0cmFuc2Zvcm0sIG9wYWNpdHkpO1xuXG5AbWl4aW4gdHJhbnNpdGlvbigkcHJvcGVydGllcy4uLikge1xuICAvLyBGaXggZm9yIHZlbmRvci1wcmVmaXggdHJhbnNmb3JtIHByb3BlcnR5XG4gICRuZWVkcy1wcmVmaXhlczogZmFsc2U7XG4gICR3ZWJraXQ6ICgpO1xuICAkbW96OiAoKTtcbiAgJHNwZWM6ICgpO1xuXG4gIC8vIENyZWF0ZSBsaXN0cyBmb3IgdmVuZG9yLXByZWZpeGVkIHRyYW5zZm9ybVxuICBAZWFjaCAkbGlzdCBpbiAkcHJvcGVydGllcyB7XG4gICAgQGlmIG50aCgkbGlzdCwgMSkgPT0gXCJ0cmFuc2Zvcm1cIiB7XG4gICAgICAkbmVlZHMtcHJlZml4ZXM6IHRydWU7XG4gICAgICAkbGlzdDE6IC13ZWJraXQtdHJhbnNmb3JtO1xuICAgICAgJGxpc3QyOiAtbW96LXRyYW5zZm9ybTtcbiAgICAgICRsaXN0MzogKCk7XG5cbiAgICAgIEBlYWNoICR2YXIgaW4gJGxpc3Qge1xuICAgICAgICAkbGlzdDM6IGpvaW4oJGxpc3QzLCAkdmFyKTtcblxuICAgICAgICBAaWYgJHZhciAhPSBcInRyYW5zZm9ybVwiIHtcbiAgICAgICAgICAkbGlzdDE6IGpvaW4oJGxpc3QxLCAkdmFyKTtcbiAgICAgICAgICAkbGlzdDI6IGpvaW4oJGxpc3QyLCAkdmFyKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAkd2Via2l0OiBhcHBlbmQoJHdlYmtpdCwgJGxpc3QxKTtcbiAgICAgICRtb3o6ICAgIGFwcGVuZCgkbW96LCAgICAkbGlzdDIpO1xuICAgICAgJHNwZWM6ICAgYXBwZW5kKCRzcGVjLCAgICRsaXN0Myk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2Via2l0OiBhcHBlbmQoJHdlYmtpdCwgJGxpc3QsIGNvbW1hKTtcbiAgICAgICRtb3o6ICAgIGFwcGVuZCgkbW96LCAgICAkbGlzdCwgY29tbWEpO1xuICAgICAgJHNwZWM6ICAgYXBwZW5kKCRzcGVjLCAgICRsaXN0LCBjb21tYSk7XG4gICAgfVxuICB9XG5cbiAgQGlmICRuZWVkcy1wcmVmaXhlcyB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAkd2Via2l0O1xuICAgICAgIC1tb3otdHJhbnNpdGlvbjogJG1vejtcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICRzcGVjO1xuICB9IEBlbHNlIHtcbiAgICBAaWYgbGVuZ3RoKCRwcm9wZXJ0aWVzKSA+PSAxIHtcbiAgICAgIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24sICRwcm9wZXJ0aWVzLCB3ZWJraXQgbW96IHNwZWMpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHByb3BlcnRpZXM6IGFsbCAwLjE1cyBlYXNlLW91dCAwcztcbiAgICAgIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24sICRwcm9wZXJ0aWVzLCB3ZWJraXQgbW96IHNwZWMpO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gdHJhbnNpdGlvbi1wcm9wZXJ0eSgkcHJvcGVydGllcy4uLikge1xuICAtd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIFwid2Via2l0XCIpO1xuICAgICAtbW96LXRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIFwibW96XCIpO1xuICAgICAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIGZhbHNlKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tZHVyYXRpb24oJHRpbWVzLi4uKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tZHVyYXRpb24sICR0aW1lcywgd2Via2l0IG1veiBzcGVjKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKCRtb3Rpb25zLi4uKSB7XG4gIC8vIGVhc2UgfCBsaW5lYXIgfCBlYXNlLWluIHwgZWFzZS1vdXQgfCBlYXNlLWluLW91dCB8IGN1YmljLWJlemllcigpXG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uLCAkbW90aW9ucywgd2Via2l0IG1veiBzcGVjKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tZGVsYXkoJHRpbWVzLi4uKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tZGVsYXksICR0aW1lcywgd2Via2l0IG1veiBzcGVjKTtcbn1cbiIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG5cdEhlYWRlclxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLmhlYWRlci1jb250YWluZXIge1xuICAgIEBpbmNsdWRlIHplcm8tb3V0O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZSguMik7IFxuICAgIC8vIHBhZGRpbmc6IHJlbSgxMDApIHJlbSg1MCkgMCByZW0oNTApOyBcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uY2Qtc2VjdGlvbi5oZXJvIHtcbiAgICBwYWRkaW5nLXRvcDogNTAlOyBcbiAgICBoZWlnaHQ6IDc1dmg7XG4gICAgbWluLWhlaWdodDogNzV2aDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgLmVudHJ5IHtcbiAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGNlbnRlci1hbGlnbigkdmVyOiB0cnVlLCAkaG9yOiB0cnVlLCAkcG9zOiBhYnNvbHV0ZSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNzAlKTtcbiAgICAgICAgfVxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuLmNkLWhlYWRlci1jb250YWluZXIge1xuICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICAuY2QtaGVhZGVyIHtcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1yb3c7XG4gICAgICAgIG5hdiB7XG4gICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbCg2KTtcbiAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgzMCkgMCAwOyBcbiAgICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZW51LWxpc3QoJGxpLXBhZGRpbmc6IDAgNXB4KTtcbiAgICAgICAgICAgICAgICAmLmNkLWxhbmcge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5jZC1tYWluLW5hdiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDIuM2VtOyBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3RhTWFpbjtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiByZW0oMTIpOyBcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMC4ycmVtIDAuNXJlbTsgXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuY2Qtc29jaWFsIHtcbiAgICAgICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbiNjZC1sb2dvIHtcbiAgICAvLyBAaW5jbHVkZSBjZW50ZXItYWxpZ24oJHZlcjogZmFsc2UsICRob3I6IHRydWUsICRwb3M6IGFic29sdXRlKTtcbiAgICBAaW5jbHVkZSBhYnMtcG9zKCRyOiAwLCAkbDogMCk7XG4gICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgJi5oaWRkZW4ge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihsZWZ0IC4zcywgb3BhY2l0eSAuM3MpO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICB0b3A6IC0yMCU7XG4gICAgICAgICAgICBsZWZ0OiAtMjAlO1xuICAgICAgICAgICAgLyogYXNzaWduIGEgcG9zaXRpb24gZml4ZWQgYW5kIG1vdmUgb3V0c2lkZSB0aGUgdmlld3BvcnQgKG9uIHRoZSBsZWZ0KSAqL1xuXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuXG4gICAgICAgICAgICAmLnNsaWRlLWluIHtcbiAgICAgICAgICAgICAgICAvKiBzbGlkZSBpbiB3aGVuIHRoZSBzZWNvbmRhcnkgbmF2aWdhdGlvbiBnZXRzIGZpeGVkICovXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEyN3B4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTI2cHg7XG4gICAgICAgICAgICAgICAgdG9wOiAxMHB4O1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUlO1xuXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGEsIGE6YWN0aXZlLCBhOmhvdmVyIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTI3cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMjZweDsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgd2lkdGg6IDE0N3B4O1xuICAgIGhlaWdodDogMTQ2cHg7XG4gICAgdG9wOiAxMHB4O1xuXG4gICAgaW1nIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIHotaW5kZXg6IDU7XG59XG5cbi5jdGEtZW50cnksIC5jdGFzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgQGluY2x1ZGUgZmxhdC1saXN0O1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZW51LWxpc3QoJGxpLXBhZGRpbmc6IDAgLjhyZW0pO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNlbnRlcmVkLWxpc3Q7XG4gICAgICAgIH1cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07IFxuICAgICAgICB9XG4gICAgfVxufVxuXG4jaG9tZS1wYWdlIHtcbiAgICAuY2QtYnRuLWhlYWQge1xuICAgICAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IC0yMCU7XG4gICAgICAgIHJpZ2h0OiAtMjAlO1xuICAgICAgICB6LWluZGV4OiA1O1xuXG4gICAgICAgICYuaGlkZGVuIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24ocmlnaHQgLjNzLCBvcGFjaXR5IC4zcyk7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuc2xpZGUtaW4ge1xuICAgICAgICAgICAgICAgIHRvcDogMTJweDtcbiAgICAgICAgICAgICAgICByaWdodDogMyU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG4gICAgUGFnZSBIZWFkZXJcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbiAgICBcbi5zaXRlLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkd2hpdGU7XG4gICAgaGVpZ2h0OiA3MHB4OyBcbiAgICB3aWR0aDogMTAwJTsgIFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAkaGVhZGVyLXppbmRleDsgXG4gICAgI2NkLWxvZ28ge1xuICAgICAgICBAaW5jbHVkZSBicChtZWRpdW1VcCkge1xuICAgICAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogMTBweCwgJGw6IDUlKTtcbiAgICAgICAgfVxuICAgICAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OiAxMHB4LCAkcjogMCwgJGw6IDApO1xuICAgICAgICB3aWR0aDogMTI3cHg7XG4gICAgICAgIGhlaWdodDogMTI2cHg7XG5cbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gICAgXG4gICAgLmNkLWJ0bi1oZWFkIHtcbiAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogMTJweCwgJHI6IDMlKTtcbiAgICAgICAgLnNvY2lhbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5pbm5lci1oZWFkIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMTAwJTsgXG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG59XG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcblxuICAgIE5hdmlnYXRpb25cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbiAgICBcbmEge1xuICAgICYuYWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAmLnNvY2lhbCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG59XG5cbi5jZC1zb2NpYWwge1xuICAgIHVsIHtcbiAgICAgICAgQGluY2x1ZGUgbWVudS1saXN0KCRsaS1wYWRkaW5nOiAwIDVweCk7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICAgICAgd2lkdGg6IDEwMHB4OyBcbiAgICAgICAgfSBcbiAgICAgICAgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwOyBcbiAgICAgICAgfVxuICAgICAgICAuYnRuLW1vYmlsZSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4tc2xpZGUge1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDEzKTsgXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMWVtOyBcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICB3aWR0aDogOTBweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICA+IHNwYW4ge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC44ZW0gMDsgXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmNkLXN1Ym5hdi10cmlnZ2VyIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OjAsICRyOjApO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4OyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDU7XG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgaGlkZS10ZXh0O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC42ZW0gMWVtO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAmLmZiIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKCN7JGltZ1BhdGh9L2ljb24tZmIuc3ZnKSBuby1yZXBlYXQgMCAwO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICYudHcge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoI3skaW1nUGF0aH0vaWNvbi10dy5zdmcpIG5vLXJlcGVhdCAwIDA7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhhbWJ1cmdlciB7XG4gICAgICAgIHBhZGRpbmc6IDhweCA1cHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICAuY2QtbGFuZyB7XG4gICAgICAgIHBhZGRpbmc6IDEzcHggMDsgXG4gICAgfVxufVxuXG4uY2QtbGFuZyB7XG4gICAgYSB7XG4gICAgICAgIEBpbmNsdWRlIGhpZGUtdGV4dDtcbiAgICAgICAgYmFja2dyb3VuZDogbm8tcmVwZWF0IDUwJSAwO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAgXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtlbigkc2l0ZS1ncmF5LCAyMCUpOyBcbiAgICAgICAgd2lkdGg6IDI1cHg7IFxuICAgICAgICBoZWlnaHQ6IDE1cHg7IFxuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgb3BhY2l0eTogLjQ7IFxuICAgICAgICAmLmVuIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgjeyRpbWdQYXRofS9pY29uLWZsYWctdXMucG5nKTsgXG4gICAgICAgIH1cbiAgICAgICAgJi5lcyB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skaW1nUGF0aH0vaWNvbi1mbGFnLW14LnBuZyk7IFxuICAgICAgICB9XG4gICAgfVxufVxuXG4uZW46bGFuZyhlbiksIC5lczpsYW5nKGVzKSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHNpdGUtZ3JheTsgXG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMCk7XG4gICAgb3BhY2l0eTogMTsgXG59XG5cbiNjZC1idG4tbWVudSB7XG4gICAgd2lkdGg6IDUwcHg7IFxufVxuXG4ubW9iaWxlLWluZGV4IHtcbiAgICBAaW5jbHVkZSBicChtZWRpdW1VcCkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7ICBcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAxMnB4O1xuICAgIHJpZ2h0OiAzJTtcbiAgICB6LWluZGV4OiAxMDsgXG4gICAgICBcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG5cblx0U2Vjb25kYXJ5IEZpeGVkIE5hdmlnYXRpb25cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLmNkLXNlY29uZGFyeS1uYXYge1xuICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrKC40KTtcbiAgICAgICAgei1pbmRleDogJGhlYWRlci16aW5kZXg7XG5cbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihoZWlnaHQgLjNzKTtcbiAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkYjogMCk7XG4gICAgICAgIHBhZGRpbmc6IDAuM3JlbSAxLjFyZW0gMS4xcmVtO1xuICAgICAgICBtaW4taGVpZ2h0OiAkYmFyLWhlaWdodDtcbiAgICAgICAgbmF2LCB1bCwgbGksIGEge1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgJi5pcy1maXhlZCB7XG4gICAgICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgICAgICAvKiBvbiBGaXJlZm94IENTUyB0cmFuc2l0aW9uL2FuaW1hdGlvbiBmYWlscyB3aGVuIHBhcmVudCBlbGVtZW50IGNoYW5nZXMgcG9zaXRpb24gYXR0cmlidXRlKi9cbiAgICAgICAgICAgIC8qIHNvIHdlIGRlZmluZWQgdG8gZGlmZmVudCBjbGFzc2VzOiAuaXMtZml4ZWQgdG8gY2hhbmdlIHRoZSBwb3NpdGlvbiB2YWx1ZSBhbmQgLmlzLWFuaW1hdGVkIHRvIGNoYW5nZSBjaGlsZHJlbnMnIGF0dHJpYnV0ZXMgKHBhZGRpbmcgYW5kIG9wYWNpdHkpKi9cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkd2hpdGU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6ICRiYXItaGVpZ2h0O1xuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgYm90dG9tOiBhdXRvO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICYuc2hvdy1uYXYge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24ob3BhY2l0eSAuM3MpO1xuXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuYW5pbWF0ZS1jaGlsZHJlbiB7XG4gICAgICAgIC8qIG9uIEZpcmVmb3ggQ1NTIHRyYW5zaXRpb24vYW5pbWF0aW9uIGZhaWxzIHdoZW4gcGFyZW50IGVsZW1lbnQgY2hhbmdlcyBwb3NpdGlvbiBhdHRyaWJ1dGUqL1xuICAgICAgICAvKiBzbyB3ZSBkZWZpbmVkIHRvIGRpZmZlbnQgY2xhc3NlczogLmlzLWZpeGVkIHRvIGNoYW5nZSB0aGUgcG9zaXRpb24gdmFsdWUgYW5kIC5pcy1hbmltYXRlZCB0byBjaGFuZ2UgY2hpbGRyZW5zJyBhdHRyaWJ1dGVzIChwYWRkaW5nIGFuZCBvcGFjaXR5KSovXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKCRibGFjaywgLjIpO1xuICAgICAgICAuc2l0ZS1uYXYge1xuICAgICAgICAgICAgbGkgYSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogcmVtKDI1KSByZW0oMzApIDAgcmVtKDMwKTtcbiAgICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgcGFkZGluZzogMS42ZW07XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLnNpdGUtbmF2IHtcbiAgICBAaW5jbHVkZSB6ZXJvLW91dDtcbiAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUoMCkpO1xuICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1vcmlnaW4oMTAwJSAxMDAlKTtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKHRyYW5zZm9ybSAuM3MsIHZpc2liaWxpdHkgMHMgLjNzKTtcbiAgICBAaW5jbHVkZSBiYWNrZmFjZS12aXNpYmlsaXR5KGhpZGRlbik7XG4gICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlKDEpKTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgICAvKiByZXNldCBuYXZpZ2F0aW9uIHZhbHVlcyAqL1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuXG5cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC00cHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKHBhZGRpbmcgLjJzKTtcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHJlbSg1OCkgcmVtKDQwKSAwIHJlbSg0MCk7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjZW50ZXIoeCk7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24ob3BhY2l0eSAuMnMpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAxOHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiBtb2JpbGUgZmlyc3QgLSBzZWNvbmRhcnkgbmF2aWdhdGlvbiBoaWRkZW4gYnkgZGVmYXVsdCwgdHJpZ2dlcmVkIGJ5IHRhcC9jbGljayBvbiAuY2Qtc2Vjb25kYXJ5LW5hdi10cmlnZ2VyKi9cbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxOyBcbn1cblxuLmNkLXNsaWRlLW5hdiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgQGluY2x1ZGUgYWJzLXBvcygkdDogMCwgJHI6IDAsICRsOiAwKTtcbiAgICBAaW5jbHVkZSBmbGF0LWxpc3Q7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoLTEwMHB4KSk7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbih0cmFuc2Zvcm0gLjNzIC4ycyk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGJsYWNrLCAgMTIlKTtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIHotaW5kZXg6IDM7XG4gICAgJi5tb3Zlcy1vdXQge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSk7XG4gICAgICAgIGhlaWdodDogNzBweDtcbiAgICB9XG4gICAgbGkge1xuICAgICAgICBtYXJnaW4tbGVmdDogLTRweDtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgyNSkgcmVtKDMwKSAwIHJlbSgzMCk7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gTW9iaWxlIE5hdiBlYXNpZXIgdG8gcmVhZFxuLmNkLXNlY29uZGFyeS1uYXYge1xuICAgIC5zaXRlLW5hdiB7XG4gICAgICAgICYuaXMtdmlzaWJsZSB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0oc2NhbGUoMSkpO1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbih0cmFuc2Zvcm0gLjNzLCB2aXNpYmlsaXR5IDBzIC4xcywgZWFzZS1pbi1vdXQpO1xuICAgICAgICAgICAgQGluY2x1ZGUgZmxhdC1saXN0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2soLjk1KTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHotaW5kZXg6ICRoZWFkZXItemluZGV4O1xuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogcmVtKDMwKTtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2Qtc2Vjb25kYXJ5LW5hdi10cmlnZ2VyIHtcbiAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtaW5kZW50OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAuNzUpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlKC4zKTsgXG4gICAgd2lkdGg6IDQ0cHg7XG4gICAgaGVpZ2h0OiA0NHB4O1xuICAgIC8qIGltYWdlIHJlcGxhY2VtZW50ICovXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDMlO1xuICAgIGJvdHRvbTogMjBweDtcbiAgICB6LWluZGV4OiAyO1xuXG4gICAgc3BhbiB7XG4gICAgICAgIEBpbmNsdWRlIGNlbnRlcjtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihiYWNrZ3JvdW5kIC4zcyk7XG4gICAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICB3aWR0aDogNHB4O1xuICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIC8qIHRoZSBzcGFuIGVsZW1lbnQgaXMgdXNlZCB0byBjcmVhdGUgdGhlIG1lbnUgaWNvbiAqL1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogaW5oZXJpdDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShyb3RhdGUoMCkpO1xuICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHJvdGF0ZSgwKSk7XG4gICAgICAgICAgICBsZWZ0OiAtMTBweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYubWVudS1pcy1vcGVuIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgJi5tZW51LWlzLW9wZW4gc3BhbiB7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoJHdoaXRlLCAwKTtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDogMnB4O1xuXG4gICAgICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIDEpO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0ocm90YXRlKDEzNWRlZykpO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHJvdGF0ZSgyMjVkZWcpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLnBhZ2UtbmF2IHtcbiAgICBAaW5jbHVkZSBicChsYXJnZSkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgQGluY2x1ZGUgZmxhdC1saXN0O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIGxpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC00cHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBwYWRkaW5nOiByZW0oMjUpIHJlbSgzMCkgMCByZW0oMzApO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHotaW5kZXg6IDE7IFxufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICBNb2JpbGUgTmF2XG4gICAgXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi5tb2JpbGUtbmF2IHtcbiAgICBAaW5jbHVkZSBmbGF0LWxpc3Q7XG4gICAgbGkge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZSguMSk7IFxuICAgIH1cbiAgICBhIHtcbiAgICAgICAgY29sb3I6IGRhcmtlbigkc2l0ZS1ncmF5LCAyMCUpO1xuICAgICAgICBmb250LXNpemU6IDEuNWVtOyBcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcGFkZGluZzouOGVtIDFlbTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2l0ZS1wcmltYXJ5LWNvbG9yOyBcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgQ1RBc1xuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uY3RhcyB7XG4gICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgQGluY2x1ZGUgcG9zaXRpb24oZml4ZWQsIGF1dG8gMCAwIDApO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgxMjBweCkpO1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLXByb3BlcnR5KHRyYW5zZm9ybSk7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tZHVyYXRpb24oLjJzKTtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24oZWFzZS1pbi1vdXQpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjayguMyk7XG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xuICAgICAgICB3aWR0aDogMTAwdnc7XG4gICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgei1pbmRleDogMTA7XG4gICAgICAgICYuaXMtdmlzaWJsZSB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWSgwKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cblxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gUHJvdmlkZXMgYSBxdWljayBtZXRob2QgZm9yIHNldHRpbmcgYW4gZWxlbWVudOKAmXMgcG9zaXRpb24uIFVzZSBhIGBudWxsYCB2YWx1ZSB0byDigJxza2lw4oCdIGEgc2lkZS5cbi8vL1xuLy8vIEBwYXJhbSB7UG9zaXRpb259ICRwb3NpdGlvbiBbcmVsYXRpdmVdXG4vLy8gICBBIENTUyBwb3NpdGlvbiB2YWx1ZVxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAkY29vcmRpbmF0ZXMgW251bGwgbnVsbCBudWxsIG51bGxdXG4vLy8gICBMaXN0IG9mIHZhbHVlcyB0aGF0IGNvcnJlc3BvbmQgdG8gdGhlIDQtdmFsdWUgc3ludGF4IGZvciB0aGUgZWRnZXMgb2YgYSBib3hcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMCBudWxsIG51bGwgMTBlbSk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGxlZnQ6IDEwZW07XG4vLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vLyAgICAgdG9wOiAwO1xuLy8vICAgfVxuLy8vXG4vLy8gQHJlcXVpcmUge2Z1bmN0aW9ufSBpcy1sZW5ndGhcbi8vLyBAcmVxdWlyZSB7ZnVuY3Rpb259IHVucGFja1xuXG5AbWl4aW4gcG9zaXRpb24oJHBvc2l0aW9uOiByZWxhdGl2ZSwgJGNvb3JkaW5hdGVzOiBudWxsIG51bGwgbnVsbCBudWxsKSB7XG4gIEBpZiB0eXBlLW9mKCRwb3NpdGlvbikgPT0gbGlzdCB7XG4gICAgJGNvb3JkaW5hdGVzOiAkcG9zaXRpb247XG4gICAgJHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICRjb29yZGluYXRlczogdW5wYWNrKCRjb29yZGluYXRlcyk7XG5cbiAgJG9mZnNldHM6IChcbiAgICB0b3A6ICAgIG50aCgkY29vcmRpbmF0ZXMsIDEpLFxuICAgIHJpZ2h0OiAgbnRoKCRjb29yZGluYXRlcywgMiksXG4gICAgYm90dG9tOiBudGgoJGNvb3JkaW5hdGVzLCAzKSxcbiAgICBsZWZ0OiAgIG50aCgkY29vcmRpbmF0ZXMsIDQpXG4gICk7XG5cbiAgcG9zaXRpb246ICRwb3NpdGlvbjtcblxuICBAZWFjaCAkb2Zmc2V0LCAkdmFsdWUgaW4gJG9mZnNldHMge1xuICAgIEBpZiBpcy1sZW5ndGgoJHZhbHVlKSB7XG4gICAgICAjeyRvZmZzZXR9OiAkdmFsdWU7XG4gICAgfVxuICB9XG59XG4iLCIvKiBGb290ZXIgKi9cbi5mb290ZXItY29udGFpbmVyIHtcblx0cGFkZGluZzogMS41ZW0gMCAxZW07IFxuXHQuZm9vdGVyLW1haW4ge1xuXHRcdEBpbmNsdWRlIGdyaWQtcm93O1xuXHRcdC5jb3B5cmlnaHQsIC5iY2stdG9wIHtcblx0XHRcdEBpbmNsdWRlIGdyaWQtY29sKCk7XG5cdFx0XHRAaW5jbHVkZSBicChtZWRpdW1VcCkge1xuXHRcdFx0XHRAaW5jbHVkZSBncmlkLWNvbCg2KTtcblx0XHRcdH1cblx0XHRcdHAge1xuXHRcdFx0XHRjb2xvcjogZGFya2VuKCRzaXRlLWdyYXksIDIwJSk7XG5cdFx0XHRcdGZvbnQtc2l6ZTogMWVtOyBcblx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0XHRAaW5jbHVkZSBicChtZWRpdW1VcCkge1xuXHRcdFx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblx0LmZvb3Rlci1tZW51IHtcblx0XHRAaW5jbHVkZSBtZW51LWxpc3QoJGZsb2F0OiByaWdodCwgJGxpLW1hcmdpbjogMCAwIDAgLjhlbSk7XG5cdFx0YSB7XG5cdFx0XHRjb2xvcjogZGFya2VuKCRzaXRlLWdyYXksIDQwJSk7XG5cdFx0XHRmb250LXNpemU6IHJlbSgxMik7XG5cdFx0XHRmb250LXdlaWdodDogNzAwOyAgXG5cdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdH1cblx0fVxufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuXG4gICAgUHJlbG9hZGVyIFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuI3ByZWxvYWRlciB7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxMDE7XG4gICAgI2NkLWxvZ28tcHJlIHtcbiAgICAgICAgQGluY2x1ZGUgY2VudGVyLWFsaWduKCR2ZXI6IGZhbHNlLCAkaG9yOiB0cnVlLCAkcG9zOiBhYnNvbHV0ZSk7XG4gICAgICAgIHBhZGRpbmc6IDhlbSAwIDA7XG4gICAgICAgIHdpZHRoOiAxNjdweDtcbiAgICAgICAgaGVpZ2h0OiAxMjBweDsgIFxuICAgIH1cbiAgICAudHh0IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIH1cbiAgICAudHh0LXBlcmMge1xuICAgICAgICBmb250LXNpemU6IHJlbSg2MCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbjogMCAwIDZweCAwO1xuICAgICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuXG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuXG4gICAgLnByb2dyZXNzIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkd2hpdGUsIC4yKTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMTVweCBhdXRvO1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIGhlaWdodDogNXB4O1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHNpdGUtc2Vjb25kYXJ5LWNvbG9yLCAuOCk7XG4gICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgfVxuICAgICYuaXMtaGlkZGVuIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxufVxuXG4uaG9tZS5pcy1sb2FkaW5nIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKlxuICogUHVsc2UgYW5pbWF0aW9uXG4qL1xuQC13ZWJraXQta2V5ZnJhbWVzIHB1bHNlIHtcbiAgICAwJSB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB9XG4gICAgNTAlIHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgfVxufVxuQGtleWZyYW1lcyBwdWxzZSB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIH1cbiAgICA1MCUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIH1cbn1cbi5jZC1wdWxzZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHB1bHNlIDJzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAtbW96LWFuaW1hdGlvbjogcHVsc2UgMnMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiBwdWxzZSAycyBsaW5lYXIgaW5maW5pdGU7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogcHVsc2U7XG4gICAgICAgICAgICBhbmltYXRpb24tbmFtZTogcHVsc2U7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIE1vZGFsIENvbnRlbnRcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4gICAgICAgIFxuJHJldmVhbC1iYWNrZ3JvdW5kOiBibGFjayguOSk7XG4kcmV2ZWFsLXBhZGRpbmc6IDA7XG4kcmV2ZWFsLWJvcmRlcjogJGJsYWNrO1xuXG4uem9vbUluIHtcbiAgICBAaW5jbHVkZSB6b29tSW4oJGR1cmF0aW9uOiAuMnMpO1xufVxuXG4uem9vbU91dCB7XG4gICAgQGluY2x1ZGUgem9vbU91dCgkZHVyYXRpb246IC41cyk7XG59XG5cbi5mYWRlSW5Eb3duQmlnIHtcbiAgICBAaW5jbHVkZSBmYWRlSW5Eb3duQmlnKCRkdXJhdGlvbjogLjVzKTtcbn1cblxuLmZhZGVPdXRVcEJpZyB7XG4gICAgQGluY2x1ZGUgZmFkZU91dFVwQmlnKCRkdXJhdGlvbjogLjVzKTtcbn1cblxuLmNsb3NlLWJ1dHRvbiB7XG4gICAgQGluY2x1ZGUgYWJzLXBvcygkdDogNSUsICRyOiA1JSk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlKC44KTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcGFkZGluZzogLjU1ZW0gMDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRvcDogNSU7XG4gICAgei1pbmRleDogMTA7XG5cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRzaXRlLXByaW1hcnktY29sb3I7XG4gICAgfVxuXG4gICAgLmNsb3NlIHtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAvLyBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGkge1xuICAgICAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogNnB4LCRyOiAxNTAlKTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDExKTsgXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShyb3RhdGUoNDVkZWcpKTtcbiAgICAgICAgfVxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0ocm90YXRlKC00NWRlZykpO1xuICAgICAgICB9XG4gICAgICAgICYuYmlnIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZSgzKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbiNjb250YWN0TW9kYWwsICNtb2JpbGVNZW51IHtcbiAgICBAaW5jbHVkZSByZXZlYWwtbW9kYWwtYmFzZTtcbiAgICBAaW5jbHVkZSByZXZlYWwtbW9kYWwtZnVsbHNjcmVlbjtcbiAgICBcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbi5tb2RhbC1jb250ZW50IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2soLjgpO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4gICAgICAgIHBhZGRpbmc6IDhlbSA1ZW0gMDtcbiAgICB9XG4gICAgcGFkZGluZzogNmVtIDFlbSAxZW07IFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgXG4gICAgLm92IHtcbiAgICAgICAgYmFja2dyb3VuZDogYmxhY2soLjg1KTtcbiAgICB9XG4gICAgLmVudHJ5IHtcbiAgICAgICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogOTAlO1xuICAgICAgICB9XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDYwJTsgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bzsgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICAuY2QtbGFuZyB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBjZW50ZXItYmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4ICBcbiAgICAgICAgICAgIH0gXG4gICAgICAgIH0gXG4gICAgfVxufVxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIEZvcm1cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4uZm9ybS1ibG9jayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4jc3VjY2Vzc0Jsb2NrIHtcbiAgICBAaW5jbHVkZSBhYnMtcG9zKCR0OjAsICRyOjAsICRiOjAsICRsOjApO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRzaXRlLXNlY29uZGFyeS1jb2xvciwgLjgpO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICAqIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICB9XG4gICAgcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDI2KTsgXG4gICAgfVxufVxuXG4jZm9ybUNvbnRhaW5lciB7XG4gICAgLmVudHJ5IHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcGFkZGluZy10b3A6IDFlbTtcbiAgICB9XG4gICAgLmZpZWxkLWNvbnRhaW5lciB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtcm93O1xuICAgICAgICBbY2xhc3MqPVwiZm9ybS1cIl0ge1xuICAgICAgICAgICAgQGluY2x1ZGUgYnAobGFyZ2UpIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbCg2LCAzMHB4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmNkLWZvcm0ge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICAgIEBpbmNsdWRlIGJwKG1lZGl1bVVwKSB7XG4gICAgICAgIGxlZ2VuZCArIGRpdiB7XG4gICAgICAgICAgICAvKiByZWR1Y2UgbWFyZ2luLXRvcCBmb3IgZmlyc3QgZm9ybSBlbGVtZW50IGFmdGVyIHRoZSBsZWdlbmQgKi9cbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICBoNCwgLmNkLWxhYmVsIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCB0ZXh0YXJlYSwgc2VsZWN0IHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgICAqIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICB9XG5cbiAgICBmaWVsZHNldCB7XG4gICAgICAgIEBpbmNsdWRlIHplcm8tb3V0O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgfVxuXG4gICAgbGVnZW5kIHtcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICB9XG5cbiAgICBoNCwgLmNkLWxhYmVsIHtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIH1cblxuICAgIC5pY29uIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgIC5jZC1sYWJlbCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIGlucHV0LCB0ZXh0YXJlYSwgc2VsZWN0LCBsYWJlbCB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE3KTtcbiAgICB9XG5cbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwidGVsXCJdLCB0ZXh0YXJlYSwgc2VsZWN0LCBsZWdlbmQge1xuICAgICAgICBAaW5jbHVkZSBhcHBlYXJhbmNlKG5vbmUpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSwgdGV4dGFyZWEsIHNlbGVjdCB7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKCRibGFjaywgLjA4KTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgkd2hpdGUsIC4zKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjI1ZW07XG4gICAgICAgIC8qIGdlbmVyYWwgc3R5bGUgZm9yIGlucHV0IGVsZW1lbnRzICovXG4gICAgICAgIHBhZGRpbmc6IDE4cHg7XG5cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICBjb2xvcjogbGlnaHRlbigkYmxhY2ssIDQwJSk7XG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlKC45NSk7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoJGJsYWNrLCAuMik7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IGxpZ2h0ZW4oJHdoaXRlLCAzMCUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLm1lc3NhZ2Uge1xuICAgICAgICBtaW4taGVpZ2h0OiAyMzhweDtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgICB9XG5cbiAgICAuc3VibWl0LWNvbnRhaW5lciB7XG4gICAgICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuXG5cbiAgICBbcmVxdWlyZWRdIHtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2NkLXJlcXVpcmVkLnN2Z1wiKSBuby1yZXBlYXQgdG9wIHJpZ2h0O1xuICAgIH1cblxuICAgIC5lcnJvci1tZXNzYWdlIHAge1xuICAgICAgICBjb2xvcjogJGNvbG9yLTQ7XG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE1KTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjYzAwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAuMjVlbTtcbiAgICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgfVxuXG4gICAgLmVycm9yIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjYzAwICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4uc3VibWl0IHtcbiAgICBAaW5jbHVkZSBjdGFNYWluO1xuICAgIGNvbG9yOiBkYXJrZW4oJHNpdGUtZ3JheSwgMTAlKTsgXG4gICAgZm9udC1zaXplOiByZW0oMTgpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHNpdGUtZ3JheTsgXG4gICAgcGFkZGluZzogMWVtIDIuNWVtO1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkc2l0ZS1wcmltYXJ5LWNvbG9yO1xuICAgIH1cbn1cblxuLnBhZ2UtY29udGVudCB7XG4gICAgLnN1Ym1pdCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tY29sb3I7XG4gICAgICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHNpdGUtcHJpbWFyeS1jb2xvcjtcbiAgICAgICAgfSBcbiAgICB9XG59XG5cbkBpbmNsdWRlIGtleWZyYW1lcyhjZC1ib3VuY2UpIHtcbiAgICAwJSwgMTAwJSB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShzY2FsZSgxKSk7XG4gICAgfVxuXG4gICAgNTAlIHtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHNjYWxlKC44KSk7XG4gICAgfVxufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcbkN1c3RvbSBpY29uc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLmNkLWZvcm0ge1xuICAgIC5pY29uIGlucHV0LCAuaWNvbiBzZWxlY3QsIC5pY29uIHRleHRhcmVhIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1NHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnVzZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZm9ybS1pbnB1dCB1cmwoXCIuLi9pbWcvY2QtaWNvbi11c2VyLnN2Z1wiKSBuby1yZXBlYXQgMTZweCBjZW50ZXI7XG4gICAgfVxuXG4gICAgW3JlcXVpcmVkXS51c2VyIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGZvcm0taW5wdXQgdXJsKFwiLi4vaW1nL2NkLWljb24tdXNlci5zdmdcIikgbm8tcmVwZWF0IDE2cHggY2VudGVyLFxuICAgICAgICB1cmwoXCIuLi9pbWcvY2QtcmVxdWlyZWQuc3ZnXCIpIG5vLXJlcGVhdCB0b3AgcmlnaHQ7XG4gICAgfVxuXG4gICAgLnRlbCB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRmb3JtLWlucHV0IHVybChcIi4uL2ltZy9jZC1pY29uLXBob25lLnN2Z1wiKSBuby1yZXBlYXQgMTZweCBjZW50ZXI7XG4gICAgfVxuXG4gICAgW3JlcXVpcmVkXS50ZWwge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZm9ybS1pbnB1dCB1cmwoXCIuLi9pbWcvY2QtaWNvbi1waG9uZS5zdmdcIikgbm8tcmVwZWF0IDE2cHggY2VudGVyLFxuICAgICAgICB1cmwoXCIuLi9pbWcvY2QtcmVxdWlyZWQuc3ZnXCIpIG5vLXJlcGVhdCB0b3AgcmlnaHQ7XG4gICAgfVxuXG4gICAgLmVtYWlsIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGZvcm0taW5wdXQgdXJsKFwiLi4vaW1nL2NkLWljb24tZW1haWwuc3ZnXCIpIG5vLXJlcGVhdCAxNnB4IGNlbnRlcjtcbiAgICB9XG5cbiAgICBbcmVxdWlyZWRdLmVtYWlsIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGZvcm0taW5wdXQgdXJsKFwiLi4vaW1nL2NkLWljb24tZW1haWwuc3ZnXCIpIG5vLXJlcGVhdCAxNnB4IGNlbnRlcixcbiAgICAgICAgdXJsKFwiLi4vaW1nL2NkLXJlcXVpcmVkLnN2Z1wiKSBuby1yZXBlYXQgdG9wIHJpZ2h0O1xuICAgIH1cblxuICAgIC5tZXNzYWdlIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGZvcm0taW5wdXQgdXJsKFwiLi4vaW1nL2NkLWljb24tbWVzc2FnZS5zdmdcIikgbm8tcmVwZWF0IDE2cHggMTZweDtcbiAgICB9XG5cbiAgICBbcmVxdWlyZWRdLm1lc3NhZ2Uge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZm9ybS1pbnB1dCB1cmwoXCIuLi9pbWcvY2QtaWNvbi1tZXNzYWdlLnN2Z1wiKSBuby1yZXBlYXQgMTZweCAxNnB4LFxuICAgICAgICB1cmwoXCIuLi9pbWcvY2QtcmVxdWlyZWQuc3ZnXCIpIG5vLXJlcGVhdCB0b3AgcmlnaHQ7XG4gICAgfVxufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcbkZMb2F0aW5nIGxhYmVscyBcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4kbGFiZWwtcG9zOiAxOHB4O1xuICAgIFxuLmZsb2F0aW5nLWxhYmVscyB7XG4gICAgQGluY2x1ZGUgYnAobWVkaXVtVXApIHtcbiAgICAgICAgbGVnZW5kICsgZGl2IHtcbiAgICAgICAgICAgIC8qIHJlZHVjZSBtYXJnaW4tdG9wIGZvciBmaXJzdCBmb3JtIGVsZW1lbnQgYWZ0ZXIgdGhlIGxlZ2VuZCAqL1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jZC1sYWJlbCB7XG4gICAgICAgICAgICB0b3A6IDIwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW2NsYXNzKj1cImZvcm0tXCJdIGRpdiB7XG4gICAgICAgIG1hcmdpbjogMjhweCAwO1xuICAgIH1cblxuICAgIC5jZC1sYWJlbCB7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24odG9wIC4ycywgbGVmdCAuMnMsIGZvbnQtc2l6ZSAuMnMpO1xuICAgICAgICBjb2xvcjogcmdiYSgkd2hpdGUsIC41KTtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTcpO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogJGxhYmVsLXBvcztcbiAgICAgICAgbGVmdDogJGxhYmVsLXBvcztcblxuICAgICAgICBjdXJzb3I6IHRleHQ7XG4gICAgfVxuXG4gICAgLmljb24ge1xuICAgICAgICAuY2QtbGFiZWwge1xuICAgICAgICAgICAgbGVmdDogNTZweDtcbiAgICAgICAgfVxuICAgICAgICAuZXJyb3Ige1xuICAgICAgICAgICAgQGluY2x1ZGUgYWJzLXBvcygkdDogLSRsYWJlbC1wb3MsICRyOiAwKTtcbiAgICAgICAgICAgIGNvbG9yOiAkc2l0ZS1wcmltYXJ5LWNvbG9yO1xuICAgICAgICB9IFxuICAgICAgICAmLmhhcy1lcnJvciB7XG4gICAgICAgICAgICAuY2QtbGFiZWwge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkc2l0ZS1wcmltYXJ5LWNvbG9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSwgdGV4dGFyZWEsIHNlbGVjdCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRzaXRlLXByaW1hcnktY29sb3I7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkc2l0ZS1wcmltYXJ5LWNvbG9yOyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmLmhhcy1zdWNjZXNzIHtcbiAgICAgICAgICAgIC5jZC1sYWJlbCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRzaXRlLXNlY29uZGFyeS1jb2xvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIHRleHRhcmVhLCBzZWxlY3Qge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkc2l0ZS1zZWNvbmRhcnktY29sb3I7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkc2l0ZS1zZWNvbmRhcnktY29sb3I7IFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmNkLWxhYmVsLmZsb2F0IHtcbiAgICAgICAgLyogbW92ZSBsYWJlbCBvdXQgdGhlIGlucHV0IGZpZWxkICovXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDExKTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgdG9wOiAtJGxhYmVsLXBvcztcbiAgICAgICAgbGVmdDogMCAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCwgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCwgc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGwge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkd2hpdGUsIDEwJSk7XG4gICAgYm94LXNoYWRvdzogMCAwIDVweCByZ2JhKCRibGFjaywgLjIpO1xuICAgIGJvcmRlci1jb2xvcjogbGlnaHRlbigkd2hpdGUsIDMwJSk7XG59XG5cbmlucHV0LnJkciB7XG4gICAgb3V0bGluZTogMDtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICB3aWR0aDogMjBweDtcbn1cblxuLmNvbnRlbnQtZW50cnkge1xuICAgIC5jZC1mb3JtIHtcbiAgICAgICAgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSwgdGV4dGFyZWEsIHNlbGVjdCB7XG4gICAgICAgICAgICBjb2xvcjogYmxhY2soMC41KTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKCRibGFjaywgLjA4KTtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHNpdGUtZ3JheTtcblxuICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJGJsYWNrLCA0MCUpO1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlKC45NSk7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDVweCByZ2JhKCRibGFjaywgLjIpO1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogbGlnaHRlbigkd2hpdGUsIDMwJSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmZsb2F0aW5nLWxhYmVscyB7XG4gICAgICAgIC5jZC1sYWJlbCB7XG4gICAgICAgICAgICBjb2xvcjogcmdiYSgkYmxhY2ssIC41KTtcbiAgICAgICAgfVxuICAgIH1cbiAgIFxufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgcmV2ZWFsXG4vLy8vXG5cbi8vLyBEZWZhdWx0IGJhY2tncm91bmQgY29sb3Igb2YgYSBtb2RhbC5cbi8vLyBAdHlwZSBDb2xvclxuJHJldmVhbC1iYWNrZ3JvdW5kOiAkd2hpdGUgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IHdpZHRoIG9mIGEgbW9kYWwsIHdpdGggbm8gY2xhc3MgYXBwbGllZC5cbi8vLyBAdHlwZSBOdW1iZXJcbiRyZXZlYWwtd2lkdGg6IDYwMHB4ICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCBtYXhpbXVtIHdpZHRoIG9mIGEgbW9kYWwuXG4vLy8gQHR5cGUgTnVtYmVyXG4kcmV2ZWFsLW1heC13aWR0aDogJGdsb2JhbC13aWR0aCAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgcGFkZGluZyBpbnNpZGUgYSBtb2RhbC5cbi8vLyBAdHlwZSBOdW1iZXJcbiRyZXZlYWwtcGFkZGluZzogJGdsb2JhbC1wYWRkaW5nICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCBib3JkZXIgYXJvdW5kIGEgbW9kYWwuXG4vLy8gQHR5cGUgTnVtYmVyXG4kcmV2ZWFsLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgcmFkaXVzIGZvciBtb2RhbC5cbi8vLyBAdHlwZSBOdW1iZXJcbiRyZXZlYWwtcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cyAhZGVmYXVsdDtcblxuLy8vIHotaW5kZXggZm9yIG1vZGFscy4gVGhlIG92ZXJsYXkgdXNlcyB0aGlzIHZhbHVlLCB3aGlsZSB0aGUgbW9kYWwgaXRzZWxmIHVzZXMgdGhpcyB2YWx1ZSBwbHVzIG9uZS5cbi8vLyBAdHlwZSBOdW1iZXJcbiRyZXZlYWwtemluZGV4OiAxMDA1ICFkZWZhdWx0O1xuXG4vLy8gQmFja2dyb3VuZCBjb2xvciBvZiBtb2RhbCBvdmVybGF5cy5cbi8vLyBAdHlwZSBDb2xvclxuJHJldmVhbC1vdmVybGF5LWJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAwLjQ1KSAhZGVmYXVsdDtcblxuLy8vIEFkZHMgc3R5bGVzIGZvciBhIG1vZGFsIG92ZXJsYXkuXG4vLy8gQHBhcmFtIHtDb2xvcn0gJGJhY2tncm91bmQgWyRyZXZlYWwtb3ZlcmxheS1iYWNrZ3JvdW5kXSAtIEJhY2tncm91bmQgY29sb3Igb2YgdGhlIG92ZXJsYXkuXG5AbWl4aW4gcmV2ZWFsLW92ZXJsYXkoJGJhY2tncm91bmQ6ICRyZXZlYWwtb3ZlcmxheS1iYWNrZ3JvdW5kKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAkcmV2ZWFsLXppbmRleDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmQ7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLy8vIEFkZHMgYmFzZSBzdHlsZXMgZm9yIGEgbW9kYWwuXG5AbWl4aW4gcmV2ZWFsLW1vZGFsLWJhc2Uge1xuICBAaW5jbHVkZSBkaXNhYmxlLW1vdXNlLW91dGxpbmU7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHotaW5kZXg6ICRyZXZlYWwtemluZGV4ICsgMTtcbiAgcGFkZGluZzogJHJldmVhbC1wYWRkaW5nO1xuICBib3JkZXI6ICRyZXZlYWwtYm9yZGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkcmV2ZWFsLWJhY2tncm91bmQ7XG4gIGJvcmRlci1yYWRpdXM6ICRyZXZlYWwtcmFkaXVzO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQobWVkaXVtKSB7XG4gICAgbWluLWhlaWdodDogMDtcbiAgfVxuXG4gIC8vIE1ha2Ugc3VyZSByb3dzIGRvbid0IGhhdmUgYSBtaW4td2lkdGggb24gdGhlbVxuICAuY29sdW1uLFxuICAuY29sdW1ucyB7XG4gICAgbWluLXdpZHRoOiAwO1xuICB9XG5cbiAgLy8gU3RyaXAgbWFyZ2lucyBmcm9tIHRoZSBsYXN0IGl0ZW0gaW4gdGhlIG1vZGFsXG4gID4gOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuLy8vIEFkanVzdHMgdGhlIHdpZHRoIG9mIGEgbW9kYWwuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR3aWR0aCAtIFdpZHRoIG9mIHRoZSBtb2RhbC4gR2VuZXJhbGx5IGEgcGVyY2VudGFnZS5cbi8vLyBAcGFyYW0ge051bWJlcn0gJG1heC13aWR0aCBbJHJldmVhbC1tYXgtd2lkdGhdIC0gTWF4aW11bSB3aWR0aCBvZiB0aGUgbW9kYWwuXG5AbWl4aW4gcmV2ZWFsLW1vZGFsLXdpZHRoKFxuICAkd2lkdGg6ICRyZXZlYWwtd2lkdGgsXG4gICRtYXgtd2lkdGg6ICRyZXZlYWwtbWF4LXdpZHRoXG4pIHtcbiAgQGluY2x1ZGUgYnJlYWtwb2ludChtZWRpdW0pIHtcbiAgICBAZXh0ZW5kICVyZXZlYWwtY2VudGVyZWQ7XG4gICAgd2lkdGg6ICR3aWR0aDtcbiAgICBtYXgtd2lkdGg6ICRyZXZlYWwtbWF4LXdpZHRoO1xuICB9XG59XG5cbi8vLyBDcmVhdGVzIGEgZnVsbC1zY3JlZW4gbW9kYWwsIHdoaWNoIHN0cmV0Y2hlcyB0aGUgZnVsbCB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSB3aW5kb3cuXG5AbWl4aW4gcmV2ZWFsLW1vZGFsLWZ1bGxzY3JlZW4ge1xuICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBEdXBsaWNhdGVQcm9wZXJ0eVxuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBtYXgtd2lkdGg6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbkBtaXhpbiBmb3VuZGF0aW9uLXJldmVhbCB7XG4gIC8vIFtUT0RPXSBJcyB0aGlzIG5lY2Vzc2FyeT9cbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgUXVhbGlmeWluZ0VsZW1lbnRcbiAgYm9keS5pcy1yZXZlYWwtb3BlbiB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAvLyBodG1sIGdldHMgdGhpcyBjbGFzcyBvbmx5IGluIGlPU1xuICBodG1sLmlzLXJldmVhbC1vcGVuLFxuICBodG1sLmlzLXJldmVhbC1vcGVuIGJvZHkge1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgfVxuXG4gIC8vIE92ZXJsYXlcbiAgLnJldmVhbC1vdmVybGF5IHtcbiAgICBAaW5jbHVkZSByZXZlYWwtb3ZlcmxheTtcbiAgfVxuXG4gIC8vIE1vZGFsIGNvbnRhaW5lclxuICAucmV2ZWFsIHtcbiAgICBAaW5jbHVkZSByZXZlYWwtbW9kYWwtYmFzZTtcbiAgICBAaW5jbHVkZSByZXZlYWwtbW9kYWwtd2lkdGgoJHJldmVhbC13aWR0aCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMTAwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cbiAgICAvLyBQbGFjZWhvbGRlciBzZWxlY3RvciBmb3IgbWVkaXVtLWFuZC11cCBtb2RhbHNcbiAgICAvLyBQcmV2ZW50cyBkdXBsaWNhdGUgQ1NTIHdoZW4gZGVmaW5pbmcgbXVsdGlwbGUgUmV2ZWFsIHNpemVzXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtZWRpdW0pIHtcbiAgICAgICVyZXZlYWwtY2VudGVyZWQge1xuICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICByaWdodDogYXV0bztcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIHBhZGRpbmdcbiAgICAmLmNvbGxhcHNlIHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuXG4gICAgLy8gU2l6aW5nIGNsYXNzZXNcbiAgICAmLnRpbnkgIHsgQGluY2x1ZGUgcmV2ZWFsLW1vZGFsLXdpZHRoKDMwJSk7IH1cbiAgICAmLnNtYWxsIHsgQGluY2x1ZGUgcmV2ZWFsLW1vZGFsLXdpZHRoKDUwJSk7IH1cbiAgICAmLmxhcmdlIHsgQGluY2x1ZGUgcmV2ZWFsLW1vZGFsLXdpZHRoKDkwJSk7IH1cblxuICAgIC8vIEZ1bGwtc2NyZWVuIG1vZGVcbiAgICAmLmZ1bGwge1xuICAgICAgQGluY2x1ZGUgcmV2ZWFsLW1vZGFsLWZ1bGxzY3JlZW47XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkLXpmLXplcm8tYnJlYWtwb2ludCBvbmx5KSB7XG4gICAgICBAaW5jbHVkZSByZXZlYWwtbW9kYWwtZnVsbHNjcmVlbjtcbiAgICB9XG5cbiAgICAmLndpdGhvdXQtb3ZlcmxheSB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgfVxuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG4vKiFcbiAqIEhhbWJ1cmdlcnNcbiAqIEBkZXNjcmlwdGlvbiBUYXN0eSBDU1MtYW5pbWF0ZWQgaGFtYnVyZ2Vyc1xuICogQGF1dGhvciBKb25hdGhhbiBTdWggQGpvbnN1aFxuICogQHNpdGUgaHR0cHM6Ly9qb25zdWguY29tL2hhbWJ1cmdlcnNcbiAqIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zdWgvaGFtYnVyZ2Vyc1xuICovXG5cbi8vIFNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuJGhhbWJ1cmdlci1wYWRkaW5nLXggICAgICAgICAgICAgICAgICAgICAgIDogMTVweCAhZGVmYXVsdDtcbiRoYW1idXJnZXItcGFkZGluZy15ICAgICAgICAgICAgICAgICAgICAgICA6IDE1cHggIWRlZmF1bHQ7XG4kaGFtYnVyZ2VyLWxheWVyLXdpZHRoICAgICAgICAgICAgICAgICAgICAgOiA0MHB4ICFkZWZhdWx0O1xuJGhhbWJ1cmdlci1sYXllci1oZWlnaHQgICAgICAgICAgICAgICAgICAgIDogNHB4ICFkZWZhdWx0O1xuJGhhbWJ1cmdlci1sYXllci1zcGFjaW5nICAgICAgICAgICAgICAgICAgIDogNnB4ICFkZWZhdWx0O1xuJGhhbWJ1cmdlci1sYXllci1jb2xvciAgICAgICAgICAgICAgICAgICAgIDogI2ZmZiAhZGVmYXVsdDtcbiRoYW1idXJnZXItbGF5ZXItYm9yZGVyLXJhZGl1cyAgICAgICAgICAgICA6IDRweCAhZGVmYXVsdDtcbiRoYW1idXJnZXItaG92ZXItb3BhY2l0eSAgICAgICAgICAgICAgICAgICA6IDAuNyAhZGVmYXVsdDtcbiRoYW1idXJnZXItaG92ZXItdHJhbnNpdGlvbi1kdXJhdGlvbiAgICAgICA6IDAuMTVzICFkZWZhdWx0O1xuJGhhbWJ1cmdlci1ob3Zlci10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyICFkZWZhdWx0O1xuXG4vLyBUbyB1c2UgQ1NTIGZpbHRlcnMgYXMgdGhlIGhvdmVyIGVmZmVjdCBpbnN0ZWFkIG9mIG9wYWNpdHksXG4vLyBzZXQgJGhhbWJ1cmdlci1ob3Zlci11c2UtZmlsdGVyIGFzIHRydWUgYW5kXG4vLyBjaGFuZ2UgdGhlIHZhbHVlIG9mICRoYW1idXJnZXItaG92ZXItZmlsdGVyIGFjY29yZGluZ2x5LlxuJGhhbWJ1cmdlci1ob3Zlci11c2UtZmlsdGVyOiBmYWxzZSAhZGVmYXVsdDtcbiRoYW1idXJnZXItaG92ZXItZmlsdGVyICAgIDogb3BhY2l0eSg1MCUpICFkZWZhdWx0O1xuXG4vLyBUeXBlcyAoUmVtb3ZlIG9yIGNvbW1lbnQgb3V0IHdoYXQgeW91IGRvbuKAmXQgbmVlZClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4kaGFtYnVyZ2VyLXR5cGVzOiAoXG4gIC8vIDNkeCxcbiAgLy8gM2R4LXIsXG4gIC8vIDNkeSxcbiAgLy8gM2R5LXIsXG4gIC8vIGFycm93LFxuICAvLyBhcnJvdy1yLFxuICBhcnJvd2FsdCxcbiAgLy8gYXJyb3dhbHQtcixcbiAgLy8gYm9yaW5nLFxuICAvLyBjb2xsYXBzZSxcbiAgLy8gY29sbGFwc2UtcixcbiAgLy8gZWxhc3RpYyxcbiAgLy8gZWxhc3RpYy1yLFxuICAvLyBlbXBoYXRpYyxcbiAgLy8gZW1waGF0aWMtcixcbiAgLy8gc2xpZGVyLFxuICAvLyBzbGlkZXItcixcbiAgLy8gc3ByaW5nLFxuICAvLyBzcHJpbmctcixcbiAgLy8gc3RhbmQsXG4gIC8vIHN0YW5kLXIsXG4gIC8vIHNwaW4sXG4gIC8vIHNwaW4tcixcbiAgLy8gc3F1ZWV6ZSxcbiAgLy8gdm9ydGV4LFxuICAvLyB2b3J0ZXgtclxuKSAhZGVmYXVsdDtcblxuLy8gQmFzZSBIYW1idXJnZXIgKFdlIG5lZWQgdGhpcylcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5AaW1wb3J0IFwiYmFzZVwiO1xuXG4vLyBIYW1idXJnZXIgdHlwZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5AaW1wb3J0IFwidHlwZXMvM2R4XCI7XG5AaW1wb3J0IFwidHlwZXMvM2R4LXJcIjtcbkBpbXBvcnQgXCJ0eXBlcy8zZHlcIjtcbkBpbXBvcnQgXCJ0eXBlcy8zZHktclwiO1xuQGltcG9ydCBcInR5cGVzL2Fycm93XCI7XG5AaW1wb3J0IFwidHlwZXMvYXJyb3ctclwiO1xuQGltcG9ydCBcInR5cGVzL2Fycm93YWx0XCI7XG5AaW1wb3J0IFwidHlwZXMvYXJyb3dhbHQtclwiO1xuQGltcG9ydCBcInR5cGVzL2JvcmluZ1wiO1xuQGltcG9ydCBcInR5cGVzL2NvbGxhcHNlXCI7XG5AaW1wb3J0IFwidHlwZXMvY29sbGFwc2UtclwiO1xuQGltcG9ydCBcInR5cGVzL2VsYXN0aWNcIjtcbkBpbXBvcnQgXCJ0eXBlcy9lbGFzdGljLXJcIjtcbkBpbXBvcnQgXCJ0eXBlcy9lbXBoYXRpY1wiO1xuQGltcG9ydCBcInR5cGVzL2VtcGhhdGljLXJcIjtcbkBpbXBvcnQgXCJ0eXBlcy9zbGlkZXJcIjtcbkBpbXBvcnQgXCJ0eXBlcy9zbGlkZXItclwiO1xuQGltcG9ydCBcInR5cGVzL3NwcmluZ1wiO1xuQGltcG9ydCBcInR5cGVzL3NwcmluZy1yXCI7XG5AaW1wb3J0IFwidHlwZXMvc3RhbmRcIjtcbkBpbXBvcnQgXCJ0eXBlcy9zdGFuZC1yXCI7XG5AaW1wb3J0IFwidHlwZXMvc3BpblwiO1xuQGltcG9ydCBcInR5cGVzL3NwaW4tclwiO1xuQGltcG9ydCBcInR5cGVzL3NxdWVlemVcIjtcbkBpbXBvcnQgXCJ0eXBlcy92b3J0ZXhcIjtcbkBpbXBvcnQgXCJ0eXBlcy92b3J0ZXgtclwiO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ29va2luZyB1cCBhZGRpdGlvbmFsIHR5cGVzOlxuLy9cbi8vIFRoZSBTYXNzIGZvciBlYWNoIGhhbWJ1cmdlciB0eXBlIHNob3VsZCBiZSBuZXN0ZWRcbi8vIGluc2lkZSBhbiBAaWYgZGlyZWN0aXZlIHRvIGNoZWNrIHdoZXRoZXIgb3Igbm90XG4vLyBpdCBleGlzdHMgaW4gJGhhbWJ1cmdlci10eXBlcyBzbyBvbmx5IHRoZSBDU1MgZm9yXG4vLyBpbmNsdWRlZCB0eXBlcyBhcmUgZ2VuZXJhdGVkLlxuLy9cbi8vIGUuZy4gaGFtYnVyZ2Vycy90eXBlcy9fbmV3LXR5cGUuc2Nzc1xuLy9cbi8vIEBpZiBpbmRleCgkaGFtYnVyZ2VyLXR5cGVzLCBuZXctdHlwZSkge1xuLy8gICAuaGFtYnVyZ2VyLS1uZXctdHlwZSB7XG4vLyAgICAgLi4uXG4vLyAgIH1cbi8vIH1cbiIsIi8vIEhhbWJ1cmdlclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi5oYW1idXJnZXIge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIC8vIE5vcm1hbGl6ZSAoPGJ1dHRvbj4pXG4gICAgZm9udDogaW5oZXJpdDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogJGhhbWJ1cmdlci1wYWRkaW5nLXkgJGhhbWJ1cmdlci1wYWRkaW5nLXg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkaGFtYnVyZ2VyLWhvdmVyLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICRoYW1idXJnZXItaG92ZXItdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5LCBmaWx0ZXI7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgQGlmICRoYW1idXJnZXItaG92ZXItdXNlLWZpbHRlciA9PSB0cnVlIHtcbiAgICAgICAgICAgIGZpbHRlcjogJGhhbWJ1cmdlci1ob3Zlci1maWx0ZXI7XG4gICAgICAgIH1cbiAgICAgICAgQGVsc2Uge1xuICAgICAgICAgICAgb3BhY2l0eTogJGhhbWJ1cmdlci1ob3Zlci1vcGFjaXR5O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uaGFtYnVyZ2VyLWJveCB7XG4gICAgd2lkdGg6ICRoYW1idXJnZXItbGF5ZXItd2lkdGg7XG4gICAgaGVpZ2h0OiAkaGFtYnVyZ2VyLWxheWVyLWhlaWdodCAqIDMgKyAkaGFtYnVyZ2VyLWxheWVyLXNwYWNpbmcgKiAyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5oYW1idXJnZXItaW5uZXIge1xuICAgIG1hcmdpbi10b3A6ICRoYW1idXJnZXItbGF5ZXItaGVpZ2h0IC8gLTI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdG9wOiA1MCU7XG5cbiAgICAmLCAmOjpiZWZvcmUsICY6OmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGhhbWJ1cmdlci1sYXllci1jb2xvcjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJGhhbWJ1cmdlci1sYXllci1ib3JkZXItcmFkaXVzO1xuICAgICAgICB3aWR0aDogJGhhbWJ1cmdlci1sYXllci13aWR0aDtcbiAgICAgICAgaGVpZ2h0OiAkaGFtYnVyZ2VyLWxheWVyLWhlaWdodDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gICAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAuMTVzO1xuICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XG4gICAgfVxuXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgICY6OmJlZm9yZSB7XG4gICAgICAgIHRvcDogKCRoYW1idXJnZXItbGF5ZXItc3BhY2luZyArICRoYW1idXJnZXItbGF5ZXItaGVpZ2h0KSAqIC0xO1xuICAgIH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgICAgYm90dG9tOiAoJGhhbWJ1cmdlci1sYXllci1zcGFjaW5nICsgJGhhbWJ1cmdlci1sYXllci1oZWlnaHQpICogLTE7XG4gICAgfVxufVxuIiwiQGlmIGluZGV4KCRoYW1idXJnZXItdHlwZXMsIGFycm93YWx0KSB7XG4gIC8qXG4gICAqIEFycm93IEFsdFxuICAgKi9cbiAgLmhhbWJ1cmdlci0tYXJyb3dhbHQge1xuICAgIC5oYW1idXJnZXItaW5uZXIge1xuICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgdHJhbnNpdGlvbjogdG9wIDAuMXMgMC4xNXMgZWFzZSxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtIDAuMTVzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG4gICAgICB9XG5cbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYm90dG9tIDAuMXMgMC4xNXMgZWFzZSxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtIDAuMTVzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5pcy1hY3RpdmUge1xuICAgICAgLmhhbWJ1cmdlci1pbm5lciB7XG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJGhhbWJ1cmdlci1sYXllci13aWR0aCAqIC0wLjIsICRoYW1idXJnZXItbGF5ZXItd2lkdGggKiAtMC4yNSwgMCkgcm90YXRlKC00NWRlZykgc2NhbGUoMC43LCAxKTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0b3AgMC4xcyBlYXNlLFxuICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAwLjE1cyAwLjFzIGN1YmljLWJlemllcigwLjg5NSwgMC4wMywgMC42ODUsIDAuMjIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCRoYW1idXJnZXItbGF5ZXItd2lkdGggKiAtMC4yLCAkaGFtYnVyZ2VyLWxheWVyLXdpZHRoICogMC4yNSwgMCkgcm90YXRlKDQ1ZGVnKSBzY2FsZSgwLjcsIDEpO1xuICAgICAgICAgIHRyYW5zaXRpb246IGJvdHRvbSAwLjFzIGVhc2UsXG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtIDAuMTVzIDAuMXMgY3ViaWMtYmV6aWVyKDAuODk1LCAwLjAzLCAwLjY4NSwgMC4yMik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */
