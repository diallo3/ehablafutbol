@import url(https://fonts.googleapis.com/css?family=Roboto:100,300,400,500);

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -ms-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInDownBig {
  0% {
    opacity: 0;
    -ms-transform: translateY(-2000px);
    transform: translateY(-2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    -ms-transform: translateX(-20px);
    transform: translateX(-20px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    -ms-transform: translateX(-2000px);
    transform: translateX(-2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInRight {
  0% {
    opacity: 0;
    -ms-transform: translateX(20px);
    transform: translateX(20px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInRightBig {
  0% {
    opacity: 0;
    -ms-transform: translateX(2000px);
    transform: translateX(2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    -ms-transform: translateY(20px);
    transform: translateY(20px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeInUpBig {
  0% {
    opacity: 0;
    -ms-transform: translateY(2000px);
    transform: translateY(2000px); }
  100% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); } }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes fadeOutDown {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(20px);
    transform: translateY(20px); } }

@keyframes fadeOutDownBig {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(2000px);
    transform: translateY(2000px); } }

@keyframes fadeOutLeft {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(-20px);
    transform: translateX(-20px); } }

@keyframes fadeOutLeftBig {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(-2000px);
    transform: translateX(-2000px); } }

@keyframes fadeOutRight {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(20px);
    transform: translateX(20px); } }

@keyframes fadeOutRightBig {
  0% {
    opacity: 1;
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    opacity: 0;
    -ms-transform: translateX(2000px);
    transform: translateX(2000px); } }

@keyframes fadeOutUp {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(-20px);
    transform: translateY(-20px); } }

@keyframes fadeOutUpBig {
  0% {
    opacity: 1;
    -ms-transform: translateY(0);
    transform: translateY(0); }
  100% {
    opacity: 0;
    -ms-transform: translateY(-2000px);
    transform: translateY(-2000px); } }

@keyframes zoomIn {
  0% {
    opacity: 0;
    -ms-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3); }
  50% {
    opacity: 1; } }

@keyframes zoomInDown {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0); } }

@keyframes zoomInLeft {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0); } }

@keyframes zoomInRight {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0); } }

@keyframes zoomInUp {
  0% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0); }
  60% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0); } }

@keyframes zoomOut {
  0% {
    opacity: 1; }
  50% {
    opacity: 0;
    -ms-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3); }
  100% {
    opacity: 0; } }

@keyframes zoomOutDown {
  40% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0); }
  100% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    -ms-transform-origin: center bottom;
    transform-origin: center bottom; } }

@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0); }
  100% {
    opacity: 0;
    -ms-transform: scale(0.1) translate3d(-2000px, 0, 0);
    transform: scale(0.1) translate3d(-2000px, 0, 0);
    -ms-transform-origin: left center;
    transform-origin: left center; } }

@keyframes zoomOutRight {
  40% {
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0); }
  100% {
    opacity: 0;
    -ms-transform: scale(0.1) translate3d(2000px, 0, 0);
    transform: scale(0.1) translate3d(2000px, 0, 0);
    -ms-transform-origin: right center;
    transform-origin: right center; } }

@keyframes zoomOutUp {
  40% {
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    opacity: 1;
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0); }
  100% {
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    opacity: 0;
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    -ms-transform-origin: center bottom;
    transform-origin: center bottom; } }

/*--------------------------------
	Framework
*/
/**
 * Foundation for Sites by ZURB
 * Version 6.2.4
 * foundation.zurb.com
 * Licensed under MIT Open Source
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS and IE text size adjust after device orientation change,
   *    without disabling user zoom.
   */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
   * Remove default margin.
   */
body {
  margin: 0; }

/* HTML5 display definitions
     ========================================================================== */
/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
   */
[hidden],
template {
  display: none; }

/* Links
     ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * Improve readability of focused elements when they are also in an
   * active/hover state.
   */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
     ========================================================================== */
/**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */
abbr[title] {
  border-bottom: 1px dotted; }

/**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */
b,
strong {
  font-weight: bold; }

/**
   * Address styling not present in Safari and Chrome.
   */
dfn {
  font-style: italic; }

/**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
   * Address inconsistent and variable font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
     ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
     ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
   * Address differences between Firefox and other browsers.
   */
hr {
  box-sizing: content-box;
  height: 0; }

/**
   * Contain overflow in all browsers.
   */
pre {
  overflow: auto; }

/**
   * Address odd `em`-unit font size rendering in all browsers.
   */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
     ========================================================================== */
/**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */
/**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */
button,
select {
  text-transform: none; }

/**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
   * Re-set default cursor for disabled elements.
   */
button[disabled],
html input[disabled] {
  cursor: not-allowed; }

/**
   * Remove inner padding and border in Firefox 4+.
   */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
   */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * Define consistent border, margin, and padding.
   * [NOTE] We don't enable this ruleset in Foundation, because we want the <fieldset> element to have plain styling.
   */
/* fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  } */
/**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */
optgroup {
  font-weight: bold; }

/* Tables
     ========================================================================== */
/**
   * Remove most spacing between table cells.
   */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em"; }

html {
  font-size: 100%;
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }
  [data-whatinput='mouse'] button {
    outline: 0; }

.is-visible {
  display: block !important; }

.is-hidden {
  display: none !important; }

/*--------------------------------
	App
*/
/*--------------------------------
  
  Useful Mixins
*/
/*--------------------------------

 	Usage
   	@include font-face('Ubuntu', '../fonts');
   	
 	Output CSS
   	@font-face {
    	font-family: 'Ubuntu';
     	src: url('../fonts.eot');
     	src: url('../fonts.eot?#iefix') format('embedded-opentype'),
        	url('../fonts.woff2') format('woff2'),
          	url('../fonts.woff') format('woff'),
          	url('../fonts.ttf') format('truetype'),
          	url('../fonts.svg#Ubuntu) format('svg');
     	font-weight: 400;
     	font-style: normal;
   	}

   	@media screen and (-webkit-min-device-pixel-ratio: 0) {
    	@font-face {
       		font-family: 'Ubuntu';
       		src: url('../fonts.svg#Ubuntu') format('svg');
     	}
   	}
*/
/*--------------------------------
	Antialiased
*/
/*--------------------------------

	Font Size with rem
	
	Usage
	p {
	  @include font-size(14px)
	}

	Output
	p {
	  font-size: 14px; //Will be overridden if browser supports rem
	  font-size: 0.8rem;
	}
*/
/*--------------------------------

	Line-height values in both pixels and rems

	Usage
  	.foo {
    	@include line-height(16);
  	}

	Output
  	.foo {
	    line-height: 16px;
	    line-height: 1rem;
  	}
*/
/*--------------------------------
  Headings
*/
/*--------------------------------
	Text Indent
*/
/*--------------------------------

	Usage
   .foo {
    	@include word-wrap();
   	}

 	Output
   .foo {
    	hyphens: auto;
    	overflow-wrap: break-word;
    	word-wrap: break-word;
   }
*/
/*--------------------------------
	Clearfix
*/
/*--------------------------------
	Hide text
	example:
	.element {
		@include hide-text;
	}
*/
/*--------------------------------
	Hide from both screenreaders and browsers
*/
/*--------------------------------
	Hide only visually, but have it available for screenreaders
*/
/*--------------------------------
	Allow the element to be focusable when navigated to via the keyboard
*/
/*--------------------------------
	Hide visually and from screenreaders, but maintain layout
*/
/*--------------------------------

	Form input placeholder text
	example:
	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}

*/
/*--------------------------------
	Fluid Property
	http://www.adrenalinmedia.com.au/the-agency/insights/this-changes-everything-css-fluid-properties.aspx
	HTML:
	<h1 class="element">
		<span>Text to replace</span>
	</h1>
	example:
	h1 {
		@include fp(font-size, 50, 100); // 50px at 320, 100px at 1920;
	}
	output:
	h1 {
		font-size: calc(3.125vw + 40px); //This is the magic!
	}
	@media (max-width:320px){ //Clips the start to the min value
		font-size:50px;
	}
	@media (min-width:1920px){ //Clips the end to the max value
		font-size:100px;
	}
*/
/*--------------------------------
  Breakpoints
*/
/*--------------------------------
    Zero out
*/
/*--------------------------------
	
	Pseudo

	Usage
	div::after {
	    @include pseudo;
	    top: -1rem; left: -1rem;
	    width: 1rem; height: 1rem;
	}
*/
/*--------------------------------

    Usage
   .foo {
        @include width(1500px, 300px);
    }

    Output
   .foo {
        max-width: 1500px;
        min-width: 300px;
        width: 100%;
   }
*/
/*--------------------------------
	Vertical Align
*/
/*--------------------------------
	Center Block
*/
/*--------------------------------
	Absolute Positioning
*/
/*--------------------------------
  Center Align
*/
/*--------------------------------
    Menu list
*/
/*--------------------------------
    Center list
*/
/*--------------------------------
	B/W Opacity
*/
/*--------------------------------
	Prefixers (to be used with Bourbon)
*/
/* -------------------------------

	Circle

_------------------------------- */
/* -------------------------------

	Animations

	Usage:
	@include keyframes(move-the-object) {
	  0%   { left: 100px; }
	  100% { left: 200px; }
	}

	.object-to-animate {
	  @include animation('move-the-object .5s 1', 'move-the-object-again .5s 1 .5s');
	} 
	
_------------------------------- */
/*--------------------------------
	Variables
*/
/*--------------------------------
    Site
*/
/*--------------------------------
	Breakpoints
*/
/*--------------------------------
	Paths
*/
/*--------------------------------
	Google Fonts
*/
/*--------------------------------
    z-index 
*/
/*--------------------------------
    header height
*/
/*--------------------------------
    intro height
*/
/*--------------------------------
    secondary bar
*/
/*--------------------------------
    Buttons
*/
body {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "Roboto", sans-serif; }
  body * {
    color: #fefefe; }

h1 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h1 sup {
    font-size: 0.8125rem;
    top: -20px; }

h2 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h2 sup {
    font-size: 0.8125rem;
    top: -20px; }

h3 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h3 sup {
    font-size: 0.8125rem;
    top: -20px; }

h4 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h4 sup {
    font-size: 0.8125rem;
    top: -20px; }

h5 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h5 sup {
    font-size: 0.8125rem;
    top: -20px; }

h6 {
  color: #fefefe;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2); }
  h6 sup {
    font-size: 0.8125rem;
    top: -20px; }

h1 {
  margin: 0 0 2.5rem; }

h2 {
  margin: 0 0 2.5rem; }

h3 {
  margin: 0 0 2.5rem; }

h4 {
  margin: 0 0 2.5rem; }

h5 {
  margin: 0 0 2.5rem; }

h6 {
  margin: 0 0 2.5rem; }

h2 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h2 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h2 {
      font-size: 2.55556rem; } }
  h2.sub-title {
    margin-bottom: 2em; }

h3 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h3 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h3 {
      font-size: 2.55556rem; } }
  h3.sub-title {
    margin-bottom: 2em; }

h4 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h4 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h4 {
      font-size: 2.55556rem; } }
  h4.sub-title {
    margin-bottom: 2em; }

h5 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h5 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h5 {
      font-size: 2.55556rem; } }
  h5.sub-title {
    margin-bottom: 2em; }

h6 {
  font-size: 1.75rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h6 {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    h6 {
      font-size: 2.55556rem; } }
  h6.sub-title {
    margin-bottom: 2em; }

h3 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h3 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h3 {
      font-size: 1.55556rem; } }

h4 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h4 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h4 {
      font-size: 1.55556rem; } }

h5 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h5 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h5 {
      font-size: 1.55556rem; } }

h6 {
  font-size: 1.125rem;
  margin: 0 0 .3rem; }
  @media all and (min-width: 768px) {
    h6 {
      font-size: 1.5rem; } }
  @media all and (min-width: 1024px) {
    h6 {
      font-size: 1.55556rem; } }

sup {
  font-size: 0.625rem;
  position: relative;
  top: -10px; }

a {
  transition: all 0.3s ease-in-out;
  color: #fefefe;
  text-decoration: none; }

p {
  font-size: 100%;
  color: #cbcbcb;
  font-weight: 400;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);
  margin-top: 0; }
  @media all and (min-width: 667px) {
    p {
      font-size: 112.5%; } }
  @media all and (min-width: 1024px) {
    p {
      font-size: 112.5%; } }

hr {
  background-image: linear-gradient(to right, transparent, rgba(128, 128, 128, 0.35), transparent);
  border: 0;
  margin: 2.5em 0;
  height: 1px; }

.cd-main-nav a {
  font-size: 0.875rem;
  font-weight: 400;
  text-transform: uppercase; }

.cta {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: rgba(254, 254, 254, 0.3);
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 3rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer; }
  .cta:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-layers.svg);
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cta:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cta:active {
    background: #990000;
    top: 2px; }
    .cta:active:before {
      color: #703b87; }
  .cta:hover {
    background-color: #C00; }
    .cta:hover:before {
      right: 0;
      left: 0; }
    .cta:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cta span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

.cta-alt {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: #7DC855;
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 3rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer; }
  .cta-alt:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-mail.svg);
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cta-alt:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cta-alt:active {
    background: #004415;
    top: 2px; }
    .cta-alt:active:before {
      color: #703b87; }
  .cta-alt:hover {
    background-color: #007725; }
    .cta-alt:hover:before {
      right: 0;
      left: 0; }
    .cta-alt:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cta-alt span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

.site-nav li a, .site-nav li b, .cd-slide-nav li a, .cd-slide-nav li b, .page-nav li a, .page-nav li b {
  color: rgba(254, 254, 254, 0.45);
  font-size: 0.8125rem;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase; }
  .site-nav li a:hover, .site-nav li b:hover, .cd-slide-nav li a:hover, .cd-slide-nav li b:hover, .page-nav li a:hover, .page-nav li b:hover {
    color: #fefefe; }
  .site-nav li a:hover b, .site-nav li a.active b, .site-nav li b:hover b, .site-nav li b.active b, .cd-slide-nav li a:hover b, .cd-slide-nav li a.active b, .cd-slide-nav li b:hover b, .cd-slide-nav li b.active b, .page-nav li a:hover b, .page-nav li a.active b, .page-nav li b:hover b, .page-nav li b.active b {
    color: #fefefe; }

/*--------------------------------

	Hero and Sections
    
--------------------------------*/
#cd-intro .title h1 {
  font-size: 3rem;
  line-height: 1.1;
  font-weight: 400;
  text-transform: uppercase;
  padding: 0 1em; }
  @media all and (min-width: 768px) {
    #cd-intro .title h1 {
      font-size: 3.25rem;
      line-height: 2; } }
  @media all and (min-width: 1024px) {
    #cd-intro .title h1 {
      font-size: 4.33333rem;
      line-height: 1.5; } }
  #cd-intro .title h1 span {
    padding: 0 0 .3em; }
  #cd-intro .title h1 .tag {
    font-size: 1rem;
    font-weight: 300;
    text-transform: normal;
    display: block; }
    @media all and (min-width: 768px) {
      #cd-intro .title h1 .tag {
        font-size: 1.25rem; } }
    @media all and (min-width: 1024px) {
      #cd-intro .title h1 .tag {
        font-size: 1.77778rem; } }
    @media all and (min-width: 668px) {
      #cd-intro .title h1 .tag {
        margin-right: auto;
        margin-left: auto;
        display: block;
        max-width: 80%; } }
  #cd-intro .title h1 .end-tag i {
    font-style: normal; }

#cd-intro.is-loaded .tag:nth-child(1) {
  animation-name: fadeInDown;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 0.5s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

#cd-intro.is-loaded .tag:nth-child(2) {
  animation-name: fadeInDown;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 1s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

#cd-intro.is-loaded .end-tag {
  animation-name: fadeIn;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
  animation-delay: 1.5s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }
  #cd-intro.is-loaded .end-tag i {
    animation-name: fadeIn;
    animation-iteration-count: 1;
    animation-duration: 0.8s;
    animation-delay: 2s;
    animation-timing-function: ease;
    animation-fill-mode: both;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden; }

.cd-section:not(.hero) .title {
  font-size: 1.75rem; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero) .title {
      font-size: 2.375rem; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero) .title {
      font-size: 2.55556rem; } }

.cd-section:not(.hero) .small-title {
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin-bottom: 2.5rem;
  padding: .5em 0;
  display: block; }

.cd-section:not(.hero) p {
  font-size: 1.25rem; }

.cd-section:not(.hero).summary .title {
  font-size: 3rem;
  line-height: 1.1;
  text-transform: uppercase; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero).summary .title {
      font-size: 3.25rem;
      line-height: 2; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero).summary .title {
      font-size: 4.33333rem;
      line-height: 1.5; } }

.cd-section:not(.hero).summary p {
  font-size: 1rem; }
  @media all and (min-width: 768px) {
    .cd-section:not(.hero).summary p {
      font-size: 1.25rem; } }
  @media all and (min-width: 1024px) {
    .cd-section:not(.hero).summary p {
      font-size: 1.77778rem; } }

.cd-section:not(.hero).summary footer a {
  transition: all 0.3s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  color: #fefefe;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  background: #7DC855;
  border: 1px solid rgba(254, 254, 254, 0.8);
  border-radius: 2px;
  padding: 1rem 3rem;
  display: inline-block;
  overflow: hidden;
  position: relative;
  cursor: pointer; }
  .cd-section:not(.hero).summary footer a:before {
    transition: all 0.3s;
    content: "";
    background-image: url(../img/icon-mail.svg);
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: -100%;
    speak: none;
    -webkit-font-smoothing: antialiased; }
  .cd-section:not(.hero).summary footer a:after {
    transition: all 0.3s;
    content: "";
    position: absolute;
    z-index: -1; }
  .cd-section:not(.hero).summary footer a:active {
    background: #004415;
    top: 2px; }
    .cd-section:not(.hero).summary footer a:active:before {
      color: #703b87; }
  .cd-section:not(.hero).summary footer a:hover {
    background-color: #007725; }
    .cd-section:not(.hero).summary footer a:hover:before {
      right: 0;
      left: 0; }
    .cd-section:not(.hero).summary footer a:hover span {
      -ms-transform: translateX(200%);
      transform: translateX(200%); }
  .cd-section:not(.hero).summary footer a span {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: inline-block;
    width: 100%;
    height: 100%; }

/* -------------------------------- 

 Default Pages 

-------------------------------- */
.page-content * {
  color: #4a4a4a;
  text-shadow: none; }

body {
  background-color: #0a0a0a;
  height: 100%; }

figure {
  margin: 0;
  padding: 0; }

.ov {
  margin: auto;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.main-scene {
  margin: 0;
  padding: 0;
  transition-timing-function: ease-in;
  animation-duration: 1.2s;
  animation-fill-mode: both; }

.bcg {
  margin: auto;
  position: absolute;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  background-size: cover;
  background-color: #0a0a0a;
  background-repeat: no-repeat;
  background-position: 75% 50%;
  width: 100%;
  height: 100%;
  z-index: auto; }
  @media all and (min-width: 1025px) {
    .bcg {
      background-position: 100% 0;
      width: 100%;
      height: 120%; } }

/* -------------------------------- 

Hero components 

-------------------------------- */
.header-container .bcg {
  background-image: url(../img/img-bck-hero.jpg); }
  @media all and (min-width: 1025px) {
    .header-container .bcg {
      background-size: 120%; } }

.header-container .ov {
  background-color: black;
  background-image: linear-gradient(to top,black, transparent, black);
  background-color: transparent;
  opacity: .85; }

#cd-community .bcg {
  background-image: url(../img/img-bck-community.jpg);
  background-position: 48% -10%; }

#cd-connection .bcg {
  background-image: url(../img/img-bck-connection.jpg);
  background-position: 0 0; }

#cd-experience .bcg {
  background-image: url(../img/img-bck-experience.jpg);
  background-position: 0 0; }

#cd-engage .bcg {
  background-image: url(../img/img-bck-engage.jpg);
  background-position: 48% 0; }

#cd-summary .bcg {
  background-image: url(../img/img-bck-summary.jpg);
  background-position: 50% 0; }

/* -------------------------------- 

    Main components 

-------------------------------- */
.cd-section {
  animation-name: fadeIn;
  animation-iteration-count: 1;
  animation-duration: 1s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  overflow: hidden;
  position: relative;
  z-index: 1; }

.cd-section:not(.hero) {
  background-color: #0a0a0a;
  border-bottom: 1px solid rgba(255, 255, 255, 0.4);
  padding-top: 30%;
  width: 100%;
  height: 800px; }
  @media all and (min-width: 668px) {
    .cd-section:not(.hero) {
      height: 100vh;
      min-height: 800px; } }
  .cd-section:not(.hero):before, .cd-section:not(.hero):after {
    content: "";
    display: table; }
  .cd-section:not(.hero):after {
    clear: both; }
  @media all and (min-width: 668px) and (max-width: 1024px) {
    .cd-section:not(.hero) {
      padding-top: 12.5rem; } }
  @media all and (min-width: 1025px) {
    .cd-section:not(.hero) {
      padding-top: 12%; } }
  .cd-section:not(.hero) .ov {
    background-color: rgba(0, 0, 0, 0.7); }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero) .ov {
        background-color: rgba(0, 0, 0, 0.4); } }
  .cd-section:not(.hero) .bcg {
    transition: opacity 1.1s linear;
    opacity: .2; }
    .cd-section:not(.hero) .bcg.bcg-visible {
      opacity: 1; }
  .cd-section:not(.hero) .entry {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto;
    padding: 0 1em 1em;
    position: relative; }
    .cd-section:not(.hero) .entry:before, .cd-section:not(.hero) .entry:after {
      content: "";
      display: table; }
    .cd-section:not(.hero) .entry:after {
      clear: both; }
    .cd-section:not(.hero) .entry .icon {
      margin-right: auto;
      margin-left: auto;
      display: block;
      margin-bottom: 1em;
      width: 40px;
      height: 40px;
      display: block; }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .icon {
          margin: auto;
          position: absolute;
          top: 0;
          right: auto;
          bottom: auto;
          left: 0.9375rem; } }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .icon {
          margin: auto;
          position: absolute;
          top: 0;
          right: auto;
          bottom: auto;
          left: 2.7rem; } }
    .cd-section:not(.hero) .entry .content {
      width: 100%;
      float: left;
      text-align: center;
      opacity: 0; }
      @media screen and (min-width: 41.6875em) {
        .cd-section:not(.hero) .entry .content {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .cd-section:not(.hero) .entry .content {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .cd-section:not(.hero) .entry .content:last-child:not(:first-child) {
        float: right; }
      .cd-section:not(.hero) .entry .content:last-child:last-child {
        float: left; }
      @media all and (min-width: 668px) {
        .cd-section:not(.hero) .entry .content {
          width: 100%;
          float: left;
          text-align: left;
          padding-left: 5em; } }
      @media all and (min-width: 1025px) {
        .cd-section:not(.hero) .entry .content {
          width: 58.33333%;
          float: left;
          padding-left: 5em; } }
      .cd-section:not(.hero) .entry .content .section-title {
        margin-bottom: 2em; }
      .cd-section:not(.hero) .entry .content.content-visible {
        opacity: 1; }
        .cd-section:not(.hero) .entry .content.content-visible .icon {
          animation-name: fadeIn;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 1s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .small-title {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.3s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .title {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.5s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible p {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 0.8s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
        .cd-section:not(.hero) .entry .content.content-visible .section-footer {
          animation-name: fadeInUp;
          animation-iteration-count: 1;
          animation-duration: 0.5s;
          animation-delay: 1s;
          animation-timing-function: ease;
          animation-fill-mode: both;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }
  .cd-section:not(.hero).summary .entry .content {
    width: 100%;
    float: left;
    text-align: center; }
    @media screen and (min-width: 41.6875em) {
      .cd-section:not(.hero).summary .entry .content {
        padding-left: 0.625rem;
        padding-right: 0.625rem; } }
    @media screen and (min-width: 48em) {
      .cd-section:not(.hero).summary .entry .content {
        padding-left: 0.9375rem;
        padding-right: 0.9375rem; } }
    .cd-section:not(.hero).summary .entry .content:last-child:not(:first-child) {
      float: right; }
  @media all and (min-width: 668px) and (max-width: 1024px) {
    .cd-section:not(.hero).info-graphic .entry {
      -ms-transform: translateY(0);
      transform: translateY(0);
      top: auto;
      bottom: auto; } }
  .cd-section:not(.hero).info-graphic .entry .content {
    margin-bottom: 5em; }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero).info-graphic .entry .content {
        width: 50%;
        float: left; } }
  .cd-section:not(.hero).info-graphic .entry .featured {
    text-align: center;
    width: 80%;
    display: none; }
    @media all and (min-width: 668px) and (max-width: 1024px) {
      .cd-section:not(.hero).info-graphic .entry .featured {
        width: 100%;
        float: left;
        display: block; } }
    @media all and (min-width: 1025px) {
      .cd-section:not(.hero).info-graphic .entry .featured {
        margin: auto;
        position: absolute;
        top: 0;
        right: 12%;
        bottom: auto;
        left: auto;
        width: 23.75rem;
        display: block; } }

/* -------------------------------- 

 Default Pages 

-------------------------------- */
.page-content {
  background-color: #fefefe;
  padding-bottom: 6.25rem; }
  .page-content .content .title-container {
    text-align: center;
    background-color: #eee;
    margin-bottom: 2rem;
    padding: 9.375rem 2rem 1.875rem;
    position: relative; }
  .page-content .content-entry {
    margin-right: auto;
    margin-left: auto;
    display: block;
    width: 100%;
    max-width: 70%; }
  .page-content .page-feature {
    margin-bottom: 2.5em; }

/* -------------------------------- 

	Cases

-------------------------------- */
.cd-main-content.project-open #cd-summary {
  display: none; }

#case-study-page .page-content {
  padding: 4.375rem 0 0; }

#case-study-page .cd-nav-trigger {
  transition: background 0.2s;
  color: transparent;
  white-space: nowrap;
  text-indent: 100%;
  background-color: rgba(10, 10, 10, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  width: 44px;
  height: 44px;
  overflow: hidden;
  position: fixed;
  top: 7.5rem;
  right: 3.5%;
  z-index: 5;
  opacity: 0; }
  #case-study-page .cd-nav-trigger.project-open {
    opacity: 1; }
  #case-study-page .cd-nav-trigger .cd-icon, #case-study-page .cd-nav-trigger .cd-icon::before, #case-study-page .cd-nav-trigger .cd-icon::after {
    /* Force Hardware Acceleration in WebKit */
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    background-color: #fefefe;
    border-radius: 2px;
    position: absolute; }
  .no-touch #case-study-page .cd-nav-trigger:hover {
    background-color: rgba(0, 0, 0, 0.8); }
  #case-study-page .cd-nav-trigger .cd-icon {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    transition: transform 0.3s, background-color 0.3s;
    width: 18px;
    height: 2px;
    /* middle line of the menu icon */
    display: inline-block; }
    #case-study-page .cd-nav-trigger .cd-icon::before, #case-study-page .cd-nav-trigger .cd-icon::after {
      transition: transform 0.3s;
      /* upper and lower lines of the menu icon */
      content: "";
      width: 100%;
      height: 100%;
      top: 0;
      right: 0; }
    #case-study-page .cd-nav-trigger .cd-icon::before {
      -ms-transform: translateY(-6px);
      transform: translateY(-6px); }
    #case-study-page .cd-nav-trigger .cd-icon::after {
      -ms-transform: translateY(6px);
      transform: translateY(6px); }
  #case-study-page .cd-nav-trigger.project-open .cd-icon {
    /* user selects a projects - transform the icon into a 'X' */
    background-color: rgba(254, 254, 254, 0); }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::before, #case-study-page .cd-nav-trigger.project-open .cd-icon::after {
      background-color: #fefefe; }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::before {
      -ms-transform: translateY(0) rotate(45deg);
      transform: translateY(0) rotate(45deg); }
    #case-study-page .cd-nav-trigger.project-open .cd-icon::after {
      -ms-transform: translateY(0) rotate(-45deg);
      transform: translateY(0) rotate(-45deg); }
  #case-study-page .cd-nav-trigger.nav-open .cd-icon {
    /* user opens the navigation - transform the icon into an arrow */
    -ms-transform: translateY(-50%) translateX(-50%) rotate(90deg);
    transform: translateY(-50%) translateX(-50%) rotate(90deg); }
    #case-study-page .cd-nav-trigger.nav-open .cd-icon::after {
      -ms-transform: translateX(-5px) translateY(3px) rotate(45deg) scaleX(0.5);
      transform: translateX(-5px) translateY(3px) rotate(45deg) scaleX(0.5); }
    #case-study-page .cd-nav-trigger.nav-open .cd-icon::before {
      -ms-transform: translateX(-5px) translateY(-3px) rotate(-45deg) scaleX(0.5);
      transform: translateX(-5px) translateY(-3px) rotate(-45deg) scaleX(0.5); }

.cd-case-container {
  background-color: #0a0a0a;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  position: relative; }
  .cd-case-container ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .cd-case-container ul li {
      float: none;
      position: relative; }
  .cd-case-container .single-case {
    transition: transform 0.4s;
    /* Force hardware acceleration */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    margin: auto;
    position: absolute;
    top: 0;
    right: auto;
    bottom: auto;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    cursor: pointer; }
    .cd-case-container .single-case:nth-of-type(2) {
      -ms-transform: translateY(33.33333%);
      transform: translateY(33.33333%); }
    .cd-case-container .single-case:nth-of-type(3) {
      -ms-transform: translateY(66.66667%);
      transform: translateY(66.66667%); }
    .cd-case-container .single-case.selected {
      -ms-transform: translateY(0);
      transform: translateY(0);
      background-color: #0a0a0a;
      cursor: auto; }
      .cd-case-container .single-case.selected .cd-title {
        border: 0;
        overflow: visible; }
        .cd-case-container .single-case.selected .cd-title:before {
          height: 300%;
          opacity: .3; }
      .cd-case-container .single-case.selected .excerpt {
        display: block; }
    .cd-case-container .single-case.selected ~ li {
      /* hide siblings projects */
      -ms-transform: translateY(100%);
      transform: translateY(100%); }
  .cd-case-container.nav-open .single-case {
    -ms-transform: translateY(91%);
    transform: translateY(91%);
    box-shadow: 0 0 30px rgba(10, 10, 10, 0.5); }
    .cd-case-container.nav-open .single-case:nth-of-type(2) {
      -ms-transform: translateY(94%);
      transform: translateY(94%); }
    .cd-case-container.nav-open .single-case:nth-of-type(3) {
      -ms-transform: translateY(97%);
      transform: translateY(97%); }
  .cd-case-container.nav-open:hover .single-case {
    -ms-transform: translateY(88%);
    transform: translateY(88%); }
    .cd-case-container.nav-open:hover .single-case:nth-of-type(2) {
      -ms-transform: translateY(92%);
      transform: translateY(92%); }
    .cd-case-container.nav-open:hover .single-case:nth-of-type(3) {
      -ms-transform: translateY(96%);
      transform: translateY(96%); }

.cd-title {
  text-align: center;
  border-bottom: 1px solid rgba(255, 255, 255, 0.8);
  width: 100vw;
  height: 33.33333%;
  display: table;
  overflow: hidden;
  position: relative;
  z-index: 3; }
  .cd-title::before {
    margin: auto;
    position: absolute;
    top: 0;
    right: auto;
    bottom: auto;
    left: 0;
    transition: height 0.2s linear 0.08;
    /* background image */
    content: "";
    background-repeat: no-repeat;
    background-position: center center;
    width: 100%;
    height: 100%;
    opacity: .3; }
  .cd-title::after {
    /* line below title -  visible on hover */
    margin: auto;
    position: absolute;
    top: calc(50% + 30px);
    right: auto;
    bottom: auto;
    left: 50%;
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(0);
    transform: translateX(-50%) translateY(-50%) scaleX(0);
    transition: transform 0.2s;
    content: "";
    background-color: #fefefe;
    width: 60px;
    height: 1px; }
  .single-case:nth-of-type(1) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(1) .cd-title::before {
      background-image: url(../img/img-bck-case-redbull.jpg); }
  .single-case:nth-of-type(2) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(2) .cd-title::before {
      background-image: url(../img/img-bck-case-boost.jpg); }
  .single-case:nth-of-type(3) .cd-title {
    background-color: #0a0a0a; }
    .single-case:nth-of-type(3) .cd-title::before {
      background-image: url(../img/img-bck-case-eljimador.jpg); }
  .single-case:nth-of-type(1) .cd-title::before, .single-case:nth-of-type(2) .cd-title::before, .single-case:nth-of-type(3) .cd-title::before {
    background-size: cover; }
  .cd-title .title {
    transition: transform 0.4s;
    /* Force hardware acceleration */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    color: #fefefe;
    font-weight: 500;
    vertical-align: middle;
    padding: 0 2em;
    width: 100%;
    display: table-cell;
    position: relative; }
    @media all and (min-width: 1025px) {
      .cd-title .title {
        width: 70%; } }
    .cd-title .title * {
      color: #fefefe; }
    .cd-title .title h2 {
      font-weight: 500; }
    .cd-title .title .excerpt {
      display: none; }
  .no-touch .cd-title:hover::after {
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(1);
    transform: translateX(-50%) translateY(-50%) scaleX(1); }
  .no-touch .selected .cd-title:hover::after {
    transition: transform 0s;
    -ms-transform: translateX(-50%) translateY(-50%) scaleX(0);
    transform: translateX(-50%) translateY(-50%) scaleX(0); }
  .selected .cd-title .title {
    /* vertically center h2 in the full-height image*/
    -ms-transform: translateY(66.66667%);
    transform: translateY(66.66667%); }

.cd-case-info {
  margin: auto;
  position: absolute;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  transition: opacity 0.4s, visibility 0.4s;
  width: 100%;
  height: 100%;
  visibility: hidden;
  overflow: auto;
  z-index: 3;
  opacity: 0; }
  @media all and (min-width: 1025px) {
    .cd-case-info .content-wrapper {
      padding: 4em 0; } }
  .cd-case-info::before {
    /* use to push the .content-wrapper below the intro project image */
    content: "";
    width: 100%;
    height: 100%;
    display: block;
    pointer-events: none; }
  .cd-case-info .content-wrapper {
    background-color: #fefefe;
    padding: 2em 0 3em;
    position: relative;
    z-index: 2; }
  .selected .cd-case-info {
    transition: opacity 0s, visibility 0s;
    visibility: visible;
    opacity: 1;
    -webkit-overflow-scrolling: touch; }
  .cd-case-info.has-boxshadow .content-wrapper {
    /* add a box-shadow while scrolling over the background image */
    box-shadow: 0 -5px 30px rgba(10, 10, 10, 0.2); }

.cd-scroll {
  transition: opacity 0.4s, visibility 0.4s;
  left: 50%;
  right: auto;
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  /* scroll down arrow */
  color: transparent;
  white-space: nowrap;
  text-indent: 100%;
  background: transparent url(../img/cd-case-arrow.svg) no-repeat center center;
  width: 48px;
  height: 48px;
  visibility: hidden;
  overflow: hidden;
  position: fixed;
  top: calc(100% - 200px);
  z-index: 1;
  opacity: 0; }
  .project-open .cd-scroll {
    animation: cd-translate 1.2s 0.4s;
    animation-iteration-count: 2;
    visibility: visible;
    opacity: 1; }
  .project-open .has-boxshadow .cd-scroll {
    visibility: hidden;
    opacity: 0; }

@keyframes cd-translate {
  0% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); }
  50% {
    -ms-transform: translateY(10px) translateX(-50%);
    transform: translateY(10px) translateX(-50%); }
  100% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); } }

@keyframes cd-translate {
  0% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); }
  50% {
    -ms-transform: translateY(10px) translateX(-50%);
    transform: translateY(10px) translateX(-50%); }
  100% {
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); } }

/* -------------------------------- 

	Header

-------------------------------- */
.header-container {
  margin: 0;
  padding: 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  height: 100vh;
  position: relative;
  overflow: hidden; }

.cd-section.hero {
  padding-top: 50%;
  height: 75vh;
  min-height: 75vh;
  position: relative;
  overflow: visible; }
  .cd-section.hero .entry {
    text-align: center;
    width: 100%; }
    @media all and (min-width: 668px) {
      .cd-section.hero .entry {
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
        -ms-transform: translateX(-50%) translateY(-70%);
            transform: translateX(-50%) translateY(-70%); } }

.cd-header-container {
  position: relative;
  display: none; }
  @media all and (min-width: 1025px) {
    .cd-header-container {
      display: block; } }
  .cd-header-container .cd-header {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto; }
    .cd-header-container .cd-header:before, .cd-header-container .cd-header:after {
      content: "";
      display: table; }
    .cd-header-container .cd-header:after {
      clear: both; }
    .cd-header-container .cd-header nav {
      width: 50%;
      float: left;
      padding: 1.875rem 0 0; }
      @media screen and (min-width: 41.6875em) {
        .cd-header-container .cd-header nav {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .cd-header-container .cd-header nav {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .cd-header-container .cd-header nav:last-child:not(:first-child) {
        float: right; }
      .cd-header-container .cd-header nav ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        margin: 0;
        padding: 0;
        float: left;
        position: relative; }
        .cd-header-container .cd-header nav ul li {
          margin: 0;
          padding: 0 5px;
          float: left;
          position: relative;
          display: inline; }
          .cd-header-container .cd-header nav ul li:last-child {
            margin-right: 0; }
      .cd-header-container .cd-header nav.cd-main-nav {
        padding-top: 2.3em; }
        .cd-header-container .cd-header nav.cd-main-nav a {
          transition: all 0.3s;
          -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
          color: #fefefe;
          font-size: 16px;
          font-weight: 400;
          outline: none;
          background: rgba(254, 254, 254, 0.3);
          border: 1px solid rgba(254, 254, 254, 0.8);
          border-radius: 2px;
          padding: 1rem 3rem;
          display: inline-block;
          overflow: hidden;
          position: relative;
          cursor: pointer;
          font-size: 0.75rem;
          padding: 0.2rem 0.5rem;
          display: block; }
          .cd-header-container .cd-header nav.cd-main-nav a:active {
            background: #990000;
            top: 2px; }
            .cd-header-container .cd-header nav.cd-main-nav a:active:before {
              color: #703b87; }
          .cd-header-container .cd-header nav.cd-main-nav a:hover {
            background-color: #C00; }
      .cd-header-container .cd-header nav.cd-social ul {
        float: right; }

#cd-logo {
  margin: auto;
  position: absolute;
  top: auto;
  right: 0;
  bottom: auto;
  left: 0;
  width: 147px;
  height: 146px;
  top: 10px; }
  @media all and (min-width: 1025px) {
    #cd-logo.hidden {
      transition: left 0.3s, opacity 0.3s;
      margin-left: 0;
      position: fixed;
      top: -20%;
      left: -20%;
      z-index: 5;
      /* assign a position fixed and move outside the viewport (on the left) */
      opacity: 0; }
      #cd-logo.hidden.slide-in {
        /* slide in when the secondary navigation gets fixed */
        width: 127px;
        height: 126px;
        top: 10px;
        left: 5%;
        opacity: 1; }
      #cd-logo.hidden a, #cd-logo.hidden a:active, #cd-logo.hidden a:hover {
        width: 127px;
        height: 126px; } }
  #cd-logo img {
    display: block; }

.cta-entry, .ctas {
  text-align: center;
  overflow: hidden; }
  .cta-entry ul, .ctas ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
    .cta-entry ul li, .ctas ul li {
      float: none;
      position: relative; }
    @media all and (min-width: 668px) {
      .cta-entry ul, .ctas ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        margin: 0;
        padding: 0;
        float: left;
        position: relative;
        left: 50%; }
        .cta-entry ul li, .ctas ul li {
          margin: 0;
          padding: 0 0.8rem;
          float: left;
          position: relative;
          display: inline; }
          .cta-entry ul li:last-child, .ctas ul li:last-child {
            margin-right: 0; }
        .cta-entry ul li, .ctas ul li {
          right: 50%; } }
    .cta-entry ul li, .ctas ul li {
      margin-bottom: 0.5em; }

#home-page .cd-btn-head {
  display: none;
  position: fixed;
  top: -20%;
  right: -20%;
  z-index: 5; }
  @media all and (min-width: 1025px) {
    #home-page .cd-btn-head {
      display: block; } }
  #home-page .cd-btn-head.hidden {
    transition: right 0.3s, opacity 0.3s;
    margin-right: 0; }
    #home-page .cd-btn-head.hidden.slide-in {
      top: 12px;
      right: 3%; }
      @media all and (min-width: 668px) {
        #home-page .cd-btn-head.hidden.slide-in {
          opacity: 1; } }

/* -------------------------------- 

    Page Header

-------------------------------- */
.site-header {
  background-color: #0a0a0a;
  border-bottom: 2px solid #fefefe;
  height: 70px;
  width: 100%;
  position: fixed;
  z-index: 3; }
  .site-header #cd-logo {
    margin: auto;
    position: absolute;
    top: 10px;
    right: 0;
    bottom: auto;
    left: 0;
    width: 127px;
    height: 126px;
    opacity: 1; }
    @media all and (min-width: 668px) {
      .site-header #cd-logo {
        margin: auto;
        position: absolute;
        top: 10px;
        right: auto;
        bottom: auto;
        left: 5%; } }
  .site-header .cd-btn-head {
    margin: auto;
    position: absolute;
    top: 12px;
    right: 3%;
    bottom: auto;
    left: auto; }
    .site-header .cd-btn-head .social {
      display: none; }
      @media all and (min-width: 668px) {
        .site-header .cd-btn-head .social {
          display: block; } }

/* -------------------------------- 

    Navigation

-------------------------------- */
.cd-social ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  margin: 0;
  padding: 0;
  float: left;
  position: relative; }
  .cd-social ul li {
    margin: 0;
    padding: 0 5px;
    float: left;
    position: relative;
    display: inline; }
    .cd-social ul li:last-child {
      margin-right: 0; }
  .cd-social ul li:last-child {
    padding: 0; }
  .cd-social ul a {
    text-indent: 200%;
    text-align: left;
    font-size: 0;
    white-space: nowrap;
    overflow: hidden;
    padding: .6em 1em;
    width: 40px;
    height: 40px;
    display: block; }
    .cd-social ul a.fb {
      background: url(../img/icon-fb.svg) no-repeat 0 0; }
    .cd-social ul a.tw {
      background: url(../img/icon-tw.svg) no-repeat 0 0; }

.cd-social .hamburger {
  padding: 8px 5px;
  position: absolute;
  top: 0;
  left: 0; }

@media all and (min-width: 1025px) {
  body:not(.home) .cd-social ul li:last-child {
    display: none; } }

#cd-btn-menu {
  width: 50px; }

.mobile-index {
  width: 50px;
  height: 40px;
  display: block;
  position: fixed;
  top: 12px;
  right: 3%;
  z-index: 10; }
  @media all and (min-width: 668px) {
    .mobile-index {
      display: none; } }

/* -------------------------------- 

	Secondary Fixed Navigation

-------------------------------- */
.cd-secondary-nav {
  width: 100%;
  overflow: hidden; }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav {
      background-color: rgba(0, 0, 0, 0.4);
      z-index: 3;
      opacity: 1; } }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav {
      transition: height 0.3s;
      margin: auto;
      position: absolute;
      top: auto;
      right: auto;
      bottom: 0;
      left: auto;
      padding: 0.3rem 1.1rem 1.1rem;
      min-height: 70px; }
      .cd-secondary-nav nav, .cd-secondary-nav ul, .cd-secondary-nav li, .cd-secondary-nav a {
        height: 100%; } }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav.is-fixed {
      /* on Firefox CSS transition/animation fails when parent element changes position attribute*/
      /* so we defined to diffent classes: .is-fixed to change the position value and .is-animated to change childrens' attributes (padding and opacity)*/
      background-color: #0a0a0a;
      border-bottom: 2px solid #fefefe;
      padding: 0;
      width: 100%;
      height: 70px;
      position: fixed;
      top: 0;
      bottom: auto;
      left: 0; }
      .cd-secondary-nav.is-fixed.show-nav {
        transition: opacity 0.3s;
        opacity: 0; } }
  .cd-secondary-nav.animate-children {
    /* on Firefox CSS transition/animation fails when parent element changes position attribute*/
    /* so we defined to diffent classes: .is-fixed to change the position value and .is-animated to change childrens' attributes (padding and opacity)*/
    box-shadow: 0 1px 2px rgba(10, 10, 10, 0.2); }
    .cd-secondary-nav.animate-children .site-nav li a {
      padding: 1.5625rem 1.875rem 0 1.875rem; }
      .cd-secondary-nav.animate-children .site-nav li a span {
        opacity: 0; }
  .cd-secondary-nav .site-nav {
    margin: 0;
    padding: 0;
    -ms-transform: scale(0);
    transform: scale(0);
    -ms-transform-origin: 100% 100%;
    transform-origin: 100% 100%;
    transition: transform 0.3s, visibility 0s 0.3s;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    /* mobile first - secondary navigation hidden by default, triggered by tap/click on .cd-secondary-nav-trigger*/
    width: 90%;
    max-width: 400px;
    visibility: hidden;
    position: fixed;
    z-index: 1; }
    @media all and (min-width: 1025px) {
      .cd-secondary-nav .site-nav {
        -ms-transform: scale(1);
        transform: scale(1);
        text-align: center;
        width: auto;
        max-width: 100%;
        visibility: visible;
        /* reset navigation values */
        position: static; }
        .cd-secondary-nav .site-nav li {
          margin-left: -4px;
          display: inline-block; }
          .cd-secondary-nav .site-nav li a {
            transition: padding 0.2s;
            border-bottom: none;
            padding: 3.625rem 2.5rem 0 2.5rem;
            display: block;
            position: relative; }
            .cd-secondary-nav .site-nav li a span {
              left: 50%;
              right: auto;
              -ms-transform: translateX(-50%);
              transform: translateX(-50%);
              transition: opacity 0.2s;
              background-repeat: no-repeat;
              width: 40px;
              height: 40px;
              display: inline-block;
              position: absolute;
              top: 18px; } }
  .cd-secondary-nav .cd-slide-nav {
    margin: auto;
    position: absolute;
    top: 0;
    right: 0;
    bottom: auto;
    left: 0;
    margin: 0;
    padding: 0;
    list-style-type: none;
    -ms-transform: translateY(-100px);
    transform: translateY(-100px);
    transition: transform 0.3s 0.2s;
    text-align: center;
    background-color: #171717;
    height: 100px;
    z-index: 3; }
    .cd-secondary-nav .cd-slide-nav li {
      float: none;
      position: relative; }
    .cd-secondary-nav .cd-slide-nav.moves-out {
      -ms-transform: translateY(0);
      transform: translateY(0);
      height: 70px; }
    .cd-secondary-nav .cd-slide-nav li {
      margin-left: -4px;
      display: inline-block; }
      .cd-secondary-nav .cd-slide-nav li a {
        padding: 1.5625rem 1.875rem 0 1.875rem; }
  .cd-secondary-nav li a {
    padding: 1.6em;
    display: block; }

.cd-secondary-nav .site-nav.is-visible {
  -ms-transform: scale(1);
  transform: scale(1);
  transition: transform 0.3s, visibility 0s 0.1s, ease-in-out;
  margin: 0;
  padding: 0;
  list-style-type: none;
  background-color: rgba(0, 0, 0, 0.95);
  width: 100%;
  max-width: 100%;
  visibility: visible;
  bottom: 0;
  z-index: 3; }
  .cd-secondary-nav .site-nav.is-visible li {
    float: none;
    position: relative; }
  .cd-secondary-nav .site-nav.is-visible li {
    text-align: center;
    text-transform: uppercase; }
    .cd-secondary-nav .site-nav.is-visible li span {
      display: none; }
    .cd-secondary-nav .site-nav.is-visible li a {
      padding: 1.875rem;
      display: block; }

.cd-secondary-nav-trigger {
  white-space: nowrap;
  text-indent: 100%;
  background: rgba(204, 0, 0, 0.75);
  width: 44px;
  height: 44px;
  /* image replacement */
  overflow: hidden;
  position: fixed;
  right: 3%;
  bottom: 20px;
  z-index: 2; }
  @media all and (min-width: 1025px) {
    .cd-secondary-nav-trigger {
      display: none; } }
  .cd-secondary-nav-trigger span {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    transition: background 0.3s;
    background: #fefefe;
    border-radius: 50%;
    width: 4px;
    height: 4px;
    display: block;
    /* the span element is used to create the menu icon */
    position: absolute; }
    .cd-secondary-nav-trigger span::before, .cd-secondary-nav-trigger span::after {
      content: "";
      background: inherit;
      border-radius: 50%;
      width: 100%;
      height: 100%;
      position: absolute; }
    .cd-secondary-nav-trigger span::before {
      -ms-transform: rotate(0);
      transform: rotate(0);
      right: -10px; }
    .cd-secondary-nav-trigger span::after {
      -ms-transform: rotate(0);
      transform: rotate(0);
      left: -10px; }
  .cd-secondary-nav-trigger.menu-is-open {
    background: transparent; }
  .cd-secondary-nav-trigger.menu-is-open span {
    background: rgba(254, 254, 254, 0);
    width: 20px;
    height: 2px; }
    .cd-secondary-nav-trigger.menu-is-open span::before, .cd-secondary-nav-trigger.menu-is-open span::after {
      background: #fefefe;
      border-radius: 0;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0; }
    .cd-secondary-nav-trigger.menu-is-open span::before {
      -ms-transform: rotate(135deg);
      transform: rotate(135deg); }
    .cd-secondary-nav-trigger.menu-is-open span::after {
      -ms-transform: rotate(225deg);
      transform: rotate(225deg); }

.page-nav {
  display: none;
  margin: 0;
  padding: 0;
  list-style-type: none;
  text-align: center;
  height: 100px; }
  @media all and (min-width: 1025px) {
    .page-nav {
      display: block; } }
  .page-nav li {
    float: none;
    position: relative; }
  .page-nav li {
    margin-left: -4px;
    display: inline-block; }
    .page-nav li a {
      padding: 1.5625rem 1.875rem 0 1.875rem;
      display: block;
      position: relative; }

/* -------------------------------

    CTAs

------------------------------- */
.ctas {
  display: none; }
  @media all and (min-width: 1025px) {
    .ctas {
      position: fixed;
      top: auto;
      right: 0;
      bottom: 0;
      left: 0;
      -ms-transform: translateY(120px);
      transform: translateY(120px);
      transition-property: transform;
      transition-duration: 0.2s;
      transition-timing-function: ease-in-out;
      background-color: rgba(0, 0, 0, 0.3);
      padding: .5em 1em;
      width: 100vw;
      height: 80px;
      overflow: hidden;
      z-index: 10; }
      .ctas.is-visible {
        -ms-transform: translateY(0);
        transform: translateY(0); } }

/* Footer */
.footer-container {
  padding: 1.5em 0 1em; }
  .footer-container .footer-main {
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto; }
    .footer-container .footer-main:before, .footer-container .footer-main:after {
      content: "";
      display: table; }
    .footer-container .footer-main:after {
      clear: both; }
    .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
      width: 100%;
      float: left; }
      @media screen and (min-width: 41.6875em) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          padding-left: 0.625rem;
          padding-right: 0.625rem; } }
      @media screen and (min-width: 48em) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          padding-left: 0.9375rem;
          padding-right: 0.9375rem; } }
      .footer-container .footer-main .copyright:last-child:not(:first-child), .footer-container .footer-main .bck-top:last-child:not(:first-child) {
        float: right; }
      @media all and (min-width: 668px) {
        .footer-container .footer-main .copyright, .footer-container .footer-main .bck-top {
          width: 50%;
          float: left; } }
      .footer-container .footer-main .copyright p, .footer-container .footer-main .bck-top p {
        color: #999898;
        font-size: 1em;
        text-align: center; }
        @media all and (min-width: 668px) {
          .footer-container .footer-main .copyright p, .footer-container .footer-main .bck-top p {
            text-align: left; } }

/* -------------------------------- 

    Preloader 

-------------------------------- */
#preloader {
  color: #fefefe;
  background-color: #0a0a0a;
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 101; }
  #preloader #cd-logo-pre {
    position: absolute;
    left: 50%;
    -ms-transform: translateX(-50%);
        transform: translateX(-50%);
    padding: 8em 0 0;
    width: 167px;
    height: 120px; }
  #preloader .txt {
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%); }
  #preloader .txt-perc {
    font-size: 3.75rem;
    font-weight: 5;
    text-align: center;
    margin: 0 0 6px 0;
    max-width: 400px;
    opacity: 1; }
  #preloader .progress {
    background-color: rgba(254, 254, 254, 0.2);
    margin: 0 auto 15px auto;
    width: 100px;
    height: 5px; }
    #preloader .progress span {
      background-color: rgba(0, 119, 37, 0.8);
      width: 0;
      height: 100%;
      display: block; }
  #preloader.is-hidden {
    visibility: hidden;
    opacity: 0; }

.home.is-loading {
  overflow: hidden; }

/*
 * Pulse animation
*/

@keyframes pulse {
  0% {
    transform: scale(1); }
  50% {
    transform: scale(1.1); }
  100% {
    transform: scale(1); } }

.cd-pulse {
  animation: pulse 2s linear infinite;
  animation-name: pulse; }

/* -------------------------------

    Modal Content

--------------------------------- */
.zoomIn {
  animation-name: zoomIn;
  animation-iteration-count: 1;
  animation-duration: 0.2s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.zoomOut {
  animation-name: zoomOut;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.fadeInDownBig {
  animation-name: fadeInDownBig;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.fadeOutUpBig {
  animation-name: fadeOutUpBig;
  animation-iteration-count: 1;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: ease;
  animation-fill-mode: both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

#contactModal {
  background-image: url(../img/img-bck-hero.jpg);
  opacity: 0; }

.close-contactModal, .close-mobileMenu {
  position: absolute;
  left: 50%;
  -ms-transform: translateX(-50%);
      transform: translateX(-50%);
  text-align: center;
  border: 1px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  padding: .55em 0;
  width: 50px;
  height: 50px;
  display: inline-block;
  top: 5%;
  z-index: 10;
  cursor: pointer; }
  .close-contactModal:hover, .close-mobileMenu:hover {
    background: #C00; }
  .close-contactModal .close, .close-mobileMenu .close {
    width: 30px;
    height: 30px;
    display: inline-block;
    overflow: hidden;
    position: relative; }
    .close-contactModal .close::before, .close-contactModal .close::after, .close-mobileMenu .close::before, .close-mobileMenu .close::after {
      content: "";
      background: #fefefe;
      margin-top: -1px;
      width: 100%;
      height: 2px;
      position: absolute;
      top: 50%;
      left: 0; }
    .close-contactModal .close::before, .close-mobileMenu .close::before {
      -ms-transform: rotate(45deg);
      transform: rotate(45deg); }
    .close-contactModal .close::after, .close-mobileMenu .close::after {
      -ms-transform: rotate(-45deg);
      transform: rotate(-45deg); }
    .close-contactModal .close.big, .close-mobileMenu .close.big {
      -ms-transform: scale(3);
      transform: scale(3); }
    .close-contactModal .close.thick::before, .close-contactModal .close.thick::after, .close-mobileMenu .close.thick::before, .close-mobileMenu .close.thick::after {
      margin-top: -2px;
      height: 4px; }

.modal-content {
  text-align: center;
  background-color: rgba(0, 0, 0, 0.7);
  overflow: scroll;
  padding: 6em 1em 1em;
  width: 100%;
  height: 100%; }
  @media all and (min-width: 1025px) {
    .modal-content {
      padding: 8em 5em 5em; } }
  .modal-content .ov {
    background: rgba(0, 0, 0, 0.85); }
  .modal-content .entry {
    margin: 0 auto;
    position: relative; }
    @media all and (min-width: 1025px) {
      .modal-content .entry {
        max-width: 80%; } }

/*--------------------------------
    Form
*/
#formContainer .entry {
  text-align: left;
  padding-top: 1em; }

#formContainer .field-container {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto; }
  #formContainer .field-container:before, #formContainer .field-container:after {
    content: "";
    display: table; }
  #formContainer .field-container:after {
    clear: both; }
  @media all and (min-width: 1025px) {
    #formContainer .field-container [class*="form-"] {
      width: 50%;
      float: left;
      padding-left: 0.9375rem;
      padding-right: 0.9375rem; }
      #formContainer .field-container [class*="form-"]:last-child:not(:first-child) {
        float: right; } }

.cd-form {
  margin: 0 auto;
  padding-bottom: 1em; }
  .cd-form:before, .cd-form:after {
    content: "";
    display: table; }
  .cd-form:after {
    clear: both; }
  @media all and (min-width: 668px) {
    .cd-form legend + div {
      /* reduce margin-top for first form element after the legend */
      margin-top: 20px; }
    .cd-form h4, .cd-form .cd-label {
      font-size: 0.875rem;
      margin-bottom: 10px; }
    .cd-form input[type="text"], .cd-form input[type="email"], .cd-form textarea, .cd-form select {
      padding: 20px; } }
  .cd-form * {
    color: #fefefe; }
  .cd-form fieldset {
    margin: 0;
    padding: 0;
    border: none; }
  .cd-form legend {
    font-size: 2rem;
    margin-bottom: 20px;
    padding-bottom: 10px; }
  .cd-form h4, .cd-form .cd-label {
    font-size: 0.875rem;
    margin-bottom: 10px; }
  .cd-form .icon {
    position: relative; }
  .cd-form .cd-label {
    display: block; }
  .cd-form input, .cd-form textarea, .cd-form select, .cd-form label {
    color: #fefefe;
    font-size: 1.0625rem; }
  .cd-form input[type="text"], .cd-form input[type="email"], .cd-form input[type="tel"], .cd-form textarea, .cd-form select, .cd-form legend {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    appearance: none;
    width: 100%;
    display: block; }
  .cd-form input[type="text"], .cd-form input[type="email"], .cd-form input[type="tel"], .cd-form textarea, .cd-form select {
    box-shadow: inset 0 1px 1px rgba(10, 10, 10, 0.08);
    border: 1px solid rgba(254, 254, 254, 0.3);
    border-radius: .25em;
    /* general style for input elements */
    padding: 18px; }
    .cd-form input[type="text"]:focus, .cd-form input[type="email"]:focus, .cd-form input[type="tel"]:focus, .cd-form textarea:focus, .cd-form select:focus {
      color: #707070;
      outline: none;
      background-color: #fefefe 0.95;
      box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
      border-color: white; }
  .cd-form .message {
    min-height: 238px;
    overflow: auto;
    resize: vertical; }
  .cd-form .submit-container {
    text-align: center;
    clear: both;
    position: relative; }
    .cd-form .submit-container:before, .cd-form .submit-container:after {
      content: "";
      display: table; }
    .cd-form .submit-container:after {
      clear: both; }
    .cd-form .submit-container .submit {
      transition: all 0.3s;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
      color: #fefefe;
      font-size: 16px;
      font-weight: 400;
      outline: none;
      background: rgba(254, 254, 254, 0.3);
      border: 1px solid rgba(254, 254, 254, 0.8);
      border-radius: 2px;
      padding: 1rem 3rem;
      display: inline-block;
      overflow: hidden;
      position: relative;
      cursor: pointer;
      color: #b3b1b1;
      font-size: 1.125rem;
      text-transform: uppercase;
      border: 1px solid #cccbcb;
      padding: 1em 2.5em;
      cursor: pointer; }
      .cd-form .submit-container .submit:active {
        background: #990000;
        top: 2px; }
        .cd-form .submit-container .submit:active:before {
          color: #703b87; }
      .cd-form .submit-container .submit:hover {
        background-color: #C00; }
      .cd-form .submit-container .submit:hover, .cd-form .submit-container .submit:focus {
        color: #fefefe;
        outline: none;
        background: #C00; }
  .cd-form [required] {
    background: url("../img/cd-required.svg") no-repeat top right; }
  .cd-form .error-message p {
    color: #fff;
    font-size: 0.9375rem;
    text-align: center;
    background: #c00;
    border-radius: .25em;
    margin: 0 !important;
    padding: 16px; }
  .cd-form .error {
    border-color: #c00 !important; }

@keyframes cd-bounce {
  0%, 100% {
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -ms-transform: scale(0.8);
    transform: scale(0.8); } }

/* -------------------------------- 
Custom icons
-------------------------------- */
.cd-form .icon input, .cd-form .icon select, .cd-form .icon textarea {
  padding-left: 54px !important; }

.cd-form .user {
  background: #0a0a0a url("../img/cd-icon-user.svg") no-repeat 16px center; }

.cd-form [required].user {
  background: #0a0a0a url("../img/cd-icon-user.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .tel {
  background: #0a0a0a url("../img/cd-icon-phone.svg") no-repeat 16px center; }

.cd-form [required].tel {
  background: #0a0a0a url("../img/cd-icon-phone.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .email {
  background: #0a0a0a url("../img/cd-icon-email.svg") no-repeat 16px center; }

.cd-form [required].email {
  background: #0a0a0a url("../img/cd-icon-email.svg") no-repeat 16px center, url("../img/cd-required.svg") no-repeat top right; }

.cd-form .message {
  background: #0a0a0a url("../img/cd-icon-message.svg") no-repeat 16px 16px; }

.cd-form [required].message {
  background: #0a0a0a url("../img/cd-icon-message.svg") no-repeat 16px 16px, url("../img/cd-required.svg") no-repeat top right; }

/* -------------------------------- 
FLoating labels 
-------------------------------- */
@media all and (min-width: 668px) {
  .floating-labels legend + div {
    /* reduce margin-top for first form element after the legend */
    margin-top: 16px; }
  .floating-labels .cd-label {
    top: 20px; } }

.floating-labels [class*="form-"] div {
  margin: 28px 0; }

.floating-labels .cd-label {
  transition: top 0.2s, left 0.2s, font-size 0.2s;
  color: rgba(254, 254, 254, 0.5);
  font-size: 1.0625rem;
  position: absolute;
  top: 18px;
  left: 18px;
  cursor: text; }

.floating-labels .icon .cd-label {
  left: 56px; }

.floating-labels .icon .error {
  margin: auto;
  position: absolute;
  top: -18px;
  right: 0;
  bottom: auto;
  left: auto;
  color: #C00; }

.floating-labels .icon.has-error .cd-label {
  color: #C00; }

.floating-labels .icon.has-error input[type="text"], .floating-labels .icon.has-error input[type="email"], .floating-labels .icon.has-error input[type="tel"], .floating-labels .icon.has-error textarea, .floating-labels .icon.has-error select {
  color: #C00;
  border-color: #C00; }

.floating-labels .icon.has-success .cd-label {
  color: #007725; }

.floating-labels .icon.has-success input[type="text"], .floating-labels .icon.has-success input[type="email"], .floating-labels .icon.has-success input[type="tel"], .floating-labels .icon.has-success textarea, .floating-labels .icon.has-success select {
  color: #007725;
  border-color: #007725; }

.floating-labels .cd-label.float {
  /* move label out the input field */
  font-size: 0.6875rem;
  font-weight: 500;
  top: -18px;
  left: 0 !important; }

input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
  outline: none;
  background-color: white;
  box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
  border-color: white; }

input.rdr {
  outline: 0;
  background: none;
  border: none;
  width: 20px; }

.content-entry .cd-form input[type="text"], .content-entry .cd-form input[type="email"], .content-entry .cd-form input[type="tel"], .content-entry .cd-form textarea, .content-entry .cd-form select {
  color: rgba(0, 0, 0, 0.5);
  background-color: #fefefe;
  box-shadow: inset 0 1px 1px rgba(10, 10, 10, 0.08);
  border-color: #cccbcb; }
  .content-entry .cd-form input[type="text"]:focus, .content-entry .cd-form input[type="email"]:focus, .content-entry .cd-form input[type="tel"]:focus, .content-entry .cd-form textarea:focus, .content-entry .cd-form select:focus {
    color: #707070;
    outline: none;
    background-color: #fefefe 0.95;
    box-shadow: 0 0 5px rgba(10, 10, 10, 0.2);
    border-color: white; }

.content-entry .floating-labels .cd-label {
  color: rgba(10, 10, 10, 0.5); }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  color: inherit;
  font: inherit;
  text-transform: none;
  outline: 0;
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 15px 15px;
  display: inline-block;
  overflow: visible;
  cursor: pointer;
  transition-timing-function: linear;
  transition-duration: 0.15s;
  transition-property: opacity, filter; }
  .hamburger:hover {
    opacity: 0.7; }

.hamburger-box {
  width: 40px;
  height: 24px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  margin-top: -2px;
  display: block;
  top: 50%; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    background-color: #fff;
    border-radius: 4px;
    width: 40px;
    height: 4px;
    position: absolute;
    transition-timing-function: ease;
    transition-duration: .15s;
    transition-property: transform; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -10px; }
  .hamburger-inner::after {
    bottom: -10px; }

/*
   * Spin
   */
.hamburger--spin .hamburger-inner {
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spin .hamburger-inner::before {
    transition: top 0.1s 0.34s ease-in, opacity 0.1s ease-in; }
  .hamburger--spin .hamburger-inner::after {
    transition: bottom 0.1s 0.34s ease-in, transform 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spin.is-active .hamburger-inner {
  -ms-transform: rotate(225deg);
      transform: rotate(225deg);
  transition-delay: 0.14s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spin.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.14s ease-out; }
  .hamburger--spin.is-active .hamburger-inner::after {
    bottom: 0;
    -ms-transform: rotate(-90deg);
        transform: rotate(-90deg);
    transition: bottom 0.1s ease-out, transform 0.3s 0.14s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
